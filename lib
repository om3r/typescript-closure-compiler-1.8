/******************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved. \r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0  \r\n \r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \r\nMERCHANTABLITY OR NON-INFRINGEMENT. \r\n \r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\n/// <reference no-default-lib=\"true\"/>\r\n\r\n/////////////////////////////\r\n/// ECMAScript APIs\r\n/////////////////////////////\r\n\r\ndeclare var NaN: number;\r\ndeclare var Infinity: number;\r\n\r\ndeclare function eval(x: string): any;\r\ndeclare function parseInt(s: string, radix?: number): number;\r\ndeclare function parseFloat(string: string): number;\r\ndeclare function isNaN(number: number): boolean;\r\ndeclare function isFinite(number: number): boolean;\r\ndeclare function decodeURI(encodedURI: string): string;\r\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\r\ndeclare function encodeURI(uri: string): string;\r\ndeclare function encodeURIComponent(uriComponent: string): string;\r\n\r\ninterface PropertyDescriptor {\r\n    configurable?: boolean;\r\n    enumerable?: boolean;\r\n    value?: any;\r\n    writable?: boolean;\r\n    get? (): any;\r\n    set? (v: any): void;\r\n}\r\n\r\ninterface PropertyDescriptorMap {\r\n    [s: string]: PropertyDescriptor;\r\n}\r\n\r\ninterface Object {\r\n    toString(): string;\r\n    toLocaleString(): string;\r\n    valueOf(): Object;\r\n    hasOwnProperty(v: string): boolean;\r\n    isPrototypeOf(v: Object): boolean;\r\n    propertyIsEnumerable(v: string): boolean;\r\n\r\n    [s: string]: any;\r\n}\r\n\r\ndeclare var Object: {\r\n    new (value?: any): Object;\r\n    (): any;\r\n    (value: any): any;\r\n\r\n    prototype: Object;\r\n\r\n    getPrototypeOf(o: any): any;\r\n    getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor;\r\n    getOwnPropertyNames(o: any): string[];\r\n    create(o: any, properties?: PropertyDescriptorMap): any;\r\n    defineProperty(o: any, p: string, attributes: PropertyDescriptor): any;\r\n    defineProperties(o: any, properties: PropertyDescriptorMap): any;\r\n    seal(o: any): any;\r\n    freeze(o: any): any;\r\n    preventExtensions(o: any): any;\r\n    isSealed(o: any): boolean;\r\n    isFrozen(o: any): boolean;\r\n    isExtensible(o: any): boolean;\r\n    keys(o: any): string[];\r\n}\r\n\r\ninterface Function {\r\n    apply(thisArg: any, argArray?: any): any;\r\n    call(thisArg: any, ...argArray: any[]): any;\r\n    bind(thisArg: any, ...argArray: any[]): any;\r\n\r\n    prototype: any;\r\n    length: number;\r\n\r\n    // Non-standard extensions\r\n    arguments: any;\r\n    caller: Function;\r\n}\r\n\r\ndeclare var Function: {\r\n    new (...args: string[]): Function;\r\n    (...args: string[]): Function;\r\n    prototype: Function;\r\n}\r\n\r\ninterface IArguments {\r\n    [index: number]: any;\r\n    length: number;\r\n    callee: Function;\r\n}\r\n\r\ninterface String {\r\n    toString(): string;\r\n    charAt(pos: number): string;\r\n    charCodeAt(index: number): number;\r\n    concat(...strings: string[]): string;\r\n    indexOf(searchString: string, position?: number): number;\r\n    lastIndexOf(searchString: string, position?: number): number;\r\n    localeCompare(that: string): number;\r\n    match(regexp: string): string[];\r\n    match(regexp: RegExp): string[];\r\n    replace(searchValue: string, replaceValue: string): string;\r\n    replace(searchValue: string, replaceValue: (substring: string, ...args: any[]) => string): string;\r\n    replace(searchValue: RegExp, replaceValue: string): string;\r\n    replace(searchValue: RegExp, replaceValue: (substring: string, ...args: any[]) => string): string;\r\n    search(regexp: string): number;\r\n    search(regexp: RegExp): number;\r\n    slice(start: number, end?: number): string;\r\n    split(separator: string, limit?: number): string[];\r\n    split(separator: RegExp, limit?: number): string[];\r\n    substring(start: number, end?: number): string;\r\n    toLowerCase(): string;\r\n    toLocaleLowerCase(): string;\r\n    toUpperCase(): string;\r\n    toLocaleUpperCase(): string;\r\n    trim(): string;\r\n\r\n    length: number;\r\n\r\n    substr(from: number, length?: number): string;\r\n}\r\n\r\ndeclare var String: {\r\n    new (value?: any): String;\r\n    (value?: any): string;\r\n    prototype: String;\r\n    fromCharCode(...codes: number[]): string;\r\n}\r\n\r\ninterface Boolean {\r\n}\r\ndeclare var Boolean: {\r\n    new (value?: any): Boolean;\r\n    (value?: any): boolean;\r\n    prototype: Boolean;\r\n}\r\n\r\ninterface Number {\r\n    toString(radix?: number): string;\r\n    toFixed(fractionDigits?: number): string;\r\n    toExponential(fractionDigits?: number): string;\r\n    toPrecision(precision: number): string;\r\n}\r\n\r\ndeclare var Number: {\r\n    new (value?: any): Number;\r\n    (value?: any): number;\r\n    prototype: Number;\r\n    MAX_VALUE: number;\r\n    MIN_VALUE: number;\r\n    NaN: number;\r\n    NEGATIVE_INFINITY: number;\r\n    POSITIVE_INFINITY: number;\r\n}\r\n\r\ninterface Math {\r\n    E: number;\r\n    LN10: number;\r\n    LN2: number;\r\n    LOG2E: number;\r\n    LOG10E: number;\r\n    PI: number;\r\n    SQRT1_2: number;\r\n    SQRT2: number;\r\n    abs(x: number): number;\r\n    acos(x: number): number;\r\n    asin(x: number): number;\r\n    atan(x: number): number;\r\n    atan2(y: number, x: number): number;\r\n    ceil(x: number): number;\r\n    cos(x: number): number;\r\n    exp(x: number): number;\r\n    floor(x: number): number;\r\n    log(x: number): number;\r\n    max(...values: number[]): number;\r\n    min(...values: number[]): number;\r\n    pow(x: number, y: number): number;\r\n    random(): number;\r\n    round(x: number): number;\r\n    sin(x: number): number;\r\n    sqrt(x: number): number;\r\n    tan(x: number): number;\r\n}\r\n\r\ndeclare var Math: Math;\r\n\r\ninterface Date {\r\n    toString(): string;\r\n    toDateString(): string;\r\n    toTimeString(): string;\r\n    toLocaleString(): string;\r\n    toLocaleDateString(): string;\r\n    toLocaleTimeString(): string;\r\n    valueOf(): number;\r\n    getTime(): number;\r\n    getFullYear(): number;\r\n    getUTCFullYear(): number;\r\n    getMonth(): number;\r\n    getUTCMonth(): number;\r\n    getDate(): number;\r\n    getUTCDate(): number;\r\n    getDay(): number;\r\n    getUTCDay(): number;\r\n    getHours(): number;\r\n    getUTCHours(): number;\r\n    getMinutes(): number;\r\n    getUTCMinutes(): number;\r\n    getSeconds(): number;\r\n    getUTCSeconds(): number;\r\n    getMilliseconds(): number;\r\n    getUTCMilliseconds(): number;\r\n    getTimezoneOffset(): number;\r\n    setTime(time: number): void;\r\n    setMilliseconds(ms: number): void;\r\n    setUTCMilliseconds(ms: number): void;\r\n    setSeconds(sec: number, ms?: number): void;\r\n    setUTCSeconds(sec: number, ms?: number): void;\r\n    setMinutes(min: number, sec?: number, ms?: number): void;\r\n    setUTCMinutes(min: number, sec?: number, ms?: number): void;\r\n    setHours(hours: number, min?: number, sec?: number, ms?: number): void;\r\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): void;\r\n    setDate(date: number): void;\r\n    setUTCDate(date: number): void;\r\n    setMonth(month: number, date?: number): void;\r\n    setUTCMonth(month: number, date?: number): void;\r\n    setFullYear(year: number, month?: number, date?: number): void;\r\n    setUTCFullYear(year: number, month?: number, date?: number): void;\r\n    toUTCString(): string;\r\n    toISOString(): string;\r\n    toJSON(key?: any): string;\r\n}\r\n\r\ndeclare var Date: {\r\n    new (): Date;\r\n    new (value: number): Date;\r\n    new (value: string): Date;\r\n    new (year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\r\n    (): string;\r\n    prototype: Date;\r\n    parse(s: string): number;\r\n    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\r\n    now(): number;\r\n}\r\n\r\ninterface RegExpExecArray {\r\n    [index: number]: string;\r\n    length: number;\r\n\r\n    index: number;\r\n    input: string;\r\n\r\n    toString(): string;\r\n    toLocaleString(): string;\r\n    concat(...items: string[][]): string[];\r\n    join(separator?: string): string;\r\n    pop(): string;\r\n    push(...items: string[]): number;\r\n    reverse(): string[];\r\n    shift(): string;\r\n    slice(start: number, end?: number): string[];\r\n    sort(compareFn?: (a: string, b: string) => number): string[];\r\n    splice(start: number): string[];\r\n    splice(start: number, deleteCount: number, ...items: string[]): string[];\r\n    unshift(...items: string[]): number;\r\n\r\n    indexOf(searchElement: string, fromIndex?: number): number;\r\n    lastIndexOf(searchElement: string, fromIndex?: number): number;\r\n    every(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any): boolean;\r\n    some(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any): boolean;\r\n    forEach(callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any): void;\r\n    map(callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): any[];\r\n    filter(callbackfn: (value: string, index: number, array: string[]) => boolean, thisArg?: any): string[];\r\n    reduce(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: string[]) => any, initialValue?: any): any;\r\n    reduceRight(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: string[]) => any, initialValue?: any): any;\r\n}\r\n\r\n\r\ninterface RegExp {\r\n    exec(string: string): RegExpExecArray;\r\n    test(string: string): boolean;\r\n    source: string;\r\n    global: boolean;\r\n    ignoreCase: boolean;\r\n    multiline: boolean;\r\n\r\n    lastIndex: number;\r\n\r\n    // Non-standard extensions\r\n    compile(): RegExp;\r\n}\r\ndeclare var RegExp: {\r\n    new (pattern: string, flags?: string): RegExp;\r\n    (pattern: string, flags?: string): RegExp;\r\n\r\n    // Non-standard extensions\r\n    $1: string;\r\n    $2: string;\r\n    $3: string;\r\n    $4: string;\r\n    $5: string;\r\n    $6: string;\r\n    $7: string;\r\n    $8: string;\r\n    $9: string;\r\n    lastMatch: string;\r\n}\r\n\r\ninterface Error {\r\n    name: string;\r\n    message: string;\r\n}\r\ndeclare var Error: {\r\n    new (message?: string): Error;\r\n    (message?: string): Error;\r\n    prototype: Error;\r\n}\r\n\r\ninterface EvalError extends Error {\r\n}\r\ndeclare var EvalError: {\r\n    new (message?: string): EvalError;\r\n    (message?: string): EvalError;\r\n    prototype: EvalError;\r\n}\r\n\r\ninterface RangeError extends Error {\r\n}\r\ndeclare var RangeError: {\r\n    new (message?: string): RangeError;\r\n    (message?: string): RangeError;\r\n    prototype: RangeError;\r\n}\r\n\r\ninterface ReferenceError extends Error {\r\n}\r\ndeclare var ReferenceError: {\r\n    new (message?: string): ReferenceError;\r\n    (message?: string): ReferenceError;\r\n    prototype: ReferenceError;\r\n}\r\n\r\ninterface SyntaxError extends Error {\r\n}\r\ndeclare var SyntaxError: {\r\n    new (message?: string): SyntaxError;\r\n    (message?: string): SyntaxError;\r\n    prototype: SyntaxError;\r\n}\r\n\r\ninterface TypeError extends Error {\r\n}\r\ndeclare var TypeError: {\r\n    new (message?: string): TypeError;\r\n    (message?: string): TypeError;\r\n    prototype: TypeError;\r\n}\r\n\r\ninterface URIError extends Error {\r\n}\r\ndeclare var URIError: {\r\n    new (message?: string): URIError;\r\n    (message?: string): URIError;\r\n    prototype: URIError;\r\n}\r\n\r\ninterface JSON {\r\n    parse(text: string, reviver?: (key: any, value: any) => any): any;\r\n    stringify(value: any): string;\r\n    stringify(value: any, replacer: (key: string, value: any) => any): string;\r\n    stringify(value: any, replacer: any[]): string;\r\n    stringify(value: any, replacer: (key: string, value: any) => any, space: any): string;\r\n    stringify(value: any, replacer: any[], space: any): string;\r\n}\r\ndeclare var JSON: JSON;\r\n\r\n/////////////////////////////\r\n/// ECMAScript Array API (specially handled by compiler)\r\n/////////////////////////////\r\n\r\ninterface Array<T> {\r\n    toString(): string;\r\n    toLocaleString(): string;\r\n    concat<U extends T[]>(...items: U[]): T[];\r\n    concat(...items: T[]): T[];\r\n    join(separator?: string): string;\r\n    pop(): T;\r\n    push(...items: T[]): number;\r\n    reverse(): T[];\r\n    shift(): T;\r\n    slice(start: number, end?: number): T[];\r\n    sort(compareFn?: (a: T, b: T) => number): T[];\r\n    splice(start: number): T[];\r\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\r\n    unshift(...items: T[]): number;\r\n\r\n    indexOf(searchElement: T, fromIndex?: number): number;\r\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\r\n    every(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\r\n    some(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;\r\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\r\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\r\n    filter(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): T[];\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue?: T): T;\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue?: T): T;\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\r\n\r\n    length: number;\r\n\r\n    [n: number]: T;\r\n}\r\ndeclare var Array: {\r\n    new <T>(arrayLength: number): T[];\r\n    new <T>(...items: T[]): T[];\r\n    <T>(arrayLength: number): T[];\r\n    <T>(...items: T[]): T[];\r\n    isArray(arg: any): boolean;\r\n    prototype: Array<any>;\r\n}\r\n\r\n\r\n/////////////////////////////\r\n/// IE10 ECMAScript Extensions\r\n/////////////////////////////\r\n\r\ninterface ArrayBuffer {\r\n    byteLength: number;\r\n}\r\ndeclare var ArrayBuffer: {\r\n    prototype: ArrayBuffer;\r\n    new (byteLength: number): ArrayBuffer;\r\n}\r\n\r\ninterface ArrayBufferView {\r\n    buffer: ArrayBuffer;\r\n    byteOffset: number;\r\n    byteLength: number;\r\n}\r\n\r\ninterface Int8Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Int8Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Int8Array;\r\n}\r\ndeclare var Int8Array: {\r\n    prototype: Int8Array;\r\n    new (length: number): Int8Array;\r\n    new (array: Int8Array): Int8Array;\r\n    new (array: number[]): Int8Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int8Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Uint8Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Uint8Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Uint8Array;\r\n}\r\ndeclare var Uint8Array: {\r\n    prototype: Uint8Array;\r\n    new (length: number): Uint8Array;\r\n    new (array: Uint8Array): Uint8Array;\r\n    new (array: number[]): Uint8Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint8Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Int16Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Int16Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Int16Array;\r\n}\r\ndeclare var Int16Array: {\r\n    prototype: Int16Array;\r\n    new (length: number): Int16Array;\r\n    new (array: Int16Array): Int16Array;\r\n    new (array: number[]): Int16Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int16Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Uint16Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Uint16Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Uint16Array;\r\n}\r\ndeclare var Uint16Array: {\r\n    prototype: Uint16Array;\r\n    new (length: number): Uint16Array;\r\n    new (array: Uint16Array): Uint16Array;\r\n    new (array: number[]): Uint16Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint16Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Int32Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Int32Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Int32Array;\r\n}\r\ndeclare var Int32Array: {\r\n    prototype: Int32Array;\r\n    new (length: number): Int32Array;\r\n    new (array: Int32Array): Int32Array;\r\n    new (array: number[]): Int32Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int32Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Uint32Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Uint32Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Uint32Array;\r\n}\r\ndeclare var Uint32Array: {\r\n    prototype: Uint32Array;\r\n    new (length: number): Uint32Array;\r\n    new (array: Uint32Array): Uint32Array;\r\n    new (array: number[]): Uint32Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint32Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Float32Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Float32Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Float32Array;\r\n}\r\ndeclare var Float32Array: {\r\n    prototype: Float32Array;\r\n    new (length: number): Float32Array;\r\n    new (array: Float32Array): Float32Array;\r\n    new (array: number[]): Float32Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float32Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface Float64Array extends ArrayBufferView {\r\n    BYTES_PER_ELEMENT: number;\r\n    length: number;\r\n    [index: number]: number;\r\n    get(index: number): number;\r\n    set(index: number, value: number): void;\r\n    set(array: Float64Array, offset?: number): void;\r\n    set(array: number[], offset?: number): void;\r\n    subarray(begin: number, end?: number): Float64Array;\r\n}\r\ndeclare var Float64Array: {\r\n    prototype: Float64Array;\r\n    new (length: number): Float64Array;\r\n    new (array: Float64Array): Float64Array;\r\n    new (array: number[]): Float64Array;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float64Array;\r\n    BYTES_PER_ELEMENT: number;\r\n}\r\n\r\ninterface DataView extends ArrayBufferView {\r\n    getInt8(byteOffset: number): number;\r\n    getUint8(byteOffset: number): number;\r\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\r\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\r\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\r\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\r\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\r\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    setInt8(byteOffset: number, value: number): void;\r\n    setUint8(byteOffset: number, value: number): void;\r\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n}\r\ndeclare var DataView: {\r\n    prototype: DataView;\r\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): DataView;\r\n}\r\n\r\n/////////////////////////////\r\n/// IE11 ECMAScript Extensions\r\n/////////////////////////////\r\n\r\ninterface Map<K, V> {\r\n    clear(): void;\r\n    delete(key: K): boolean;\r\n    forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void;\r\n    get(key: K): V;\r\n    has(key: K): boolean;\r\n    set(key: K, value: V): Map<K, V>;\r\n    size: number;\r\n}\r\ndeclare var Map: {\r\n    new <K, V>(): Map<K, V>;\r\n}\r\n\r\ninterface WeakMap<K, V> {\r\n    clear(): void;\r\n    delete(key: K): boolean;\r\n    get(key: K): V;\r\n    has(key: K): boolean;\r\n    set(key: K, value: V): WeakMap<K, V>;\r\n}\r\ndeclare var WeakMap: {\r\n    new <K, V>(): WeakMap<K, V>;\r\n}\r\n\r\ninterface Set<T> {\r\n    add(value: T): Set<T>;\r\n    clear(): void;\r\n    delete(value: T): boolean;\r\n    forEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void;\r\n    has(value: T): boolean;\r\n    size: number;\r\n}\r\ndeclare var Set: {\r\n    new <T>(): Set<T>;\r\n}\r\n\r\ndeclare module Intl {\r\n\r\n    interface CollatorOptions {\r\n        usage?: string;\r\n        localeMatcher?: string;\r\n        numeric?: boolean;\r\n        caseFirst?: string;\r\n        sensitivity?: string;\r\n        ignorePunctuation?: boolean;\r\n    }\r\n\r\n    interface ResolvedCollatorOptions {\r\n        locale: string;\r\n        usage: string;\r\n        sensitivity: string;\r\n        ignorePunctuation: boolean;\r\n        collation: string;\r\n        caseFirst: string;\r\n        numeric: boolean;\r\n    }\r\n\r\n    interface Collator {\r\n        compare(x: string, y: string): number;\r\n        resolvedOptions(): ResolvedCollatorOptions;\r\n    }\r\n    var Collator: {\r\n        new (locales?: string[], options?: CollatorOptions): Collator;\r\n        new (locale?: string, options?: CollatorOptions): Collator;\r\n        (locales?: string[], options?: CollatorOptions): Collator;\r\n        (locale?: string, options?: CollatorOptions): Collator;\r\n        supportedLocalesOf(locales: string[], options?: CollatorOptions): string[];\r\n        supportedLocalesOf(locale: string, options?: CollatorOptions): string[];\r\n    }\r\n\r\n    interface NumberFormatOptions {\r\n        localeMatcher?: string;\r\n        style?: string;\r\n        currency?: string;\r\n        currencyDisplay?: string;\r\n        useGrouping?: boolean;\r\n    }\r\n\r\n    interface ResolvedNumberFormatOptions {\r\n        locale: string;\r\n        numberingSystem: string;\r\n        style: string;\r\n        currency?: string;\r\n        currencyDisplay?: string;\r\n        minimumintegerDigits: number;\r\n        minimumFractionDigits: number;\r\n        maximumFractionDigits: number;\r\n        minimumSignificantDigits?: number;\r\n        maximumSignificantDigits?: number;\r\n        useGrouping: boolean;\r\n    }\r\n\r\n    interface NumberFormat {\r\n        format(value: number): string;\r\n        resolvedOptions(): ResolvedNumberFormatOptions;\r\n    }\r\n    var NumberFormat: {\r\n        new (locales?: string[], options?: NumberFormatOptions): Collator;\r\n        new (locale?: string, options?: NumberFormatOptions): Collator;\r\n        (locales?: string[], options?: NumberFormatOptions): Collator;\r\n        (locale?: string, options?: NumberFormatOptions): Collator;\r\n        supportedLocalesOf(locales: string[], options?: NumberFormatOptions): string[];\r\n        supportedLocalesOf(locale: string, options?: NumberFormatOptions): string[];\r\n    }\r\n\r\n    interface DateTimeFormatOptions {\r\n        localeMatcher?: string;\r\n        weekday?: string;\r\n        era?: string;\r\n        year?: string;\r\n        month?: string;\r\n        day?: string;\r\n        hour?: string;\r\n        minute?: string;\r\n        second?: string;\r\n        timeZoneName?: string;\r\n        formatMatcher?: string;\r\n        hour12: boolean;\r\n    }\r\n\r\n    interface ResolvedDateTimeFormatOptions {\r\n        locale: string;\r\n        calendar: string;\r\n        numberingSystem: string;\r\n        timeZone: string;\r\n        hour12?: boolean;\r\n        weekday?: string;\r\n        era?: string;\r\n        year?: string;\r\n        month?: string;\r\n        day?: string;\r\n        hour?: string;\r\n        minute?: string;\r\n        second?: string;\r\n        timeZoneName?: string;\r\n    }\r\n\r\n    interface DateTimeFormat {\r\n        format(date: number): string;\r\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\r\n    }\r\n    var DateTimeFormat: {\r\n        new (locales?: string[], options?: DateTimeFormatOptions): Collator;\r\n        new (locale?: string, options?: DateTimeFormatOptions): Collator;\r\n        (locales?: string[], options?: DateTimeFormatOptions): Collator;\r\n        (locale?: string, options?: DateTimeFormatOptions): Collator;\r\n        supportedLocalesOf(locales: string[], options?: DateTimeFormatOptions): string[];\r\n        supportedLocalesOf(locale: string, options?: DateTimeFormatOptions): string[];\r\n    }\r\n}\r\n\r\ninterface String {\r\n    localeCompare(that: string, locales: string[], options?: Intl.CollatorOptions): number;\r\n    localeCompare(that: string, locale: string, options?: Intl.CollatorOptions): number;\r\n}\r\n\r\ninterface Numer {\r\n    toLocaleString(locales: string[], options?: Intl.NumberFormatOptions): string;\r\n    toLocaleString(locale: string, options?: Intl.NumberFormatOptions): string;\r\n}\r\n\r\ninterface Date {\r\n    toLocaleString(locales: string[], options?: Intl.DateTimeFormatOptions): string;\r\n    toLocaleString(locale: string, options?: Intl.DateTimeFormatOptions): string;\r\n}\r\n\r\n\r\n/////////////////////////////\r\n/// IE9 DOM APIs \r\n/////////////////////////////\r\n\r\ninterface PositionOptions {\r\n    enableHighAccuracy?: boolean;\r\n    timeout?: number;\r\n    maximumAge?: number;\r\n}\r\n\r\ninterface NavigatorID {\r\n    appVersion: string;\r\n    appName: string;\r\n    userAgent: string;\r\n    platform: string;\r\n}\r\n\r\ninterface HTMLTableElement extends HTMLElement, MSDataBindingTableExtensions, MSDataBindingExtensions, DOML2DeprecatedBackgroundStyle, DOML2DeprecatedBackgroundColorStyle {\r\n    width: string;\r\n    borderColorLight: any;\r\n    cellSpacing: string;\r\n    tFoot: HTMLTableSectionElement;\r\n    frame: string;\r\n    borderColor: any;\r\n    rows: HTMLCollection;\r\n    rules: string;\r\n    cols: number;\r\n    summary: string;\r\n    caption: HTMLTableCaptionElement;\r\n    tBodies: HTMLCollection;\r\n    tHead: HTMLTableSectionElement;\r\n    align: string;\r\n    cells: HTMLCollection;\r\n    height: any;\r\n    cellPadding: string;\r\n    border: string;\r\n    borderColorDark: any;\r\n    deleteRow(index?: number): void;\r\n    createTBody(): HTMLElement;\r\n    deleteCaption(): void;\r\n    insertRow(index?: number): HTMLElement;\r\n    deleteTFoot(): void;\r\n    createTHead(): HTMLElement;\r\n    deleteTHead(): void;\r\n    createCaption(): HTMLElement;\r\n    moveRow(indexFrom?: number, indexTo?: number): Object;\r\n    createTFoot(): HTMLElement;\r\n}\r\ndeclare var HTMLTableElement: {\r\n    prototype: HTMLTableElement;\r\n    new (): HTMLTableElement;\r\n}\r\n\r\ninterface TreeWalker {\r\n    whatToShow: number;\r\n    filter: NodeFilter;\r\n    root: Node;\r\n    currentNode: Node;\r\n    expandEntityReferences: boolean;\r\n    previousSibling(): Node;\r\n    lastChild(): Node;\r\n    nextSibling(): Node;\r\n    nextNode(): Node;\r\n    parentNode(): Node;\r\n    firstChild(): Node;\r\n    previousNode(): Node;\r\n}\r\ndeclare var TreeWalker: {\r\n    prototype: TreeWalker;\r\n    new (): TreeWalker;\r\n}\r\n\r\ninterface GetSVGDocument {\r\n    getSVGDocument(): Document;\r\n}\r\n\r\ninterface SVGPathSegCurvetoQuadraticRel extends SVGPathSeg {\r\n    y: number;\r\n    y1: number;\r\n    x: number;\r\n    x1: number;\r\n}\r\ndeclare var SVGPathSegCurvetoQuadraticRel: {\r\n    prototype: SVGPathSegCurvetoQuadraticRel;\r\n    new (): SVGPathSegCurvetoQuadraticRel;\r\n}\r\n\r\ninterface Performance {\r\n    navigation: PerformanceNavigation;\r\n    timing: PerformanceTiming;\r\n    getEntriesByType(entryType: string): any;\r\n    toJSON(): any;\r\n    getMeasures(measureName?: string): any;\r\n    clearMarks(markName?: string): void;\r\n    getMarks(markName?: string): any;\r\n    clearResourceTimings(): void;\r\n    mark(markName: string): void;\r\n    measure(measureName: string, startMarkName?: string, endMarkName?: string): void;\r\n    getEntriesByName(name: string, entryType?: string): any;\r\n    getEntries(): any;\r\n    clearMeasures(measureName?: string): void;\r\n    setResourceTimingBufferSize(maxSize: number): void;\r\n}\r\ndeclare var Performance: {\r\n    prototype: Performance;\r\n    new (): Performance;\r\n}\r\n\r\ninterface MSDataBindingTableExtensions {\r\n    dataPageSize: number;\r\n    nextPage(): void;\r\n    firstPage(): void;\r\n    refresh(): void;\r\n    previousPage(): void;\r\n    lastPage(): void;\r\n}\r\n\r\ninterface CompositionEvent extends UIEvent {\r\n    data: string;\r\n    locale: string;\r\n    initCompositionEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, locale: string): void;\r\n}\r\ndeclare var CompositionEvent: {\r\n    prototype: CompositionEvent;\r\n    new (): CompositionEvent;\r\n}\r\n\r\ninterface WindowTimers {\r\n    clearTimeout(handle: number): void;\r\n    setTimeout(handler: any, timeout?: any, ...args: any[]): number;\r\n    clearInterval(handle: number): void;\r\n    setInterval(handler: any, timeout?: any, ...args: any[]): number;\r\n}\r\n\r\ninterface SVGMarkerElement extends SVGElement, SVGStylable, SVGLangSpace, SVGFitToViewBox, SVGExternalResourcesRequired {\r\n    orientType: SVGAnimatedEnumeration;\r\n    markerUnits: SVGAnimatedEnumeration;\r\n    markerWidth: SVGAnimatedLength;\r\n    markerHeight: SVGAnimatedLength;\r\n    orientAngle: SVGAnimatedAngle;\r\n    refY: SVGAnimatedLength;\r\n    refX: SVGAnimatedLength;\r\n    setOrientToAngle(angle: SVGAngle): void;\r\n    setOrientToAuto(): void;\r\n    SVG_MARKER_ORIENT_UNKNOWN: number;\r\n    SVG_MARKER_ORIENT_ANGLE: number;\r\n    SVG_MARKERUNITS_UNKNOWN: number;\r\n    SVG_MARKERUNITS_STROKEWIDTH: number;\r\n    SVG_MARKER_ORIENT_AUTO: number;\r\n    SVG_MARKERUNITS_USERSPACEONUSE: number;\r\n}\r\ndeclare var SVGMarkerElement: {\r\n    prototype: SVGMarkerElement;\r\n    new (): SVGMarkerElement;\r\n    SVG_MARKER_ORIENT_UNKNOWN: number;\r\n    SVG_MARKER_ORIENT_ANGLE: number;\r\n    SVG_MARKERUNITS_UNKNOWN: number;\r\n    SVG_MARKERUNITS_STROKEWIDTH: number;\r\n    SVG_MARKER_ORIENT_AUTO: number;\r\n    SVG_MARKERUNITS_USERSPACEONUSE: number;\r\n}\r\n\r\ninterface CSSStyleDeclaration {\r\n    backgroundAttachment: string;\r\n    visibility: string;\r\n    textAlignLast: string;\r\n    borderRightStyle: string;\r\n    counterIncrement: string;\r\n    orphans: string;\r\n    cssText: string;\r\n    borderStyle: string;\r\n    pointerEvents: string;\r\n    borderTopColor: string;\r\n    markerEnd: string;\r\n    textIndent: string;\r\n    listStyleImage: string;\r\n    cursor: string;\r\n    listStylePosition: string;\r\n    wordWrap: string;\r\n    borderTopStyle: string;\r\n    alignmentBaseline: string;\r\n    opacity: string;\r\n    direction: string;\r\n    strokeMiterlimit: string;\r\n    maxWidth: string;\r\n    color: string;\r\n    clip: string;\r\n    borderRightWidth: string;\r\n    verticalAlign: string;\r\n    overflow: string;\r\n    mask: string;\r\n    borderLeftStyle: string;\r\n    emptyCells: string;\r\n    stopOpacity: string;\r\n    paddingRight: string;\r\n    parentRule: CSSRule;\r\n    background: string;\r\n    boxSizing: string;\r\n    textJustify: string;\r\n    height: string;\r\n    paddingTop: string;\r\n    length: number;\r\n    right: string;\r\n    baselineShift: string;\r\n    borderLeft: string;\r\n    widows: string;\r\n    lineHeight: string;\r\n    left: string;\r\n    textUnderlinePosition: string;\r\n    glyphOrientationHorizontal: string;\r\n    display: string;\r\n    textAnchor: string;\r\n    cssFloat: string;\r\n    strokeDasharray: string;\r\n    rubyAlign: string;\r\n    fontSizeAdjust: string;\r\n    borderLeftColor: string;\r\n    backgroundImage: string;\r\n    listStyleType: string;\r\n    strokeWidth: string;\r\n    textOverflow: string;\r\n    fillRule: string;\r\n    borderBottomColor: string;\r\n    zIndex: string;\r\n    position: string;\r\n    listStyle: string;\r\n    msTransformOrigin: string;\r\n    dominantBaseline: string;\r\n    overflowY: string;\r\n    fill: string;\r\n    captionSide: string;\r\n    borderCollapse: string;\r\n    boxShadow: string;\r\n    quotes: string;\r\n    tableLayout: string;\r\n    unicodeBidi: string;\r\n    borderBottomWidth: string;\r\n    backgroundSize: string;\r\n    textDecoration: string;\r\n    strokeDashoffset: string;\r\n    fontSize: string;\r\n    border: string;\r\n    pageBreakBefore: string;\r\n    borderTopRightRadius: string;\r\n    msTransform: string;\r\n    borderBottomLeftRadius: string;\r\n    textTransform: string;\r\n    rubyPosition: string;\r\n    strokeLinejoin: string;\r\n    clipPath: string;\r\n    borderRightColor: string;\r\n    fontFamily: string;\r\n    clear: string;\r\n    content: string;\r\n    backgroundClip: string;\r\n    marginBottom: string;\r\n    counterReset: string;\r\n    outlineWidth: string;\r\n    marginRight: string;\r\n    paddingLeft: string;\r\n    borderBottom: string;\r\n    wordBreak: string;\r\n    marginTop: string;\r\n    top: string;\r\n    fontWeight: string;\r\n    borderRight: string;\r\n    width: string;\r\n    kerning: string;\r\n    pageBreakAfter: string;\r\n    borderBottomStyle: string;\r\n    fontStretch: string;\r\n    padding: string;\r\n    strokeOpacity: string;\r\n    markerStart: string;\r\n    bottom: string;\r\n    borderLeftWidth: string;\r\n    clipRule: string;\r\n    backgroundPosition: string;\r\n    backgroundColor: string;\r\n    pageBreakInside: string;\r\n    backgroundOrigin: string;\r\n    strokeLinecap: string;\r\n    borderTopWidth: string;\r\n    outlineStyle: string;\r\n    borderTop: string;\r\n    outlineColor: string;\r\n    paddingBottom: string;\r\n    marginLeft: string;\r\n    font: string;\r\n    outline: string;\r\n    wordSpacing: string;\r\n    maxHeight: string;\r\n    fillOpacity: string;\r\n    letterSpacing: string;\r\n    borderSpacing: string;\r\n    backgroundRepeat: string;\r\n    borderRadius: string;\r\n    borderWidth: string;\r\n    borderBottomRightRadius: string;\r\n    whiteSpace: string;\r\n    fontStyle: string;\r\n    minWidth: string;\r\n    stopColor: string;\r\n    borderTopLeftRadius: string;\r\n    borderColor: string;\r\n    marker: string;\r\n    glyphOrientationVertical: string;\r\n    markerMid: string;\r\n    fontVariant: string;\r\n    minHeight: string;\r\n    stroke: string;\r\n    rubyOverhang: string;\r\n    overflowX: string;\r\n    textAlign: string;\r\n    margin: string;\r\n    getPropertyPriority(propertyName: string): string;\r\n    getPropertyValue(propertyName: string): string;\r\n    removeProperty(propertyName: string): string;\r\n    item(index: number): string;\r\n    [index: number]: string;\r\n    setProperty(propertyName: string, value: string, priority?: string): void;\r\n}\r\ndeclare var CSSStyleDeclaration: {\r\n    prototype: CSSStyleDeclaration;\r\n    new (): CSSStyleDeclaration;\r\n}\r\n\r\ninterface SVGGElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n}\r\ndeclare var SVGGElement: {\r\n    prototype: SVGGElement;\r\n    new (): SVGGElement;\r\n}\r\n\r\ninterface MSStyleCSSProperties extends MSCSSProperties {\r\n    pixelWidth: number;\r\n    posHeight: number;\r\n    posLeft: number;\r\n    pixelTop: number;\r\n    pixelBottom: number;\r\n    textDecorationNone: boolean;\r\n    pixelLeft: number;\r\n    posTop: number;\r\n    posBottom: number;\r\n    textDecorationOverline: boolean;\r\n    posWidth: number;\r\n    textDecorationLineThrough: boolean;\r\n    pixelHeight: number;\r\n    textDecorationBlink: boolean;\r\n    posRight: number;\r\n    pixelRight: number;\r\n    textDecorationUnderline: boolean;\r\n}\r\ndeclare var MSStyleCSSProperties: {\r\n    prototype: MSStyleCSSProperties;\r\n    new (): MSStyleCSSProperties;\r\n}\r\n\r\ninterface Navigator extends NavigatorID, NavigatorOnLine, NavigatorContentUtils, MSNavigatorExtensions, NavigatorGeolocation, MSNavigatorDoNotTrack, NavigatorStorageUtils {\r\n}\r\ndeclare var Navigator: {\r\n    prototype: Navigator;\r\n    new (): Navigator;\r\n}\r\n\r\ninterface SVGPathSegCurvetoCubicSmoothAbs extends SVGPathSeg {\r\n    y: number;\r\n    x2: number;\r\n    x: number;\r\n    y2: number;\r\n}\r\ndeclare var SVGPathSegCurvetoCubicSmoothAbs: {\r\n    prototype: SVGPathSegCurvetoCubicSmoothAbs;\r\n    new (): SVGPathSegCurvetoCubicSmoothAbs;\r\n}\r\n\r\ninterface SVGZoomEvent extends UIEvent {\r\n    zoomRectScreen: SVGRect;\r\n    previousScale: number;\r\n    newScale: number;\r\n    previousTranslate: SVGPoint;\r\n    newTranslate: SVGPoint;\r\n}\r\ndeclare var SVGZoomEvent: {\r\n    prototype: SVGZoomEvent;\r\n    new (): SVGZoomEvent;\r\n}\r\n\r\ninterface NodeSelector {\r\n    querySelectorAll(selectors: string): NodeList;\r\n    querySelector(selectors: string): Element;\r\n}\r\n\r\ninterface HTMLTableDataCellElement extends HTMLTableCellElement {\r\n}\r\ndeclare var HTMLTableDataCellElement: {\r\n    prototype: HTMLTableDataCellElement;\r\n    new (): HTMLTableDataCellElement;\r\n}\r\n\r\ninterface HTMLBaseElement extends HTMLElement {\r\n    target: string;\r\n    href: string;\r\n}\r\ndeclare var HTMLBaseElement: {\r\n    prototype: HTMLBaseElement;\r\n    new (): HTMLBaseElement;\r\n}\r\n\r\ninterface ClientRect {\r\n    left: number;\r\n    width: number;\r\n    right: number;\r\n    top: number;\r\n    bottom: number;\r\n    height: number;\r\n}\r\ndeclare var ClientRect: {\r\n    prototype: ClientRect;\r\n    new (): ClientRect;\r\n}\r\n\r\ninterface PositionErrorCallback {\r\n    (error: PositionError): void;\r\n}\r\n\r\ninterface DOMImplementation {\r\n    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;\r\n    createDocument(namespaceURI: string, qualifiedName: string, doctype: DocumentType): Document;\r\n    hasFeature(feature: string, version?: string): boolean;\r\n    createHTMLDocument(title: string): Document;\r\n}\r\ndeclare var DOMImplementation: {\r\n    prototype: DOMImplementation;\r\n    new (): DOMImplementation;\r\n}\r\n\r\ninterface SVGUnitTypes {\r\n    SVG_UNIT_TYPE_UNKNOWN: number;\r\n    SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\r\n    SVG_UNIT_TYPE_USERSPACEONUSE: number;\r\n}\r\ndeclare var SVGUnitTypes: {\r\n    prototype: SVGUnitTypes;\r\n    new (): SVGUnitTypes;\r\n    SVG_UNIT_TYPE_UNKNOWN: number;\r\n    SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\r\n    SVG_UNIT_TYPE_USERSPACEONUSE: number;\r\n}\r\n\r\ninterface Element extends Node, NodeSelector, ElementTraversal {\r\n    scrollTop: number;\r\n    clientLeft: number;\r\n    scrollLeft: number;\r\n    tagName: string;\r\n    clientWidth: number;\r\n    scrollWidth: number;\r\n    clientHeight: number;\r\n    clientTop: number;\r\n    scrollHeight: number;\r\n    getAttribute(name?: string): string;\r\n    getElementsByTagNameNS(namespaceURI: string, localName: string): NodeList;\r\n    hasAttributeNS(namespaceURI: string, localName: string): boolean;\r\n    getBoundingClientRect(): ClientRect;\r\n    getAttributeNS(namespaceURI: string, localName: string): string;\r\n    getAttributeNodeNS(namespaceURI: string, localName: string): Attr;\r\n    setAttributeNodeNS(newAttr: Attr): Attr;\r\n    msMatchesSelector(selectors: string): boolean;\r\n    hasAttribute(name: string): boolean;\r\n    removeAttribute(name?: string): void;\r\n    setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\r\n    getAttributeNode(name: string): Attr;\r\n    fireEvent(eventName: string, eventObj?: any): boolean;\r\n    getElementsByTagName(name: string): NodeList;\r\n    getElementsByTagName(name: \"a\"): NodeListOf<HTMLAnchorElement>;\r\n    getElementsByTagName(name: \"abbr\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"address\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"area\"): NodeListOf<HTMLAreaElement>;\r\n    getElementsByTagName(name: \"article\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"aside\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"audio\"): NodeListOf<HTMLAudioElement>;\r\n    getElementsByTagName(name: \"b\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"base\"): NodeListOf<HTMLBaseElement>;\r\n    getElementsByTagName(name: \"bdi\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"bdo\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"blockquote\"): NodeListOf<HTMLQuoteElement>;\r\n    getElementsByTagName(name: \"body\"): NodeListOf<HTMLBodyElement>;\r\n    getElementsByTagName(name: \"br\"): NodeListOf<HTMLBRElement>;\r\n    getElementsByTagName(name: \"button\"): NodeListOf<HTMLButtonElement>;\r\n    getElementsByTagName(name: \"canvas\"): NodeListOf<HTMLCanvasElement>;\r\n    getElementsByTagName(name: \"caption\"): NodeListOf<HTMLTableCaptionElement>;\r\n    getElementsByTagName(name: \"cite\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"code\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"col\"): NodeListOf<HTMLTableColElement>;\r\n    getElementsByTagName(name: \"colgroup\"): NodeListOf<HTMLTableColElement>;\r\n    getElementsByTagName(name: \"datalist\"): NodeListOf<HTMLDataListElement>;\r\n    getElementsByTagName(name: \"dd\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"del\"): NodeListOf<HTMLModElement>;\r\n    getElementsByTagName(name: \"dfn\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"div\"): NodeListOf<HTMLDivElement>;\r\n    getElementsByTagName(name: \"dl\"): NodeListOf<HTMLDListElement>;\r\n    getElementsByTagName(name: \"dt\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"em\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"embed\"): NodeListOf<HTMLEmbedElement>;\r\n    getElementsByTagName(name: \"fieldset\"): NodeListOf<HTMLFieldSetElement>;\r\n    getElementsByTagName(name: \"figcaption\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"figure\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"footer\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"form\"): NodeListOf<HTMLFormElement>;\r\n    getElementsByTagName(name: \"h1\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h2\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h3\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h4\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h5\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h6\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"head\"): NodeListOf<HTMLHeadElement>;\r\n    getElementsByTagName(name: \"header\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"hgroup\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"hr\"): NodeListOf<HTMLHRElement>;\r\n    getElementsByTagName(name: \"html\"): NodeListOf<HTMLHtmlElement>;\r\n    getElementsByTagName(name: \"i\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"iframe\"): NodeListOf<HTMLIFrameElement>;\r\n    getElementsByTagName(name: \"img\"): NodeListOf<HTMLImageElement>;\r\n    getElementsByTagName(name: \"input\"): NodeListOf<HTMLInputElement>;\r\n    getElementsByTagName(name: \"ins\"): NodeListOf<HTMLModElement>;\r\n    getElementsByTagName(name: \"kbd\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"label\"): NodeListOf<HTMLLabelElement>;\r\n    getElementsByTagName(name: \"legend\"): NodeListOf<HTMLLegendElement>;\r\n    getElementsByTagName(name: \"li\"): NodeListOf<HTMLLIElement>;\r\n    getElementsByTagName(name: \"link\"): NodeListOf<HTMLLinkElement>;\r\n    getElementsByTagName(name: \"main\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"map\"): NodeListOf<HTMLMapElement>;\r\n    getElementsByTagName(name: \"mark\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"menu\"): NodeListOf<HTMLMenuElement>;\r\n    getElementsByTagName(name: \"meta\"): NodeListOf<HTMLMetaElement>;\r\n    getElementsByTagName(name: \"nav\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"noscript\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"object\"): NodeListOf<HTMLObjectElement>;\r\n    getElementsByTagName(name: \"ol\"): NodeListOf<HTMLOListElement>;\r\n    getElementsByTagName(name: \"optgroup\"): NodeListOf<HTMLOptGroupElement>;\r\n    getElementsByTagName(name: \"option\"): NodeListOf<HTMLOptionElement>;\r\n    getElementsByTagName(name: \"p\"): NodeListOf<HTMLParagraphElement>;\r\n    getElementsByTagName(name: \"param\"): NodeListOf<HTMLParamElement>;\r\n    getElementsByTagName(name: \"pre\"): NodeListOf<HTMLPreElement>;\r\n    getElementsByTagName(name: \"progress\"): NodeListOf<HTMLProgressElement>;\r\n    getElementsByTagName(name: \"q\"): NodeListOf<HTMLQuoteElement>;\r\n    getElementsByTagName(name: \"rp\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"rt\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"ruby\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"s\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"samp\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"script\"): NodeListOf<HTMLScriptElement>;\r\n    getElementsByTagName(name: \"section\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"select\"): NodeListOf<HTMLSelectElement>;\r\n    getElementsByTagName(name: \"small\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"source\"): NodeListOf<HTMLSourceElement>;\r\n    getElementsByTagName(name: \"span\"): NodeListOf<HTMLSpanElement>;\r\n    getElementsByTagName(name: \"strong\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"style\"): NodeListOf<HTMLStyleElement>;\r\n    getElementsByTagName(name: \"sub\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"summary\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"sup\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"table\"): NodeListOf<HTMLTableElement>;\r\n    getElementsByTagName(name: \"tbody\"): NodeListOf<HTMLTableSectionElement>;\r\n    getElementsByTagName(name: \"td\"): NodeListOf<HTMLTableDataCellElement>;\r\n    getElementsByTagName(name: \"textarea\"): NodeListOf<HTMLTextAreaElement>;\r\n    getElementsByTagName(name: \"tfoot\"): NodeListOf<HTMLTableSectionElement>;\r\n    getElementsByTagName(name: \"th\"): NodeListOf<HTMLTableHeaderCellElement>;\r\n    getElementsByTagName(name: \"thead\"): NodeListOf<HTMLTableSectionElement>;\r\n    getElementsByTagName(name: \"title\"): NodeListOf<HTMLTitleElement>;\r\n    getElementsByTagName(name: \"tr\"): NodeListOf<HTMLTableRowElement>;\r\n    getElementsByTagName(name: \"track\"): NodeListOf<HTMLTrackElement>;\r\n    getElementsByTagName(name: \"u\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"ul\"): NodeListOf<HTMLUListElement>;\r\n    getElementsByTagName(name: \"var\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"video\"): NodeListOf<HTMLVideoElement>;\r\n    getElementsByTagName(name: \"wbr\"): NodeListOf<HTMLElement>;\r\n    getClientRects(): ClientRectList;\r\n    setAttributeNode(newAttr: Attr): Attr;\r\n    removeAttributeNode(oldAttr: Attr): Attr;\r\n    setAttribute(name?: string, value?: string): void;\r\n    removeAttributeNS(namespaceURI: string, localName: string): void;\r\n}\r\ndeclare var Element: {\r\n    prototype: Element;\r\n    new (): Element;\r\n}\r\n\r\ninterface HTMLNextIdElement extends HTMLElement {\r\n    n: string;\r\n}\r\ndeclare var HTMLNextIdElement: {\r\n    prototype: HTMLNextIdElement;\r\n    new (): HTMLNextIdElement;\r\n}\r\n\r\ninterface SVGPathSegMovetoRel extends SVGPathSeg {\r\n    y: number;\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegMovetoRel: {\r\n    prototype: SVGPathSegMovetoRel;\r\n    new (): SVGPathSegMovetoRel;\r\n}\r\n\r\ninterface SVGLineElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    y1: SVGAnimatedLength;\r\n    x2: SVGAnimatedLength;\r\n    x1: SVGAnimatedLength;\r\n    y2: SVGAnimatedLength;\r\n}\r\ndeclare var SVGLineElement: {\r\n    prototype: SVGLineElement;\r\n    new (): SVGLineElement;\r\n}\r\n\r\ninterface HTMLParagraphElement extends HTMLElement, DOML2DeprecatedTextFlowControl {\r\n    align: string;\r\n}\r\ndeclare var HTMLParagraphElement: {\r\n    prototype: HTMLParagraphElement;\r\n    new (): HTMLParagraphElement;\r\n}\r\n\r\ninterface HTMLAreasCollection extends HTMLCollection {\r\n    remove(index?: number): void;\r\n    add(element: HTMLElement, before?: any): void;\r\n}\r\ndeclare var HTMLAreasCollection: {\r\n    prototype: HTMLAreasCollection;\r\n    new (): HTMLAreasCollection;\r\n}\r\n\r\ninterface SVGDescElement extends SVGElement, SVGStylable, SVGLangSpace {\r\n}\r\ndeclare var SVGDescElement: {\r\n    prototype: SVGDescElement;\r\n    new (): SVGDescElement;\r\n}\r\n\r\ninterface Node extends EventTarget {\r\n    nodeType: number;\r\n    previousSibling: Node;\r\n    localName: string;\r\n    namespaceURI: string;\r\n    textContent: string;\r\n    parentNode: Node;\r\n    nextSibling: Node;\r\n    nodeValue: string;\r\n    lastChild: Node;\r\n    childNodes: NodeList;\r\n    nodeName: string;\r\n    ownerDocument: Document;\r\n    attributes: NamedNodeMap;\r\n    firstChild: Node;\r\n    prefix: string;\r\n    removeChild(oldChild: Node): Node;\r\n    appendChild(newChild: Node): Node;\r\n    isSupported(feature: string, version: string): boolean;\r\n    isEqualNode(arg: Node): boolean;\r\n    lookupPrefix(namespaceURI: string): string;\r\n    isDefaultNamespace(namespaceURI: string): boolean;\r\n    compareDocumentPosition(other: Node): number;\r\n    normalize(): void;\r\n    isSameNode(other: Node): boolean;\r\n    hasAttributes(): boolean;\r\n    lookupNamespaceURI(prefix: string): string;\r\n    cloneNode(deep?: boolean): Node;\r\n    hasChildNodes(): boolean;\r\n    replaceChild(newChild: Node, oldChild: Node): Node;\r\n    insertBefore(newChild: Node, refChild?: Node): Node;\r\n    ENTITY_REFERENCE_NODE: number;\r\n    ATTRIBUTE_NODE: number;\r\n    DOCUMENT_FRAGMENT_NODE: number;\r\n    TEXT_NODE: number;\r\n    ELEMENT_NODE: number;\r\n    COMMENT_NODE: number;\r\n    DOCUMENT_POSITION_DISCONNECTED: number;\r\n    DOCUMENT_POSITION_CONTAINED_BY: number;\r\n    DOCUMENT_POSITION_CONTAINS: number;\r\n    DOCUMENT_TYPE_NODE: number;\r\n    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\r\n    DOCUMENT_NODE: number;\r\n    ENTITY_NODE: number;\r\n    PROCESSING_INSTRUCTION_NODE: number;\r\n    CDATA_SECTION_NODE: number;\r\n    NOTATION_NODE: number;\r\n    DOCUMENT_POSITION_FOLLOWING: number;\r\n    DOCUMENT_POSITION_PRECEDING: number;\r\n}\r\ndeclare var Node: {\r\n    prototype: Node;\r\n    new (): Node;\r\n    ENTITY_REFERENCE_NODE: number;\r\n    ATTRIBUTE_NODE: number;\r\n    DOCUMENT_FRAGMENT_NODE: number;\r\n    TEXT_NODE: number;\r\n    ELEMENT_NODE: number;\r\n    COMMENT_NODE: number;\r\n    DOCUMENT_POSITION_DISCONNECTED: number;\r\n    DOCUMENT_POSITION_CONTAINED_BY: number;\r\n    DOCUMENT_POSITION_CONTAINS: number;\r\n    DOCUMENT_TYPE_NODE: number;\r\n    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\r\n    DOCUMENT_NODE: number;\r\n    ENTITY_NODE: number;\r\n    PROCESSING_INSTRUCTION_NODE: number;\r\n    CDATA_SECTION_NODE: number;\r\n    NOTATION_NODE: number;\r\n    DOCUMENT_POSITION_FOLLOWING: number;\r\n    DOCUMENT_POSITION_PRECEDING: number;\r\n}\r\n\r\ninterface SVGPathSegCurvetoQuadraticSmoothRel extends SVGPathSeg {\r\n    y: number;\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegCurvetoQuadraticSmoothRel: {\r\n    prototype: SVGPathSegCurvetoQuadraticSmoothRel;\r\n    new (): SVGPathSegCurvetoQuadraticSmoothRel;\r\n}\r\n\r\ninterface DOML2DeprecatedListSpaceReduction {\r\n    compact: boolean;\r\n}\r\n\r\ninterface MSScriptHost {\r\n}\r\ndeclare var MSScriptHost: {\r\n    prototype: MSScriptHost;\r\n    new (): MSScriptHost;\r\n}\r\n\r\ninterface SVGClipPathElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    clipPathUnits: SVGAnimatedEnumeration;\r\n}\r\ndeclare var SVGClipPathElement: {\r\n    prototype: SVGClipPathElement;\r\n    new (): SVGClipPathElement;\r\n}\r\n\r\ninterface MouseEvent extends UIEvent {\r\n    toElement: Element;\r\n    layerY: number;\r\n    fromElement: Element;\r\n    which: number;\r\n    pageX: number;\r\n    offsetY: number;\r\n    x: number;\r\n    y: number;\r\n    metaKey: boolean;\r\n    altKey: boolean;\r\n    ctrlKey: boolean;\r\n    offsetX: number;\r\n    screenX: number;\r\n    clientY: number;\r\n    shiftKey: boolean;\r\n    layerX: number;\r\n    screenY: number;\r\n    relatedTarget: EventTarget;\r\n    button: number;\r\n    pageY: number;\r\n    buttons: number;\r\n    clientX: number;\r\n    initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget): void;\r\n    getModifierState(keyArg: string): boolean;\r\n}\r\ndeclare var MouseEvent: {\r\n    prototype: MouseEvent;\r\n    new (): MouseEvent;\r\n}\r\n\r\ninterface RangeException {\r\n    code: number;\r\n    message: string;\r\n    toString(): string;\r\n    INVALID_NODE_TYPE_ERR: number;\r\n    BAD_BOUNDARYPOINTS_ERR: number;\r\n}\r\ndeclare var RangeException: {\r\n    prototype: RangeException;\r\n    new (): RangeException;\r\n    INVALID_NODE_TYPE_ERR: number;\r\n    BAD_BOUNDARYPOINTS_ERR: number;\r\n}\r\n\r\ninterface SVGTextPositioningElement extends SVGTextContentElement {\r\n    y: SVGAnimatedLengthList;\r\n    rotate: SVGAnimatedNumberList;\r\n    dy: SVGAnimatedLengthList;\r\n    x: SVGAnimatedLengthList;\r\n    dx: SVGAnimatedLengthList;\r\n}\r\ndeclare var SVGTextPositioningElement: {\r\n    prototype: SVGTextPositioningElement;\r\n    new (): SVGTextPositioningElement;\r\n}\r\n\r\ninterface HTMLAppletElement extends HTMLElement, DOML2DeprecatedMarginStyle, DOML2DeprecatedBorderStyle, DOML2DeprecatedAlignmentStyle, MSDataBindingExtensions, MSDataBindingRecordSetExtensions {\r\n    width: number;\r\n    codeType: string;\r\n    object: string;\r\n    form: HTMLFormElement;\r\n    code: string;\r\n    archive: string;\r\n    alt: string;\r\n    standby: string;\r\n    classid: string;\r\n    name: string;\r\n    useMap: string;\r\n    data: string;\r\n    height: string;\r\n    altHtml: string;\r\n    contentDocument: Document;\r\n    codeBase: string;\r\n    declare: boolean;\r\n    type: string;\r\n    BaseHref: string;\r\n}\r\ndeclare var HTMLAppletElement: {\r\n    prototype: HTMLAppletElement;\r\n    new (): HTMLAppletElement;\r\n}\r\n\r\ninterface TextMetrics {\r\n    width: number;\r\n}\r\ndeclare var TextMetrics: {\r\n    prototype: TextMetrics;\r\n    new (): TextMetrics;\r\n}\r\n\r\ninterface DocumentEvent {\r\n    createEvent(eventInterface: string): Event;\r\n}\r\n\r\ninterface HTMLOListElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, DOML2DeprecatedListNumberingAndBulletStyle {\r\n    start: number;\r\n}\r\ndeclare var HTMLOListElement: {\r\n    prototype: HTMLOListElement;\r\n    new (): HTMLOListElement;\r\n}\r\n\r\ninterface SVGPathSegLinetoVerticalRel extends SVGPathSeg {\r\n    y: number;\r\n}\r\ndeclare var SVGPathSegLinetoVerticalRel: {\r\n    prototype: SVGPathSegLinetoVerticalRel;\r\n    new (): SVGPathSegLinetoVerticalRel;\r\n}\r\n\r\ninterface SVGAnimatedString {\r\n    animVal: string;\r\n    baseVal: string;\r\n}\r\ndeclare var SVGAnimatedString: {\r\n    prototype: SVGAnimatedString;\r\n    new (): SVGAnimatedString;\r\n}\r\n\r\ninterface CDATASection extends Text {\r\n}\r\ndeclare var CDATASection: {\r\n    prototype: CDATASection;\r\n    new (): CDATASection;\r\n}\r\n\r\ninterface StyleMedia {\r\n    type: string;\r\n    matchMedium(mediaquery: string): boolean;\r\n}\r\ndeclare var StyleMedia: {\r\n    prototype: StyleMedia;\r\n    new (): StyleMedia;\r\n}\r\n\r\ninterface HTMLSelectElement extends HTMLElement, MSHTMLCollectionExtensions, MSDataBindingExtensions {\r\n    options: HTMLSelectElement;\r\n    value: string;\r\n    form: HTMLFormElement;\r\n    name: string;\r\n    size: number;\r\n    length: number;\r\n    selectedIndex: number;\r\n    multiple: boolean;\r\n    type: string;\r\n    remove(index?: number): void;\r\n    add(element: HTMLElement, before?: any): void;\r\n    item(name?: any, index?: any): any;\r\n    namedItem(name: string): any;\r\n    [name: string]: any;\r\n}\r\ndeclare var HTMLSelectElement: {\r\n    prototype: HTMLSelectElement;\r\n    new (): HTMLSelectElement;\r\n}\r\n\r\ninterface TextRange {\r\n    boundingLeft: number;\r\n    htmlText: string;\r\n    offsetLeft: number;\r\n    boundingWidth: number;\r\n    boundingHeight: number;\r\n    boundingTop: number;\r\n    text: string;\r\n    offsetTop: number;\r\n    moveToPoint(x: number, y: number): void;\r\n    queryCommandValue(cmdID: string): any;\r\n    getBookmark(): string;\r\n    move(unit: string, count?: number): number;\r\n    queryCommandIndeterm(cmdID: string): boolean;\r\n    scrollIntoView(fStart?: boolean): void;\r\n    findText(string: string, count?: number, flags?: number): boolean;\r\n    execCommand(cmdID: string, showUI?: boolean, value?: any): boolean;\r\n    getBoundingClientRect(): ClientRect;\r\n    moveToBookmark(bookmark: string): boolean;\r\n    isEqual(range: TextRange): boolean;\r\n    duplicate(): TextRange;\r\n    collapse(start?: boolean): void;\r\n    queryCommandText(cmdID: string): string;\r\n    select(): void;\r\n    pasteHTML(html: string): void;\r\n    inRange(range: TextRange): boolean;\r\n    moveEnd(unit: string, count?: number): number;\r\n    getClientRects(): ClientRectList;\r\n    moveStart(unit: string, count?: number): number;\r\n    parentElement(): Element;\r\n    queryCommandState(cmdID: string): boolean;\r\n    compareEndPoints(how: string, sourceRange: TextRange): number;\r\n    execCommandShowHelp(cmdID: string): boolean;\r\n    moveToElementText(element: Element): void;\r\n    expand(Unit: string): boolean;\r\n    queryCommandSupported(cmdID: string): boolean;\r\n    setEndPoint(how: string, SourceRange: TextRange): void;\r\n    queryCommandEnabled(cmdID: string): boolean;\r\n}\r\ndeclare var TextRange: {\r\n    prototype: TextRange;\r\n    new (): TextRange;\r\n}\r\n\r\ninterface SVGTests {\r\n    requiredFeatures: SVGStringList;\r\n    requiredExtensions: SVGStringList;\r\n    systemLanguage: SVGStringList;\r\n    hasExtension(extension: string): boolean;\r\n}\r\n\r\ninterface HTMLBlockElement extends HTMLElement, DOML2DeprecatedTextFlowControl {\r\n    width: number;\r\n    cite: string;\r\n}\r\ndeclare var HTMLBlockElement: {\r\n    prototype: HTMLBlockElement;\r\n    new (): HTMLBlockElement;\r\n}\r\n\r\ninterface CSSStyleSheet extends StyleSheet {\r\n    owningElement: Element;\r\n    imports: StyleSheetList;\r\n    isAlternate: boolean;\r\n    rules: MSCSSRuleList;\r\n    isPrefAlternate: boolean;\r\n    readOnly: boolean;\r\n    cssText: string;\r\n    ownerRule: CSSRule;\r\n    href: string;\r\n    cssRules: CSSRuleList;\r\n    id: string;\r\n    pages: StyleSheetPageList;\r\n    addImport(bstrURL: string, lIndex?: number): number;\r\n    addPageRule(bstrSelector: string, bstrStyle: string, lIndex?: number): number;\r\n    insertRule(rule: string, index?: number): number;\r\n    removeRule(lIndex: number): void;\r\n    deleteRule(index?: number): void;\r\n    addRule(bstrSelector: string, bstrStyle?: string, lIndex?: number): number;\r\n    removeImport(lIndex: number): void;\r\n}\r\ndeclare var CSSStyleSheet: {\r\n    prototype: CSSStyleSheet;\r\n    new (): CSSStyleSheet;\r\n}\r\n\r\ninterface MSSelection {\r\n    type: string;\r\n    typeDetail: string;\r\n    createRange(): TextRange;\r\n    clear(): void;\r\n    createRangeCollection(): TextRangeCollection;\r\n    empty(): void;\r\n}\r\ndeclare var MSSelection: {\r\n    prototype: MSSelection;\r\n    new (): MSSelection;\r\n}\r\n\r\ninterface HTMLMetaElement extends HTMLElement {\r\n    httpEquiv: string;\r\n    name: string;\r\n    content: string;\r\n    url: string;\r\n    scheme: string;\r\n    charset: string;\r\n}\r\ndeclare var HTMLMetaElement: {\r\n    prototype: HTMLMetaElement;\r\n    new (): HTMLMetaElement;\r\n}\r\n\r\ninterface SVGPatternElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGLangSpace, SVGTests, SVGFitToViewBox, SVGExternalResourcesRequired, SVGURIReference {\r\n    patternUnits: SVGAnimatedEnumeration;\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    x: SVGAnimatedLength;\r\n    patternContentUnits: SVGAnimatedEnumeration;\r\n    patternTransform: SVGAnimatedTransformList;\r\n    height: SVGAnimatedLength;\r\n}\r\ndeclare var SVGPatternElement: {\r\n    prototype: SVGPatternElement;\r\n    new (): SVGPatternElement;\r\n}\r\n\r\ninterface SVGAnimatedAngle {\r\n    animVal: SVGAngle;\r\n    baseVal: SVGAngle;\r\n}\r\ndeclare var SVGAnimatedAngle: {\r\n    prototype: SVGAnimatedAngle;\r\n    new (): SVGAnimatedAngle;\r\n}\r\n\r\ninterface Selection {\r\n    isCollapsed: boolean;\r\n    anchorNode: Node;\r\n    focusNode: Node;\r\n    anchorOffset: number;\r\n    focusOffset: number;\r\n    rangeCount: number;\r\n    addRange(range: Range): void;\r\n    collapseToEnd(): void;\r\n    toString(): string;\r\n    selectAllChildren(parentNode: Node): void;\r\n    getRangeAt(index: number): Range;\r\n    collapse(parentNode: Node, offset: number): void;\r\n    removeAllRanges(): void;\r\n    collapseToStart(): void;\r\n    deleteFromDocument(): void;\r\n    removeRange(range: Range): void;\r\n}\r\ndeclare var Selection: {\r\n    prototype: Selection;\r\n    new (): Selection;\r\n}\r\n\r\ninterface SVGScriptElement extends SVGElement, SVGExternalResourcesRequired, SVGURIReference {\r\n    type: string;\r\n}\r\ndeclare var SVGScriptElement: {\r\n    prototype: SVGScriptElement;\r\n    new (): SVGScriptElement;\r\n}\r\n\r\ninterface HTMLDDElement extends HTMLElement {\r\n    noWrap: boolean;\r\n}\r\ndeclare var HTMLDDElement: {\r\n    prototype: HTMLDDElement;\r\n    new (): HTMLDDElement;\r\n}\r\n\r\ninterface MSDataBindingRecordSetReadonlyExtensions {\r\n    recordset: Object;\r\n    namedRecordset(dataMember: string, hierarchy?: any): Object;\r\n}\r\n\r\ninterface CSSStyleRule extends CSSRule {\r\n    selectorText: string;\r\n    style: MSStyleCSSProperties;\r\n    readOnly: boolean;\r\n}\r\ndeclare var CSSStyleRule: {\r\n    prototype: CSSStyleRule;\r\n    new (): CSSStyleRule;\r\n}\r\n\r\ninterface NodeIterator {\r\n    whatToShow: number;\r\n    filter: NodeFilter;\r\n    root: Node;\r\n    expandEntityReferences: boolean;\r\n    nextNode(): Node;\r\n    detach(): void;\r\n    previousNode(): Node;\r\n}\r\ndeclare var NodeIterator: {\r\n    prototype: NodeIterator;\r\n    new (): NodeIterator;\r\n}\r\n\r\ninterface SVGViewElement extends SVGElement, SVGZoomAndPan, SVGFitToViewBox, SVGExternalResourcesRequired {\r\n    viewTarget: SVGStringList;\r\n}\r\ndeclare var SVGViewElement: {\r\n    prototype: SVGViewElement;\r\n    new (): SVGViewElement;\r\n}\r\n\r\ninterface HTMLLinkElement extends HTMLElement, LinkStyle {\r\n    rel: string;\r\n    target: string;\r\n    href: string;\r\n    media: string;\r\n    rev: string;\r\n    type: string;\r\n    charset: string;\r\n    hreflang: string;\r\n}\r\ndeclare var HTMLLinkElement: {\r\n    prototype: HTMLLinkElement;\r\n    new (): HTMLLinkElement;\r\n}\r\n\r\ninterface SVGLocatable {\r\n    farthestViewportElement: SVGElement;\r\n    nearestViewportElement: SVGElement;\r\n    getBBox(): SVGRect;\r\n    getTransformToElement(element: SVGElement): SVGMatrix;\r\n    getCTM(): SVGMatrix;\r\n    getScreenCTM(): SVGMatrix;\r\n}\r\n\r\ninterface HTMLFontElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {\r\n    face: string;\r\n}\r\ndeclare var HTMLFontElement: {\r\n    prototype: HTMLFontElement;\r\n    new (): HTMLFontElement;\r\n}\r\n\r\ninterface SVGTitleElement extends SVGElement, SVGStylable, SVGLangSpace {\r\n}\r\ndeclare var SVGTitleElement: {\r\n    prototype: SVGTitleElement;\r\n    new (): SVGTitleElement;\r\n}\r\n\r\ninterface ControlRangeCollection {\r\n    length: number;\r\n    queryCommandValue(cmdID: string): any;\r\n    remove(index: number): void;\r\n    add(item: Element): void;\r\n    queryCommandIndeterm(cmdID: string): boolean;\r\n    scrollIntoView(varargStart?: any): void;\r\n    item(index: number): Element;\r\n    [index: number]: Element;\r\n    execCommand(cmdID: string, showUI?: boolean, value?: any): boolean;\r\n    addElement(item: Element): void;\r\n    queryCommandState(cmdID: string): boolean;\r\n    queryCommandSupported(cmdID: string): boolean;\r\n    queryCommandEnabled(cmdID: string): boolean;\r\n    queryCommandText(cmdID: string): string;\r\n    select(): void;\r\n}\r\ndeclare var ControlRangeCollection: {\r\n    prototype: ControlRangeCollection;\r\n    new (): ControlRangeCollection;\r\n}\r\n\r\ninterface MSNamespaceInfo extends MSEventAttachmentTarget {\r\n    urn: string;\r\n    onreadystatechange: (ev: Event) => any;\r\n    addEventListener(type: \"readystatechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    name: string;\r\n    readyState: string;\r\n    doImport(implementationUrl: string): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var MSNamespaceInfo: {\r\n    prototype: MSNamespaceInfo;\r\n    new (): MSNamespaceInfo;\r\n}\r\n\r\ninterface WindowSessionStorage {\r\n    sessionStorage: Storage;\r\n}\r\n\r\ninterface SVGAnimatedTransformList {\r\n    animVal: SVGTransformList;\r\n    baseVal: SVGTransformList;\r\n}\r\ndeclare var SVGAnimatedTransformList: {\r\n    prototype: SVGAnimatedTransformList;\r\n    new (): SVGAnimatedTransformList;\r\n}\r\n\r\ninterface HTMLTableCaptionElement extends HTMLElement {\r\n    align: string;\r\n    vAlign: string;\r\n}\r\ndeclare var HTMLTableCaptionElement: {\r\n    prototype: HTMLTableCaptionElement;\r\n    new (): HTMLTableCaptionElement;\r\n}\r\n\r\ninterface HTMLOptionElement extends HTMLElement, MSDataBindingExtensions {\r\n    index: number;\r\n    defaultSelected: boolean;\r\n    value: string;\r\n    text: string;\r\n    form: HTMLFormElement;\r\n    label: string;\r\n    selected: boolean;\r\n    create(): HTMLOptionElement;\r\n}\r\ndeclare var HTMLOptionElement: {\r\n    prototype: HTMLOptionElement;\r\n    new (): HTMLOptionElement;\r\n}\r\n\r\ninterface HTMLMapElement extends HTMLElement {\r\n    name: string;\r\n    areas: HTMLAreasCollection;\r\n}\r\ndeclare var HTMLMapElement: {\r\n    prototype: HTMLMapElement;\r\n    new (): HTMLMapElement;\r\n}\r\n\r\ninterface HTMLMenuElement extends HTMLElement, DOML2DeprecatedListSpaceReduction {\r\n    type: string;\r\n}\r\ndeclare var HTMLMenuElement: {\r\n    prototype: HTMLMenuElement;\r\n    new (): HTMLMenuElement;\r\n}\r\n\r\ninterface MouseWheelEvent extends MouseEvent {\r\n    wheelDelta: number;\r\n    initMouseWheelEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, wheelDeltaArg: number): void;\r\n}\r\ndeclare var MouseWheelEvent: {\r\n    prototype: MouseWheelEvent;\r\n    new (): MouseWheelEvent;\r\n}\r\n\r\ninterface SVGFitToViewBox {\r\n    viewBox: SVGAnimatedRect;\r\n    preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\r\n}\r\n\r\ninterface SVGPointList {\r\n    numberOfItems: number;\r\n    replaceItem(newItem: SVGPoint, index: number): SVGPoint;\r\n    getItem(index: number): SVGPoint;\r\n    clear(): void;\r\n    appendItem(newItem: SVGPoint): SVGPoint;\r\n    initialize(newItem: SVGPoint): SVGPoint;\r\n    removeItem(index: number): SVGPoint;\r\n    insertItemBefore(newItem: SVGPoint, index: number): SVGPoint;\r\n}\r\ndeclare var SVGPointList: {\r\n    prototype: SVGPointList;\r\n    new (): SVGPointList;\r\n}\r\n\r\ninterface SVGAnimatedLengthList {\r\n    animVal: SVGLengthList;\r\n    baseVal: SVGLengthList;\r\n}\r\ndeclare var SVGAnimatedLengthList: {\r\n    prototype: SVGAnimatedLengthList;\r\n    new (): SVGAnimatedLengthList;\r\n}\r\n\r\ninterface Window extends EventTarget, MSEventAttachmentTarget, WindowLocalStorage, MSWindowExtensions, WindowSessionStorage, WindowTimers {\r\n    ondragend: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragend\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onkeydown: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keydown\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    ondragover: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragover\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onkeyup: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keyup\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    onreset: (ev: Event) => any;\r\n    addEventListener(type: \"reset\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmouseup: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseup\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    ondragstart: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragstart\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    ondrag: (ev: DragEvent) => any;\r\n    addEventListener(type: \"drag\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    screenX: number;\r\n    onmouseover: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseover\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    ondragleave: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragleave\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    history: History;\r\n    pageXOffset: number;\r\n    name: string;\r\n    onafterprint: (ev: Event) => any;\r\n    addEventListener(type: \"afterprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onpause: (ev: Event) => any;\r\n    addEventListener(type: \"pause\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onbeforeprint: (ev: Event) => any;\r\n    addEventListener(type: \"beforeprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    top: Window;\r\n    onmousedown: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousedown\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onseeked: (ev: Event) => any;\r\n    addEventListener(type: \"seeked\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    opener: Window;\r\n    onclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"click\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    innerHeight: number;\r\n    onwaiting: (ev: Event) => any;\r\n    addEventListener(type: \"waiting\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ononline: (ev: Event) => any;\r\n    addEventListener(type: \"online\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondurationchange: (ev: Event) => any;\r\n    addEventListener(type: \"durationchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    frames: Window;\r\n    onblur: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"blur\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onemptied: (ev: Event) => any;\r\n    addEventListener(type: \"emptied\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onseeking: (ev: Event) => any;\r\n    addEventListener(type: \"seeking\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oncanplay: (ev: Event) => any;\r\n    addEventListener(type: \"canplay\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    outerWidth: number;\r\n    onstalled: (ev: Event) => any;\r\n    addEventListener(type: \"stalled\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmousemove: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousemove\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    innerWidth: number;\r\n    onoffline: (ev: Event) => any;\r\n    addEventListener(type: \"offline\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    length: number;\r\n    screen: Screen;\r\n    onbeforeunload: (ev: BeforeUnloadEvent) => any;\r\n    addEventListener(type: \"beforeunload\", listener: (ev: BeforeUnloadEvent) => any, useCapture?: boolean): void;\r\n    onratechange: (ev: Event) => any;\r\n    addEventListener(type: \"ratechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onstorage: (ev: StorageEvent) => any;\r\n    addEventListener(type: \"storage\", listener: (ev: StorageEvent) => any, useCapture?: boolean): void;\r\n    onloadstart: (ev: Event) => any;\r\n    addEventListener(type: \"loadstart\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondragenter: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragenter\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onsubmit: (ev: Event) => any;\r\n    addEventListener(type: \"submit\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    self: Window;\r\n    document: Document;\r\n    onprogress: (ev: any) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    ondblclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"dblclick\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    pageYOffset: number;\r\n    oncontextmenu: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"contextmenu\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onchange: (ev: Event) => any;\r\n    addEventListener(type: \"change\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onloadedmetadata: (ev: Event) => any;\r\n    addEventListener(type: \"loadedmetadata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onplay: (ev: Event) => any;\r\n    addEventListener(type: \"play\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onerror: ErrorEventHandler;\r\n    onplaying: (ev: Event) => any;\r\n    addEventListener(type: \"playing\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    parent: Window;\r\n    location: Location;\r\n    oncanplaythrough: (ev: Event) => any;\r\n    addEventListener(type: \"canplaythrough\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onabort: (ev: UIEvent) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onreadystatechange: (ev: Event) => any;\r\n    addEventListener(type: \"readystatechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    outerHeight: number;\r\n    onkeypress: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keypress\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    frameElement: Element;\r\n    onloadeddata: (ev: Event) => any;\r\n    addEventListener(type: \"loadeddata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onsuspend: (ev: Event) => any;\r\n    addEventListener(type: \"suspend\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    window: Window;\r\n    onfocus: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focus\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onmessage: (ev: MessageEvent) => any;\r\n    addEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\r\n    ontimeupdate: (ev: Event) => any;\r\n    addEventListener(type: \"timeupdate\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onresize: (ev: UIEvent) => any;\r\n    addEventListener(type: \"resize\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onselect: (ev: UIEvent) => any;\r\n    addEventListener(type: \"select\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    navigator: Navigator;\r\n    styleMedia: StyleMedia;\r\n    ondrop: (ev: DragEvent) => any;\r\n    addEventListener(type: \"drop\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onmouseout: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseout\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onended: (ev: Event) => any;\r\n    addEventListener(type: \"ended\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onhashchange: (ev: Event) => any;\r\n    addEventListener(type: \"hashchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onunload: (ev: Event) => any;\r\n    addEventListener(type: \"unload\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onscroll: (ev: UIEvent) => any;\r\n    addEventListener(type: \"scroll\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    screenY: number;\r\n    onmousewheel: (ev: MouseWheelEvent) => any;\r\n    addEventListener(type: \"mousewheel\", listener: (ev: MouseWheelEvent) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onvolumechange: (ev: Event) => any;\r\n    addEventListener(type: \"volumechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oninput: (ev: Event) => any;\r\n    addEventListener(type: \"input\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    performance: Performance;\r\n    alert(message?: string): void;\r\n    scroll(x?: number, y?: number): void;\r\n    focus(): void;\r\n    scrollTo(x?: number, y?: number): void;\r\n    print(): void;\r\n    prompt(message?: string, defaul?: string): string;\r\n    toString(): string;\r\n    open(url?: string, target?: string, features?: string, replace?: boolean): Window;\r\n    scrollBy(x?: number, y?: number): void;\r\n    confirm(message?: string): boolean;\r\n    close(): void;\r\n    postMessage(message: any, targetOrigin: string, ports?: any): void;\r\n    showModalDialog(url?: string, argument?: any, options?: any): any;\r\n    blur(): void;\r\n    getSelection(): Selection;\r\n    getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var Window: {\r\n    prototype: Window;\r\n    new (): Window;\r\n}\r\n\r\ninterface SVGAnimatedPreserveAspectRatio {\r\n    animVal: SVGPreserveAspectRatio;\r\n    baseVal: SVGPreserveAspectRatio;\r\n}\r\ndeclare var SVGAnimatedPreserveAspectRatio: {\r\n    prototype: SVGAnimatedPreserveAspectRatio;\r\n    new (): SVGAnimatedPreserveAspectRatio;\r\n}\r\n\r\ninterface MSSiteModeEvent extends Event {\r\n    buttonID: number;\r\n    actionURL: string;\r\n}\r\ndeclare var MSSiteModeEvent: {\r\n    prototype: MSSiteModeEvent;\r\n    new (): MSSiteModeEvent;\r\n}\r\n\r\ninterface DOML2DeprecatedTextFlowControl {\r\n    clear: string;\r\n}\r\n\r\ninterface StyleSheetPageList {\r\n    length: number;\r\n    item(index: number): CSSPageRule;\r\n    [index: number]: CSSPageRule;\r\n}\r\ndeclare var StyleSheetPageList: {\r\n    prototype: StyleSheetPageList;\r\n    new (): StyleSheetPageList;\r\n}\r\n\r\ninterface MSCSSProperties extends CSSStyleDeclaration {\r\n    scrollbarShadowColor: string;\r\n    scrollbarHighlightColor: string;\r\n    layoutGridChar: string;\r\n    layoutGridType: string;\r\n    textAutospace: string;\r\n    textKashidaSpace: string;\r\n    writingMode: string;\r\n    scrollbarFaceColor: string;\r\n    backgroundPositionY: string;\r\n    lineBreak: string;\r\n    imeMode: string;\r\n    msBlockProgression: string;\r\n    layoutGridLine: string;\r\n    scrollbarBaseColor: string;\r\n    layoutGrid: string;\r\n    layoutFlow: string;\r\n    textKashida: string;\r\n    filter: string;\r\n    zoom: string;\r\n    scrollbarArrowColor: string;\r\n    behavior: string;\r\n    backgroundPositionX: string;\r\n    accelerator: string;\r\n    layoutGridMode: string;\r\n    textJustifyTrim: string;\r\n    scrollbar3dLightColor: string;\r\n    msInterpolationMode: string;\r\n    scrollbarTrackColor: string;\r\n    scrollbarDarkShadowColor: string;\r\n    styleFloat: string;\r\n    getAttribute(attributeName: string, flags?: number): any;\r\n    setAttribute(attributeName: string, AttributeValue: any, flags?: number): void;\r\n    removeAttribute(attributeName: string, flags?: number): boolean;\r\n}\r\ndeclare var MSCSSProperties: {\r\n    prototype: MSCSSProperties;\r\n    new (): MSCSSProperties;\r\n}\r\n\r\ninterface HTMLCollection extends MSHTMLCollectionExtensions {\r\n    length: number;\r\n    item(nameOrIndex?: any, optionalIndex?: any): Element;\r\n    namedItem(name: string): Element;\r\n    [name: number]: Element;\r\n}\r\ndeclare var HTMLCollection: {\r\n    prototype: HTMLCollection;\r\n    new (): HTMLCollection;\r\n}\r\n\r\ninterface SVGExternalResourcesRequired {\r\n    externalResourcesRequired: SVGAnimatedBoolean;\r\n}\r\n\r\ninterface HTMLImageElement extends HTMLElement, MSImageResourceExtensions, MSDataBindingExtensions, MSResourceMetadata {\r\n    width: number;\r\n    vspace: number;\r\n    naturalHeight: number;\r\n    alt: string;\r\n    align: string;\r\n    src: string;\r\n    useMap: string;\r\n    naturalWidth: number;\r\n    name: string;\r\n    height: number;\r\n    border: string;\r\n    hspace: number;\r\n    longDesc: string;\r\n    href: string;\r\n    isMap: boolean;\r\n    complete: boolean;\r\n    create(): HTMLImageElement;\r\n}\r\ndeclare var HTMLImageElement: {\r\n    prototype: HTMLImageElement;\r\n    new (): HTMLImageElement;\r\n}\r\n\r\ninterface HTMLAreaElement extends HTMLElement {\r\n    protocol: string;\r\n    search: string;\r\n    alt: string;\r\n    coords: string;\r\n    hostname: string;\r\n    port: string;\r\n    pathname: string;\r\n    host: string;\r\n    hash: string;\r\n    target: string;\r\n    href: string;\r\n    noHref: boolean;\r\n    shape: string;\r\n    toString(): string;\r\n}\r\ndeclare var HTMLAreaElement: {\r\n    prototype: HTMLAreaElement;\r\n    new (): HTMLAreaElement;\r\n}\r\n\r\ninterface EventTarget {\r\n    removeEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    dispatchEvent(evt: Event): boolean;\r\n}\r\n\r\ninterface SVGAngle {\r\n    valueAsString: string;\r\n    valueInSpecifiedUnits: number;\r\n    value: number;\r\n    unitType: number;\r\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\r\n    convertToSpecifiedUnits(unitType: number): void;\r\n    SVG_ANGLETYPE_RAD: number;\r\n    SVG_ANGLETYPE_UNKNOWN: number;\r\n    SVG_ANGLETYPE_UNSPECIFIED: number;\r\n    SVG_ANGLETYPE_DEG: number;\r\n    SVG_ANGLETYPE_GRAD: number;\r\n}\r\ndeclare var SVGAngle: {\r\n    prototype: SVGAngle;\r\n    new (): SVGAngle;\r\n    SVG_ANGLETYPE_RAD: number;\r\n    SVG_ANGLETYPE_UNKNOWN: number;\r\n    SVG_ANGLETYPE_UNSPECIFIED: number;\r\n    SVG_ANGLETYPE_DEG: number;\r\n    SVG_ANGLETYPE_GRAD: number;\r\n}\r\n\r\ninterface HTMLButtonElement extends HTMLElement, MSDataBindingExtensions {\r\n    value: string;\r\n    status: any;\r\n    form: HTMLFormElement;\r\n    name: string;\r\n    type: string;\r\n    createTextRange(): TextRange;\r\n}\r\ndeclare var HTMLButtonElement: {\r\n    prototype: HTMLButtonElement;\r\n    new (): HTMLButtonElement;\r\n}\r\n\r\ninterface HTMLSourceElement extends HTMLElement {\r\n    src: string;\r\n    media: string;\r\n    type: string;\r\n}\r\ndeclare var HTMLSourceElement: {\r\n    prototype: HTMLSourceElement;\r\n    new (): HTMLSourceElement;\r\n}\r\n\r\ninterface CanvasGradient {\r\n    addColorStop(offset: number, color: string): void;\r\n}\r\ndeclare var CanvasGradient: {\r\n    prototype: CanvasGradient;\r\n    new (): CanvasGradient;\r\n}\r\n\r\ninterface KeyboardEvent extends UIEvent {\r\n    location: number;\r\n    keyCode: number;\r\n    shiftKey: boolean;\r\n    which: number;\r\n    locale: string;\r\n    key: string;\r\n    altKey: boolean;\r\n    metaKey: boolean;\r\n    char: string;\r\n    ctrlKey: boolean;\r\n    repeat: boolean;\r\n    charCode: number;\r\n    getModifierState(keyArg: string): boolean;\r\n    initKeyboardEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, keyArg: string, locationArg: number, modifiersListArg: string, repeat: boolean, locale: string): void;\r\n    DOM_KEY_LOCATION_RIGHT: number;\r\n    DOM_KEY_LOCATION_STANDARD: number;\r\n    DOM_KEY_LOCATION_LEFT: number;\r\n    DOM_KEY_LOCATION_NUMPAD: number;\r\n    DOM_KEY_LOCATION_JOYSTICK: number;\r\n    DOM_KEY_LOCATION_MOBILE: number;\r\n}\r\ndeclare var KeyboardEvent: {\r\n    prototype: KeyboardEvent;\r\n    new (): KeyboardEvent;\r\n    DOM_KEY_LOCATION_RIGHT: number;\r\n    DOM_KEY_LOCATION_STANDARD: number;\r\n    DOM_KEY_LOCATION_LEFT: number;\r\n    DOM_KEY_LOCATION_NUMPAD: number;\r\n    DOM_KEY_LOCATION_JOYSTICK: number;\r\n    DOM_KEY_LOCATION_MOBILE: number;\r\n}\r\n\r\ninterface Document extends Node, NodeSelector, MSEventAttachmentTarget, DocumentEvent, MSResourceMetadata, MSNodeExtensions {\r\n    compatible: MSCompatibleInfoCollection;\r\n    onkeydown: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keydown\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    onkeyup: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keyup\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    implementation: DOMImplementation;\r\n    onreset: (ev: Event) => any;\r\n    addEventListener(type: \"reset\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    scripts: HTMLCollection;\r\n    onhelp: (ev: Event) => any;\r\n    addEventListener(type: \"help\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondragleave: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragleave\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    charset: string;\r\n    onfocusin: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusin\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    vlinkColor: string;\r\n    onseeked: (ev: Event) => any;\r\n    addEventListener(type: \"seeked\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    security: string;\r\n    title: string;\r\n    namespaces: MSNamespaceInfoCollection;\r\n    defaultCharset: string;\r\n    embeds: HTMLCollection;\r\n    styleSheets: StyleSheetList;\r\n    frames: Window;\r\n    ondurationchange: (ev: Event) => any;\r\n    addEventListener(type: \"durationchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    all: HTMLCollection;\r\n    forms: HTMLCollection;\r\n    onblur: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"blur\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    dir: string;\r\n    onemptied: (ev: Event) => any;\r\n    addEventListener(type: \"emptied\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    designMode: string;\r\n    onseeking: (ev: Event) => any;\r\n    addEventListener(type: \"seeking\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondeactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"deactivate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    oncanplay: (ev: Event) => any;\r\n    addEventListener(type: \"canplay\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondatasetchanged: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"datasetchanged\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onrowsdelete: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowsdelete\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    Script: MSScriptHost;\r\n    onloadstart: (ev: Event) => any;\r\n    addEventListener(type: \"loadstart\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    URLUnencoded: string;\r\n    defaultView: Window;\r\n    oncontrolselect: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"controlselect\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    ondragenter: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragenter\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onsubmit: (ev: Event) => any;\r\n    addEventListener(type: \"submit\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    inputEncoding: string;\r\n    activeElement: Element;\r\n    onchange: (ev: Event) => any;\r\n    addEventListener(type: \"change\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    links: HTMLCollection;\r\n    uniqueID: string;\r\n    URL: string;\r\n    onbeforeactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"beforeactivate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    head: HTMLHeadElement;\r\n    cookie: string;\r\n    xmlEncoding: string;\r\n    oncanplaythrough: (ev: Event) => any;\r\n    addEventListener(type: \"canplaythrough\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    documentMode: number;\r\n    characterSet: string;\r\n    anchors: HTMLCollection;\r\n    onbeforeupdate: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"beforeupdate\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    ondatasetcomplete: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"datasetcomplete\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    plugins: HTMLCollection;\r\n    onsuspend: (ev: Event) => any;\r\n    addEventListener(type: \"suspend\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    rootElement: SVGSVGElement;\r\n    readyState: string;\r\n    referrer: string;\r\n    alinkColor: string;\r\n    onerrorupdate: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"errorupdate\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    parentWindow: Window;\r\n    onmouseout: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseout\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onmsthumbnailclick: (ev: MSSiteModeEvent) => any;\r\n    addEventListener(type: \"msthumbnailclick\", listener: (ev: MSSiteModeEvent) => any, useCapture?: boolean): void;\r\n    onmousewheel: (ev: MouseWheelEvent) => any;\r\n    addEventListener(type: \"mousewheel\", listener: (ev: MouseWheelEvent) => any, useCapture?: boolean): void;\r\n    onvolumechange: (ev: Event) => any;\r\n    addEventListener(type: \"volumechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oncellchange: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"cellchange\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onrowexit: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowexit\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onrowsinserted: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowsinserted\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    xmlVersion: string;\r\n    msCapsLockWarningOff: boolean;\r\n    onpropertychange: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"propertychange\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    ondragend: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragend\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    doctype: DocumentType;\r\n    ondragover: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragover\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    bgColor: string;\r\n    ondragstart: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragstart\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onmouseup: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseup\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    ondrag: (ev: DragEvent) => any;\r\n    addEventListener(type: \"drag\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onmouseover: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseover\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    linkColor: string;\r\n    onpause: (ev: Event) => any;\r\n    addEventListener(type: \"pause\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmousedown: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousedown\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"click\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onwaiting: (ev: Event) => any;\r\n    addEventListener(type: \"waiting\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onstop: (ev: Event) => any;\r\n    addEventListener(type: \"stop\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmssitemodejumplistitemremoved: (ev: MSSiteModeEvent) => any;\r\n    addEventListener(type: \"mssitemodejumplistitemremoved\", listener: (ev: MSSiteModeEvent) => any, useCapture?: boolean): void;\r\n    applets: HTMLCollection;\r\n    body: HTMLElement;\r\n    domain: string;\r\n    xmlStandalone: boolean;\r\n    selection: MSSelection;\r\n    onstalled: (ev: Event) => any;\r\n    addEventListener(type: \"stalled\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmousemove: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousemove\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    documentElement: Element;\r\n    onbeforeeditfocus: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"beforeeditfocus\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onratechange: (ev: Event) => any;\r\n    addEventListener(type: \"ratechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onprogress: (ev: any) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    ondblclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"dblclick\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    oncontextmenu: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"contextmenu\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onloadedmetadata: (ev: Event) => any;\r\n    addEventListener(type: \"loadedmetadata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    media: string;\r\n    onerror: (ev: Event) => any;\r\n    addEventListener(type: \"error\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onplay: (ev: Event) => any;\r\n    addEventListener(type: \"play\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onafterupdate: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"afterupdate\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onplaying: (ev: Event) => any;\r\n    addEventListener(type: \"playing\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    images: HTMLCollection;\r\n    location: Location;\r\n    onabort: (ev: UIEvent) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onfocusout: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusout\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onselectionchange: (ev: Event) => any;\r\n    addEventListener(type: \"selectionchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onstoragecommit: (ev: StorageEvent) => any;\r\n    addEventListener(type: \"storagecommit\", listener: (ev: StorageEvent) => any, useCapture?: boolean): void;\r\n    ondataavailable: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"dataavailable\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onreadystatechange: (ev: Event) => any;\r\n    addEventListener(type: \"readystatechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    lastModified: string;\r\n    onkeypress: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keypress\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    onloadeddata: (ev: Event) => any;\r\n    addEventListener(type: \"loadeddata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onbeforedeactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"beforedeactivate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"activate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onselectstart: (ev: Event) => any;\r\n    addEventListener(type: \"selectstart\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onfocus: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focus\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    fgColor: string;\r\n    ontimeupdate: (ev: Event) => any;\r\n    addEventListener(type: \"timeupdate\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onselect: (ev: UIEvent) => any;\r\n    addEventListener(type: \"select\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    ondrop: (ev: DragEvent) => any;\r\n    addEventListener(type: \"drop\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onended: (ev: Event) => any;\r\n    addEventListener(type: \"ended\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    compatMode: string;\r\n    onscroll: (ev: UIEvent) => any;\r\n    addEventListener(type: \"scroll\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onrowenter: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowenter\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oninput: (ev: Event) => any;\r\n    addEventListener(type: \"input\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    queryCommandValue(commandId: string): string;\r\n    adoptNode(source: Node): Node;\r\n    queryCommandIndeterm(commandId: string): boolean;\r\n    getElementsByTagNameNS(namespaceURI: string, localName: string): NodeList;\r\n    createProcessingInstruction(target: string, data: string): ProcessingInstruction;\r\n    execCommand(commandId: string, showUI?: boolean, value?: any): boolean;\r\n    elementFromPoint(x: number, y: number): Element;\r\n    createCDATASection(data: string): CDATASection;\r\n    queryCommandText(commandId: string): string;\r\n    write(...content: string[]): void;\r\n    updateSettings(): void;\r\n    createElement(tagName: string): HTMLElement;\r\n    createElement(tagName: \"a\"): HTMLAnchorElement;\r\n    createElement(tagName: \"abbr\"): HTMLElement;\r\n    createElement(tagName: \"address\"): HTMLElement;\r\n    createElement(tagName: \"area\"): HTMLAreaElement;\r\n    createElement(tagName: \"article\"): HTMLElement;\r\n    createElement(tagName: \"aside\"): HTMLElement;\r\n    createElement(tagName: \"audio\"): HTMLAudioElement;\r\n    createElement(tagName: \"b\"): HTMLElement;\r\n    createElement(tagName: \"base\"): HTMLBaseElement;\r\n    createElement(tagName: \"bdi\"): HTMLElement;\r\n    createElement(tagName: \"bdo\"): HTMLElement;\r\n    createElement(tagName: \"blockquote\"): HTMLQuoteElement;\r\n    createElement(tagName: \"body\"): HTMLBodyElement;\r\n    createElement(tagName: \"br\"): HTMLBRElement;\r\n    createElement(tagName: \"button\"): HTMLButtonElement;\r\n    createElement(tagName: \"canvas\"): HTMLCanvasElement;\r\n    createElement(tagName: \"caption\"): HTMLTableCaptionElement;\r\n    createElement(tagName: \"cite\"): HTMLElement;\r\n    createElement(tagName: \"code\"): HTMLElement;\r\n    createElement(tagName: \"col\"): HTMLTableColElement;\r\n    createElement(tagName: \"colgroup\"): HTMLTableColElement;\r\n    createElement(tagName: \"datalist\"): HTMLDataListElement;\r\n    createElement(tagName: \"dd\"): HTMLElement;\r\n    createElement(tagName: \"del\"): HTMLModElement;\r\n    createElement(tagName: \"dfn\"): HTMLElement;\r\n    createElement(tagName: \"div\"): HTMLDivElement;\r\n    createElement(tagName: \"dl\"): HTMLDListElement;\r\n    createElement(tagName: \"dt\"): HTMLElement;\r\n    createElement(tagName: \"em\"): HTMLElement;\r\n    createElement(tagName: \"embed\"): HTMLEmbedElement;\r\n    createElement(tagName: \"fieldset\"): HTMLFieldSetElement;\r\n    createElement(tagName: \"figcaption\"): HTMLElement;\r\n    createElement(tagName: \"figure\"): HTMLElement;\r\n    createElement(tagName: \"footer\"): HTMLElement;\r\n    createElement(tagName: \"form\"): HTMLFormElement;\r\n    createElement(tagName: \"h1\"): HTMLHeadingElement;\r\n    createElement(tagName: \"h2\"): HTMLHeadingElement;\r\n    createElement(tagName: \"h3\"): HTMLHeadingElement;\r\n    createElement(tagName: \"h4\"): HTMLHeadingElement;\r\n    createElement(tagName: \"h5\"): HTMLHeadingElement;\r\n    createElement(tagName: \"h6\"): HTMLHeadingElement;\r\n    createElement(tagName: \"head\"): HTMLHeadElement;\r\n    createElement(tagName: \"header\"): HTMLElement;\r\n    createElement(tagName: \"hgroup\"): HTMLElement;\r\n    createElement(tagName: \"hr\"): HTMLHRElement;\r\n    createElement(tagName: \"html\"): HTMLHtmlElement;\r\n    createElement(tagName: \"i\"): HTMLElement;\r\n    createElement(tagName: \"iframe\"): HTMLIFrameElement;\r\n    createElement(tagName: \"img\"): HTMLImageElement;\r\n    createElement(tagName: \"input\"): HTMLInputElement;\r\n    createElement(tagName: \"ins\"): HTMLModElement;\r\n    createElement(tagName: \"kbd\"): HTMLElement;\r\n    createElement(tagName: \"label\"): HTMLLabelElement;\r\n    createElement(tagName: \"legend\"): HTMLLegendElement;\r\n    createElement(tagName: \"li\"): HTMLLIElement;\r\n    createElement(tagName: \"link\"): HTMLLinkElement;\r\n    createElement(tagName: \"main\"): HTMLElement;\r\n    createElement(tagName: \"map\"): HTMLMapElement;\r\n    createElement(tagName: \"mark\"): HTMLElement;\r\n    createElement(tagName: \"menu\"): HTMLMenuElement;\r\n    createElement(tagName: \"meta\"): HTMLMetaElement;\r\n    createElement(tagName: \"nav\"): HTMLElement;\r\n    createElement(tagName: \"noscript\"): HTMLElement;\r\n    createElement(tagName: \"object\"): HTMLObjectElement;\r\n    createElement(tagName: \"ol\"): HTMLOListElement;\r\n    createElement(tagName: \"optgroup\"): HTMLOptGroupElement;\r\n    createElement(tagName: \"option\"): HTMLOptionElement;\r\n    createElement(tagName: \"p\"): HTMLParagraphElement;\r\n    createElement(tagName: \"param\"): HTMLParamElement;\r\n    createElement(tagName: \"pre\"): HTMLPreElement;\r\n    createElement(tagName: \"progress\"): HTMLProgressElement;\r\n    createElement(tagName: \"q\"): HTMLQuoteElement;\r\n    createElement(tagName: \"rp\"): HTMLElement;\r\n    createElement(tagName: \"rt\"): HTMLElement;\r\n    createElement(tagName: \"ruby\"): HTMLElement;\r\n    createElement(tagName: \"s\"): HTMLElement;\r\n    createElement(tagName: \"samp\"): HTMLElement;\r\n    createElement(tagName: \"script\"): HTMLScriptElement;\r\n    createElement(tagName: \"section\"): HTMLElement;\r\n    createElement(tagName: \"select\"): HTMLSelectElement;\r\n    createElement(tagName: \"small\"): HTMLElement;\r\n    createElement(tagName: \"source\"): HTMLSourceElement;\r\n    createElement(tagName: \"span\"): HTMLSpanElement;\r\n    createElement(tagName: \"strong\"): HTMLElement;\r\n    createElement(tagName: \"style\"): HTMLStyleElement;\r\n    createElement(tagName: \"sub\"): HTMLElement;\r\n    createElement(tagName: \"summary\"): HTMLElement;\r\n    createElement(tagName: \"sup\"): HTMLElement;\r\n    createElement(tagName: \"table\"): HTMLTableElement;\r\n    createElement(tagName: \"tbody\"): HTMLTableSectionElement;\r\n    createElement(tagName: \"td\"): HTMLTableDataCellElement;\r\n    createElement(tagName: \"textarea\"): HTMLTextAreaElement;\r\n    createElement(tagName: \"tfoot\"): HTMLTableSectionElement;\r\n    createElement(tagName: \"th\"): HTMLTableHeaderCellElement;\r\n    createElement(tagName: \"thead\"): HTMLTableSectionElement;\r\n    createElement(tagName: \"title\"): HTMLTitleElement;\r\n    createElement(tagName: \"tr\"): HTMLTableRowElement;\r\n    createElement(tagName: \"track\"): HTMLTrackElement;\r\n    createElement(tagName: \"u\"): HTMLElement;\r\n    createElement(tagName: \"ul\"): HTMLUListElement;\r\n    createElement(tagName: \"var\"): HTMLElement;\r\n    createElement(tagName: \"video\"): HTMLVideoElement;\r\n    createElement(tagName: \"wbr\"): HTMLElement;\r\n    releaseCapture(): void;\r\n    writeln(...content: string[]): void;\r\n    createElementNS(namespaceURI: string, qualifiedName: string): Element;\r\n    open(url?: string, name?: string, features?: string, replace?: boolean): any;\r\n    queryCommandSupported(commandId: string): boolean;\r\n    createTreeWalker(root: Node, whatToShow: number, filter: NodeFilter, entityReferenceExpansion: boolean): TreeWalker;\r\n    createAttributeNS(namespaceURI: string, qualifiedName: string): Attr;\r\n    queryCommandEnabled(commandId: string): boolean;\r\n    focus(): void;\r\n    close(): void;\r\n    getElementsByClassName(classNames: string): NodeList;\r\n    importNode(importedNode: Node, deep: boolean): Node;\r\n    createRange(): Range;\r\n    fireEvent(eventName: string, eventObj?: any): boolean;\r\n    createComment(data: string): Comment;\r\n    getElementsByTagName(tagname: string): NodeList;\r\n    getElementsByTagName(name: \"a\"): NodeListOf<HTMLAnchorElement>;\r\n    getElementsByTagName(name: \"abbr\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"address\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"area\"): NodeListOf<HTMLAreaElement>;\r\n    getElementsByTagName(name: \"article\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"aside\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"audio\"): NodeListOf<HTMLAudioElement>;\r\n    getElementsByTagName(name: \"b\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"base\"): NodeListOf<HTMLBaseElement>;\r\n    getElementsByTagName(name: \"bdi\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"bdo\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"blockquote\"): NodeListOf<HTMLQuoteElement>;\r\n    getElementsByTagName(name: \"body\"): NodeListOf<HTMLBodyElement>;\r\n    getElementsByTagName(name: \"br\"): NodeListOf<HTMLBRElement>;\r\n    getElementsByTagName(name: \"button\"): NodeListOf<HTMLButtonElement>;\r\n    getElementsByTagName(name: \"canvas\"): NodeListOf<HTMLCanvasElement>;\r\n    getElementsByTagName(name: \"caption\"): NodeListOf<HTMLTableCaptionElement>;\r\n    getElementsByTagName(name: \"cite\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"code\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"col\"): NodeListOf<HTMLTableColElement>;\r\n    getElementsByTagName(name: \"colgroup\"): NodeListOf<HTMLTableColElement>;\r\n    getElementsByTagName(name: \"datalist\"): NodeListOf<HTMLDataListElement>;\r\n    getElementsByTagName(name: \"dd\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"del\"): NodeListOf<HTMLModElement>;\r\n    getElementsByTagName(name: \"dfn\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"div\"): NodeListOf<HTMLDivElement>;\r\n    getElementsByTagName(name: \"dl\"): NodeListOf<HTMLDListElement>;\r\n    getElementsByTagName(name: \"dt\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"em\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"embed\"): NodeListOf<HTMLEmbedElement>;\r\n    getElementsByTagName(name: \"fieldset\"): NodeListOf<HTMLFieldSetElement>;\r\n    getElementsByTagName(name: \"figcaption\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"figure\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"footer\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"form\"): NodeListOf<HTMLFormElement>;\r\n    getElementsByTagName(name: \"h1\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h2\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h3\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h4\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h5\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"h6\"): NodeListOf<HTMLHeadingElement>;\r\n    getElementsByTagName(name: \"head\"): NodeListOf<HTMLHeadElement>;\r\n    getElementsByTagName(name: \"header\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"hgroup\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"hr\"): NodeListOf<HTMLHRElement>;\r\n    getElementsByTagName(name: \"html\"): NodeListOf<HTMLHtmlElement>;\r\n    getElementsByTagName(name: \"i\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"iframe\"): NodeListOf<HTMLIFrameElement>;\r\n    getElementsByTagName(name: \"img\"): NodeListOf<HTMLImageElement>;\r\n    getElementsByTagName(name: \"input\"): NodeListOf<HTMLInputElement>;\r\n    getElementsByTagName(name: \"ins\"): NodeListOf<HTMLModElement>;\r\n    getElementsByTagName(name: \"kbd\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"label\"): NodeListOf<HTMLLabelElement>;\r\n    getElementsByTagName(name: \"legend\"): NodeListOf<HTMLLegendElement>;\r\n    getElementsByTagName(name: \"li\"): NodeListOf<HTMLLIElement>;\r\n    getElementsByTagName(name: \"link\"): NodeListOf<HTMLLinkElement>;\r\n    getElementsByTagName(name: \"main\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"map\"): NodeListOf<HTMLMapElement>;\r\n    getElementsByTagName(name: \"mark\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"menu\"): NodeListOf<HTMLMenuElement>;\r\n    getElementsByTagName(name: \"meta\"): NodeListOf<HTMLMetaElement>;\r\n    getElementsByTagName(name: \"nav\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"noscript\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"object\"): NodeListOf<HTMLObjectElement>;\r\n    getElementsByTagName(name: \"ol\"): NodeListOf<HTMLOListElement>;\r\n    getElementsByTagName(name: \"optgroup\"): NodeListOf<HTMLOptGroupElement>;\r\n    getElementsByTagName(name: \"option\"): NodeListOf<HTMLOptionElement>;\r\n    getElementsByTagName(name: \"p\"): NodeListOf<HTMLParagraphElement>;\r\n    getElementsByTagName(name: \"param\"): NodeListOf<HTMLParamElement>;\r\n    getElementsByTagName(name: \"pre\"): NodeListOf<HTMLPreElement>;\r\n    getElementsByTagName(name: \"progress\"): NodeListOf<HTMLProgressElement>;\r\n    getElementsByTagName(name: \"q\"): NodeListOf<HTMLQuoteElement>;\r\n    getElementsByTagName(name: \"rp\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"rt\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"ruby\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"s\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"samp\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"script\"): NodeListOf<HTMLScriptElement>;\r\n    getElementsByTagName(name: \"section\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"select\"): NodeListOf<HTMLSelectElement>;\r\n    getElementsByTagName(name: \"small\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"source\"): NodeListOf<HTMLSourceElement>;\r\n    getElementsByTagName(name: \"span\"): NodeListOf<HTMLSpanElement>;\r\n    getElementsByTagName(name: \"strong\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"style\"): NodeListOf<HTMLStyleElement>;\r\n    getElementsByTagName(name: \"sub\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"summary\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"sup\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"table\"): NodeListOf<HTMLTableElement>;\r\n    getElementsByTagName(name: \"tbody\"): NodeListOf<HTMLTableSectionElement>;\r\n    getElementsByTagName(name: \"td\"): NodeListOf<HTMLTableDataCellElement>;\r\n    getElementsByTagName(name: \"textarea\"): NodeListOf<HTMLTextAreaElement>;\r\n    getElementsByTagName(name: \"tfoot\"): NodeListOf<HTMLTableSectionElement>;\r\n    getElementsByTagName(name: \"th\"): NodeListOf<HTMLTableHeaderCellElement>;\r\n    getElementsByTagName(name: \"thead\"): NodeListOf<HTMLTableSectionElement>;\r\n    getElementsByTagName(name: \"title\"): NodeListOf<HTMLTitleElement>;\r\n    getElementsByTagName(name: \"tr\"): NodeListOf<HTMLTableRowElement>;\r\n    getElementsByTagName(name: \"track\"): NodeListOf<HTMLTrackElement>;\r\n    getElementsByTagName(name: \"u\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"ul\"): NodeListOf<HTMLUListElement>;\r\n    getElementsByTagName(name: \"var\"): NodeListOf<HTMLElement>;\r\n    getElementsByTagName(name: \"video\"): NodeListOf<HTMLVideoElement>;\r\n    getElementsByTagName(name: \"wbr\"): NodeListOf<HTMLElement>;\r\n    createDocumentFragment(): DocumentFragment;\r\n    createStyleSheet(href?: string, index?: number): CSSStyleSheet;\r\n    getElementsByName(elementName: string): NodeList;\r\n    queryCommandState(commandId: string): boolean;\r\n    hasFocus(): boolean;\r\n    execCommandShowHelp(commandId: string): boolean;\r\n    createAttribute(name: string): Attr;\r\n    createTextNode(data: string): Text;\r\n    createNodeIterator(root: Node, whatToShow: number, filter: NodeFilter, entityReferenceExpansion: boolean): NodeIterator;\r\n    createEventObject(eventObj?: any): MSEventObj;\r\n    getSelection(): Selection;\r\n    getElementById(elementId: string): HTMLElement;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    addEventListener(type: \"DOMContentLoaded\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n}\r\ndeclare var Document: {\r\n    prototype: Document;\r\n    new (): Document;\r\n}\r\n\r\ninterface MessageEvent extends Event {\r\n    source: Window;\r\n    origin: string;\r\n    data: any;\r\n    initMessageEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, dataArg: any, originArg: string, lastEventIdArg: string, sourceArg: Window): void;\r\n}\r\ndeclare var MessageEvent: {\r\n    prototype: MessageEvent;\r\n    new (): MessageEvent;\r\n}\r\n\r\ninterface SVGElement extends Element {\r\n    onmouseover: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseover\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    viewportElement: SVGElement;\r\n    onmousemove: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousemove\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onmouseout: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseout\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    ondblclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"dblclick\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onfocusout: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusout\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onfocusin: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusin\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    xmlbase: string;\r\n    onmousedown: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousedown\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmouseup: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseup\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"click\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    ownerSVGElement: SVGSVGElement;\r\n    id: string;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var SVGElement: {\r\n    prototype: SVGElement;\r\n    new (): SVGElement;\r\n}\r\n\r\ninterface HTMLScriptElement extends HTMLElement {\r\n    defer: boolean;\r\n    text: string;\r\n    src: string;\r\n    htmlFor: string;\r\n    charset: string;\r\n    type: string;\r\n    event: string;\r\n}\r\ndeclare var HTMLScriptElement: {\r\n    prototype: HTMLScriptElement;\r\n    new (): HTMLScriptElement;\r\n}\r\n\r\ninterface HTMLTableRowElement extends HTMLElement, HTMLTableAlignment, DOML2DeprecatedBackgroundColorStyle {\r\n    rowIndex: number;\r\n    cells: HTMLCollection;\r\n    align: string;\r\n    borderColorLight: any;\r\n    sectionRowIndex: number;\r\n    borderColor: any;\r\n    height: any;\r\n    borderColorDark: any;\r\n    deleteCell(index?: number): void;\r\n    insertCell(index?: number): HTMLElement;\r\n}\r\ndeclare var HTMLTableRowElement: {\r\n    prototype: HTMLTableRowElement;\r\n    new (): HTMLTableRowElement;\r\n}\r\n\r\ninterface CanvasRenderingContext2D {\r\n    miterLimit: number;\r\n    font: string;\r\n    globalCompositeOperation: string;\r\n    msFillRule: string;\r\n    lineCap: string;\r\n    msImageSmoothingEnabled: boolean;\r\n    lineDashOffset: number;\r\n    shadowColor: string;\r\n    lineJoin: string;\r\n    shadowOffsetX: number;\r\n    lineWidth: number;\r\n    canvas: HTMLCanvasElement;\r\n    strokeStyle: any;\r\n    globalAlpha: number;\r\n    shadowOffsetY: number;\r\n    fillStyle: any;\r\n    shadowBlur: number;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n    restore(): void;\r\n    setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\r\n    save(): void;\r\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\r\n    measureText(text: string): TextMetrics;\r\n    isPointInPath(x: number, y: number, fillRule?: string): boolean;\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\r\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): void;\r\n    rotate(angle: number): void;\r\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\r\n    translate(x: number, y: number): void;\r\n    scale(x: number, y: number): void;\r\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\r\n    lineTo(x: number, y: number): void;\r\n    getLineDash(): Array<number>;\r\n    fill(fillRule?: string): void;\r\n    createImageData(imageDataOrSw: any, sh?: number): ImageData;\r\n    createPattern(image: HTMLElement, repetition: string): CanvasPattern;\r\n    closePath(): void;\r\n    rect(x: number, y: number, w: number, h: number): void;\r\n    clip(fillRule?: string): void;\r\n    clearRect(x: number, y: number, w: number, h: number): void;\r\n    moveTo(x: number, y: number): void;\r\n    getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\r\n    fillRect(x: number, y: number, w: number, h: number): void;\r\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\r\n    drawImage(image: HTMLElement, offsetX: number, offsetY: number, width?: number, height?: number, canvasOffsetX?: number, canvasOffsetY?: number, canvasImageWidth?: number, canvasImageHeight?: number): void;\r\n    transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\r\n    stroke(): void;\r\n    strokeRect(x: number, y: number, w: number, h: number): void;\r\n    setLineDash(segments: Array<number>): void;\r\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\r\n    beginPath(): void;\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\r\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\r\n}\r\ndeclare var CanvasRenderingContext2D: {\r\n    prototype: CanvasRenderingContext2D;\r\n    new (): CanvasRenderingContext2D;\r\n}\r\n\r\ninterface MSCSSRuleList {\r\n    length: number;\r\n    item(index?: number): CSSStyleRule;\r\n    [index: number]: CSSStyleRule;\r\n}\r\ndeclare var MSCSSRuleList: {\r\n    prototype: MSCSSRuleList;\r\n    new (): MSCSSRuleList;\r\n}\r\n\r\ninterface SVGPathSegLinetoHorizontalAbs extends SVGPathSeg {\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegLinetoHorizontalAbs: {\r\n    prototype: SVGPathSegLinetoHorizontalAbs;\r\n    new (): SVGPathSegLinetoHorizontalAbs;\r\n}\r\n\r\ninterface SVGPathSegArcAbs extends SVGPathSeg {\r\n    y: number;\r\n    sweepFlag: boolean;\r\n    r2: number;\r\n    x: number;\r\n    angle: number;\r\n    r1: number;\r\n    largeArcFlag: boolean;\r\n}\r\ndeclare var SVGPathSegArcAbs: {\r\n    prototype: SVGPathSegArcAbs;\r\n    new (): SVGPathSegArcAbs;\r\n}\r\n\r\ninterface SVGTransformList {\r\n    numberOfItems: number;\r\n    getItem(index: number): SVGTransform;\r\n    consolidate(): SVGTransform;\r\n    clear(): void;\r\n    appendItem(newItem: SVGTransform): SVGTransform;\r\n    initialize(newItem: SVGTransform): SVGTransform;\r\n    removeItem(index: number): SVGTransform;\r\n    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;\r\n    replaceItem(newItem: SVGTransform, index: number): SVGTransform;\r\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\r\n}\r\ndeclare var SVGTransformList: {\r\n    prototype: SVGTransformList;\r\n    new (): SVGTransformList;\r\n}\r\n\r\ninterface HTMLHtmlElement extends HTMLElement {\r\n    version: string;\r\n}\r\ndeclare var HTMLHtmlElement: {\r\n    prototype: HTMLHtmlElement;\r\n    new (): HTMLHtmlElement;\r\n}\r\n\r\ninterface SVGPathSegClosePath extends SVGPathSeg {\r\n}\r\ndeclare var SVGPathSegClosePath: {\r\n    prototype: SVGPathSegClosePath;\r\n    new (): SVGPathSegClosePath;\r\n}\r\n\r\ninterface HTMLFrameElement extends HTMLElement, GetSVGDocument, MSDataBindingExtensions {\r\n    width: any;\r\n    scrolling: string;\r\n    marginHeight: string;\r\n    marginWidth: string;\r\n    borderColor: any;\r\n    frameSpacing: any;\r\n    frameBorder: string;\r\n    noResize: boolean;\r\n    contentWindow: Window;\r\n    src: string;\r\n    name: string;\r\n    height: any;\r\n    contentDocument: Document;\r\n    border: string;\r\n    longDesc: string;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    security: any;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var HTMLFrameElement: {\r\n    prototype: HTMLFrameElement;\r\n    new (): HTMLFrameElement;\r\n}\r\n\r\ninterface SVGAnimatedLength {\r\n    animVal: SVGLength;\r\n    baseVal: SVGLength;\r\n}\r\ndeclare var SVGAnimatedLength: {\r\n    prototype: SVGAnimatedLength;\r\n    new (): SVGAnimatedLength;\r\n}\r\n\r\ninterface SVGAnimatedPoints {\r\n    points: SVGPointList;\r\n    animatedPoints: SVGPointList;\r\n}\r\n\r\ninterface SVGDefsElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n}\r\ndeclare var SVGDefsElement: {\r\n    prototype: SVGDefsElement;\r\n    new (): SVGDefsElement;\r\n}\r\n\r\ninterface HTMLQuoteElement extends HTMLElement {\r\n    dateTime: string;\r\n    cite: string;\r\n}\r\ndeclare var HTMLQuoteElement: {\r\n    prototype: HTMLQuoteElement;\r\n    new (): HTMLQuoteElement;\r\n}\r\n\r\ninterface CSSMediaRule extends CSSRule {\r\n    media: MediaList;\r\n    cssRules: CSSRuleList;\r\n    insertRule(rule: string, index?: number): number;\r\n    deleteRule(index?: number): void;\r\n}\r\ndeclare var CSSMediaRule: {\r\n    prototype: CSSMediaRule;\r\n    new (): CSSMediaRule;\r\n}\r\n\r\ninterface WindowModal {\r\n    dialogArguments: any;\r\n    returnValue: any;\r\n}\r\n\r\ninterface XMLHttpRequest extends EventTarget {\r\n    responseBody: any;\r\n    status: number;\r\n    readyState: number;\r\n    responseText: string;\r\n    responseXML: Document;\r\n    ontimeout: (ev: Event) => any;\r\n    addEventListener(type: \"timeout\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    statusText: string;\r\n    onreadystatechange: (ev: Event) => any;\r\n    addEventListener(type: \"readystatechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    timeout: number;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    open(method: string, url: string, async?: boolean, user?: string, password?: string): void;\r\n    create(): XMLHttpRequest;\r\n    send(data?: any): void;\r\n    abort(): void;\r\n    getAllResponseHeaders(): string;\r\n    setRequestHeader(header: string, value: string): void;\r\n    getResponseHeader(header: string): string;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    LOADING: number;\r\n    DONE: number;\r\n    UNSENT: number;\r\n    OPENED: number;\r\n    HEADERS_RECEIVED: number;\r\n}\r\ndeclare var XMLHttpRequest: {\r\n    prototype: XMLHttpRequest;\r\n    new (): XMLHttpRequest;\r\n    LOADING: number;\r\n    DONE: number;\r\n    UNSENT: number;\r\n    OPENED: number;\r\n    HEADERS_RECEIVED: number;\r\n}\r\n\r\ninterface HTMLTableHeaderCellElement extends HTMLTableCellElement {\r\n    scope: string;\r\n}\r\ndeclare var HTMLTableHeaderCellElement: {\r\n    prototype: HTMLTableHeaderCellElement;\r\n    new (): HTMLTableHeaderCellElement;\r\n}\r\n\r\ninterface HTMLDListElement extends HTMLElement, DOML2DeprecatedListSpaceReduction {\r\n}\r\ndeclare var HTMLDListElement: {\r\n    prototype: HTMLDListElement;\r\n    new (): HTMLDListElement;\r\n}\r\n\r\ninterface MSDataBindingExtensions {\r\n    dataSrc: string;\r\n    dataFormatAs: string;\r\n    dataFld: string;\r\n}\r\n\r\ninterface SVGPathSegLinetoHorizontalRel extends SVGPathSeg {\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegLinetoHorizontalRel: {\r\n    prototype: SVGPathSegLinetoHorizontalRel;\r\n    new (): SVGPathSegLinetoHorizontalRel;\r\n}\r\n\r\ninterface SVGEllipseElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    ry: SVGAnimatedLength;\r\n    cx: SVGAnimatedLength;\r\n    rx: SVGAnimatedLength;\r\n    cy: SVGAnimatedLength;\r\n}\r\ndeclare var SVGEllipseElement: {\r\n    prototype: SVGEllipseElement;\r\n    new (): SVGEllipseElement;\r\n}\r\n\r\ninterface SVGAElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired, SVGURIReference {\r\n    target: SVGAnimatedString;\r\n}\r\ndeclare var SVGAElement: {\r\n    prototype: SVGAElement;\r\n    new (): SVGAElement;\r\n}\r\n\r\ninterface SVGStylable {\r\n    className: SVGAnimatedString;\r\n    style: CSSStyleDeclaration;\r\n}\r\n\r\ninterface SVGTransformable extends SVGLocatable {\r\n    transform: SVGAnimatedTransformList;\r\n}\r\n\r\ninterface HTMLFrameSetElement extends HTMLElement {\r\n    ononline: (ev: Event) => any;\r\n    addEventListener(type: \"online\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    borderColor: any;\r\n    rows: string;\r\n    cols: string;\r\n    onblur: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"blur\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    frameSpacing: any;\r\n    onfocus: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focus\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onmessage: (ev: MessageEvent) => any;\r\n    addEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\r\n    onerror: (ev: Event) => any;\r\n    addEventListener(type: \"error\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    frameBorder: string;\r\n    onresize: (ev: UIEvent) => any;\r\n    addEventListener(type: \"resize\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    name: string;\r\n    onafterprint: (ev: Event) => any;\r\n    addEventListener(type: \"afterprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onbeforeprint: (ev: Event) => any;\r\n    addEventListener(type: \"beforeprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onoffline: (ev: Event) => any;\r\n    addEventListener(type: \"offline\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    border: string;\r\n    onunload: (ev: Event) => any;\r\n    addEventListener(type: \"unload\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onhashchange: (ev: Event) => any;\r\n    addEventListener(type: \"hashchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onbeforeunload: (ev: BeforeUnloadEvent) => any;\r\n    addEventListener(type: \"beforeunload\", listener: (ev: BeforeUnloadEvent) => any, useCapture?: boolean): void;\r\n    onstorage: (ev: StorageEvent) => any;\r\n    addEventListener(type: \"storage\", listener: (ev: StorageEvent) => any, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var HTMLFrameSetElement: {\r\n    prototype: HTMLFrameSetElement;\r\n    new (): HTMLFrameSetElement;\r\n}\r\n\r\ninterface Screen {\r\n    width: number;\r\n    deviceXDPI: number;\r\n    fontSmoothingEnabled: boolean;\r\n    bufferDepth: number;\r\n    logicalXDPI: number;\r\n    systemXDPI: number;\r\n    availHeight: number;\r\n    height: number;\r\n    logicalYDPI: number;\r\n    systemYDPI: number;\r\n    updateInterval: number;\r\n    colorDepth: number;\r\n    availWidth: number;\r\n    deviceYDPI: number;\r\n    pixelDepth: number;\r\n}\r\ndeclare var Screen: {\r\n    prototype: Screen;\r\n    new (): Screen;\r\n}\r\n\r\ninterface Coordinates {\r\n    altitudeAccuracy: number;\r\n    longitude: number;\r\n    latitude: number;\r\n    speed: number;\r\n    heading: number;\r\n    altitude: number;\r\n    accuracy: number;\r\n}\r\ndeclare var Coordinates: {\r\n    prototype: Coordinates;\r\n    new (): Coordinates;\r\n}\r\n\r\ninterface NavigatorGeolocation {\r\n    geolocation: Geolocation;\r\n}\r\n\r\ninterface NavigatorContentUtils {\r\n}\r\n\r\ninterface EventListener {\r\n    (evt: Event): void;\r\n}\r\n\r\ninterface SVGLangSpace {\r\n    xmllang: string;\r\n    xmlspace: string;\r\n}\r\n\r\ninterface DataTransfer {\r\n    effectAllowed: string;\r\n    dropEffect: string;\r\n    clearData(format?: string): boolean;\r\n    setData(format: string, data: string): boolean;\r\n    getData(format: string): string;\r\n}\r\ndeclare var DataTransfer: {\r\n    prototype: DataTransfer;\r\n    new (): DataTransfer;\r\n}\r\n\r\ninterface FocusEvent extends UIEvent {\r\n    relatedTarget: EventTarget;\r\n    initFocusEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, relatedTargetArg: EventTarget): void;\r\n}\r\ndeclare var FocusEvent: {\r\n    prototype: FocusEvent;\r\n    new (): FocusEvent;\r\n}\r\n\r\ninterface Range {\r\n    startOffset: number;\r\n    collapsed: boolean;\r\n    endOffset: number;\r\n    startContainer: Node;\r\n    endContainer: Node;\r\n    commonAncestorContainer: Node;\r\n    setStart(refNode: Node, offset: number): void;\r\n    setEndBefore(refNode: Node): void;\r\n    setStartBefore(refNode: Node): void;\r\n    selectNode(refNode: Node): void;\r\n    detach(): void;\r\n    getBoundingClientRect(): ClientRect;\r\n    toString(): string;\r\n    compareBoundaryPoints(how: number, sourceRange: Range): number;\r\n    insertNode(newNode: Node): void;\r\n    collapse(toStart: boolean): void;\r\n    selectNodeContents(refNode: Node): void;\r\n    cloneContents(): DocumentFragment;\r\n    setEnd(refNode: Node, offset: number): void;\r\n    cloneRange(): Range;\r\n    getClientRects(): ClientRectList;\r\n    surroundContents(newParent: Node): void;\r\n    deleteContents(): void;\r\n    setStartAfter(refNode: Node): void;\r\n    extractContents(): DocumentFragment;\r\n    setEndAfter(refNode: Node): void;\r\n    END_TO_END: number;\r\n    START_TO_START: number;\r\n    START_TO_END: number;\r\n    END_TO_START: number;\r\n}\r\ndeclare var Range: {\r\n    prototype: Range;\r\n    new (): Range;\r\n    END_TO_END: number;\r\n    START_TO_START: number;\r\n    START_TO_END: number;\r\n    END_TO_START: number;\r\n}\r\n\r\ninterface SVGPoint {\r\n    y: number;\r\n    x: number;\r\n    matrixTransform(matrix: SVGMatrix): SVGPoint;\r\n}\r\ndeclare var SVGPoint: {\r\n    prototype: SVGPoint;\r\n    new (): SVGPoint;\r\n}\r\n\r\ninterface MSPluginsCollection {\r\n    length: number;\r\n    refresh(reload?: boolean): void;\r\n}\r\ndeclare var MSPluginsCollection: {\r\n    prototype: MSPluginsCollection;\r\n    new (): MSPluginsCollection;\r\n}\r\n\r\ninterface SVGAnimatedNumberList {\r\n    animVal: SVGNumberList;\r\n    baseVal: SVGNumberList;\r\n}\r\ndeclare var SVGAnimatedNumberList: {\r\n    prototype: SVGAnimatedNumberList;\r\n    new (): SVGAnimatedNumberList;\r\n}\r\n\r\ninterface SVGSVGElement extends SVGElement, SVGStylable, SVGZoomAndPan, DocumentEvent, SVGLangSpace, SVGLocatable, SVGTests, SVGFitToViewBox, SVGExternalResourcesRequired {\r\n    width: SVGAnimatedLength;\r\n    x: SVGAnimatedLength;\r\n    contentStyleType: string;\r\n    onzoom: (ev: any) => any;\r\n    addEventListener(type: \"zoom\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    y: SVGAnimatedLength;\r\n    viewport: SVGRect;\r\n    onerror: (ev: Event) => any;\r\n    addEventListener(type: \"error\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    pixelUnitToMillimeterY: number;\r\n    onresize: (ev: UIEvent) => any;\r\n    addEventListener(type: \"resize\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    screenPixelToMillimeterY: number;\r\n    height: SVGAnimatedLength;\r\n    onabort: (ev: UIEvent) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    contentScriptType: string;\r\n    pixelUnitToMillimeterX: number;\r\n    currentTranslate: SVGPoint;\r\n    onunload: (ev: Event) => any;\r\n    addEventListener(type: \"unload\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    currentScale: number;\r\n    onscroll: (ev: UIEvent) => any;\r\n    addEventListener(type: \"scroll\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    screenPixelToMillimeterX: number;\r\n    setCurrentTime(seconds: number): void;\r\n    createSVGLength(): SVGLength;\r\n    getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeList;\r\n    unpauseAnimations(): void;\r\n    createSVGRect(): SVGRect;\r\n    checkIntersection(element: SVGElement, rect: SVGRect): boolean;\r\n    unsuspendRedrawAll(): void;\r\n    pauseAnimations(): void;\r\n    suspendRedraw(maxWaitMilliseconds: number): number;\r\n    deselectAll(): void;\r\n    createSVGAngle(): SVGAngle;\r\n    getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeList;\r\n    createSVGTransform(): SVGTransform;\r\n    unsuspendRedraw(suspendHandleID: number): void;\r\n    forceRedraw(): void;\r\n    getCurrentTime(): number;\r\n    checkEnclosure(element: SVGElement, rect: SVGRect): boolean;\r\n    createSVGMatrix(): SVGMatrix;\r\n    createSVGPoint(): SVGPoint;\r\n    createSVGNumber(): SVGNumber;\r\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\r\n    getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;\r\n    getElementById(elementId: string): Element;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var SVGSVGElement: {\r\n    prototype: SVGSVGElement;\r\n    new (): SVGSVGElement;\r\n}\r\n\r\ninterface HTMLLabelElement extends HTMLElement, MSDataBindingExtensions {\r\n    htmlFor: string;\r\n    form: HTMLFormElement;\r\n}\r\ndeclare var HTMLLabelElement: {\r\n    prototype: HTMLLabelElement;\r\n    new (): HTMLLabelElement;\r\n}\r\n\r\ninterface MSResourceMetadata {\r\n    protocol: string;\r\n    fileSize: string;\r\n    fileUpdatedDate: string;\r\n    nameProp: string;\r\n    fileCreatedDate: string;\r\n    fileModifiedDate: string;\r\n    mimeType: string;\r\n}\r\n\r\ninterface HTMLLegendElement extends HTMLElement, MSDataBindingExtensions {\r\n    align: string;\r\n    form: HTMLFormElement;\r\n}\r\ndeclare var HTMLLegendElement: {\r\n    prototype: HTMLLegendElement;\r\n    new (): HTMLLegendElement;\r\n}\r\n\r\ninterface HTMLDirectoryElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, DOML2DeprecatedListNumberingAndBulletStyle {\r\n}\r\ndeclare var HTMLDirectoryElement: {\r\n    prototype: HTMLDirectoryElement;\r\n    new (): HTMLDirectoryElement;\r\n}\r\n\r\ninterface SVGAnimatedInteger {\r\n    animVal: number;\r\n    baseVal: number;\r\n}\r\ndeclare var SVGAnimatedInteger: {\r\n    prototype: SVGAnimatedInteger;\r\n    new (): SVGAnimatedInteger;\r\n}\r\n\r\ninterface SVGTextElement extends SVGTextPositioningElement, SVGTransformable {\r\n}\r\ndeclare var SVGTextElement: {\r\n    prototype: SVGTextElement;\r\n    new (): SVGTextElement;\r\n}\r\n\r\ninterface SVGTSpanElement extends SVGTextPositioningElement {\r\n}\r\ndeclare var SVGTSpanElement: {\r\n    prototype: SVGTSpanElement;\r\n    new (): SVGTSpanElement;\r\n}\r\n\r\ninterface HTMLLIElement extends HTMLElement, DOML2DeprecatedListNumberingAndBulletStyle {\r\n    value: number;\r\n}\r\ndeclare var HTMLLIElement: {\r\n    prototype: HTMLLIElement;\r\n    new (): HTMLLIElement;\r\n}\r\n\r\ninterface SVGPathSegLinetoVerticalAbs extends SVGPathSeg {\r\n    y: number;\r\n}\r\ndeclare var SVGPathSegLinetoVerticalAbs: {\r\n    prototype: SVGPathSegLinetoVerticalAbs;\r\n    new (): SVGPathSegLinetoVerticalAbs;\r\n}\r\n\r\ninterface MSStorageExtensions {\r\n    remainingSpace: number;\r\n}\r\n\r\ninterface SVGStyleElement extends SVGElement, SVGLangSpace {\r\n    media: string;\r\n    type: string;\r\n    title: string;\r\n}\r\ndeclare var SVGStyleElement: {\r\n    prototype: SVGStyleElement;\r\n    new (): SVGStyleElement;\r\n}\r\n\r\ninterface MSCurrentStyleCSSProperties extends MSCSSProperties {\r\n    blockDirection: string;\r\n    clipBottom: string;\r\n    clipLeft: string;\r\n    clipRight: string;\r\n    clipTop: string;\r\n    hasLayout: string;\r\n}\r\ndeclare var MSCurrentStyleCSSProperties: {\r\n    prototype: MSCurrentStyleCSSProperties;\r\n    new (): MSCurrentStyleCSSProperties;\r\n}\r\n\r\ninterface MSHTMLCollectionExtensions {\r\n    urns(urn: any): Object;\r\n    tags(tagName: any): Object;\r\n}\r\n\r\ninterface Storage extends MSStorageExtensions {\r\n    length: number;\r\n    getItem(key: string): any;\r\n    [key: string]: any;\r\n    setItem(key: string, data: string): void;\r\n    clear(): void;\r\n    removeItem(key: string): void;\r\n    key(index: number): string;\r\n    [index: number]: any;\r\n}\r\ndeclare var Storage: {\r\n    prototype: Storage;\r\n    new (): Storage;\r\n}\r\n\r\ninterface HTMLIFrameElement extends HTMLElement, GetSVGDocument, MSDataBindingExtensions {\r\n    width: string;\r\n    scrolling: string;\r\n    marginHeight: string;\r\n    marginWidth: string;\r\n    frameSpacing: any;\r\n    frameBorder: string;\r\n    noResize: boolean;\r\n    vspace: number;\r\n    contentWindow: Window;\r\n    align: string;\r\n    src: string;\r\n    name: string;\r\n    height: string;\r\n    border: string;\r\n    contentDocument: Document;\r\n    hspace: number;\r\n    longDesc: string;\r\n    security: any;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var HTMLIFrameElement: {\r\n    prototype: HTMLIFrameElement;\r\n    new (): HTMLIFrameElement;\r\n}\r\n\r\ninterface TextRangeCollection {\r\n    length: number;\r\n    item(index: number): TextRange;\r\n    [index: number]: TextRange;\r\n}\r\ndeclare var TextRangeCollection: {\r\n    prototype: TextRangeCollection;\r\n    new (): TextRangeCollection;\r\n}\r\n\r\ninterface HTMLBodyElement extends HTMLElement, DOML2DeprecatedBackgroundStyle, DOML2DeprecatedBackgroundColorStyle {\r\n    scroll: string;\r\n    ononline: (ev: Event) => any;\r\n    addEventListener(type: \"online\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onblur: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"blur\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    noWrap: boolean;\r\n    onfocus: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focus\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onmessage: (ev: MessageEvent) => any;\r\n    addEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\r\n    text: any;\r\n    onerror: (ev: Event) => any;\r\n    addEventListener(type: \"error\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    bgProperties: string;\r\n    onresize: (ev: UIEvent) => any;\r\n    addEventListener(type: \"resize\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    link: any;\r\n    aLink: any;\r\n    bottomMargin: any;\r\n    topMargin: any;\r\n    onafterprint: (ev: Event) => any;\r\n    addEventListener(type: \"afterprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    vLink: any;\r\n    onbeforeprint: (ev: Event) => any;\r\n    addEventListener(type: \"beforeprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onoffline: (ev: Event) => any;\r\n    addEventListener(type: \"offline\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onunload: (ev: Event) => any;\r\n    addEventListener(type: \"unload\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onhashchange: (ev: Event) => any;\r\n    addEventListener(type: \"hashchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    rightMargin: any;\r\n    onbeforeunload: (ev: BeforeUnloadEvent) => any;\r\n    addEventListener(type: \"beforeunload\", listener: (ev: BeforeUnloadEvent) => any, useCapture?: boolean): void;\r\n    leftMargin: any;\r\n    onstorage: (ev: StorageEvent) => any;\r\n    addEventListener(type: \"storage\", listener: (ev: StorageEvent) => any, useCapture?: boolean): void;\r\n    createTextRange(): TextRange;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var HTMLBodyElement: {\r\n    prototype: HTMLBodyElement;\r\n    new (): HTMLBodyElement;\r\n}\r\n\r\ninterface DocumentType extends Node {\r\n    name: string;\r\n    notations: NamedNodeMap;\r\n    systemId: string;\r\n    internalSubset: string;\r\n    entities: NamedNodeMap;\r\n    publicId: string;\r\n}\r\ndeclare var DocumentType: {\r\n    prototype: DocumentType;\r\n    new (): DocumentType;\r\n}\r\n\r\ninterface SVGRadialGradientElement extends SVGGradientElement {\r\n    cx: SVGAnimatedLength;\r\n    r: SVGAnimatedLength;\r\n    cy: SVGAnimatedLength;\r\n    fx: SVGAnimatedLength;\r\n    fy: SVGAnimatedLength;\r\n}\r\ndeclare var SVGRadialGradientElement: {\r\n    prototype: SVGRadialGradientElement;\r\n    new (): SVGRadialGradientElement;\r\n}\r\n\r\ninterface MutationEvent extends Event {\r\n    newValue: string;\r\n    attrChange: number;\r\n    attrName: string;\r\n    prevValue: string;\r\n    relatedNode: Node;\r\n    initMutationEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, relatedNodeArg: Node, prevValueArg: string, newValueArg: string, attrNameArg: string, attrChangeArg: number): void;\r\n    MODIFICATION: number;\r\n    REMOVAL: number;\r\n    ADDITION: number;\r\n}\r\ndeclare var MutationEvent: {\r\n    prototype: MutationEvent;\r\n    new (): MutationEvent;\r\n    MODIFICATION: number;\r\n    REMOVAL: number;\r\n    ADDITION: number;\r\n}\r\n\r\ninterface DragEvent extends MouseEvent {\r\n    dataTransfer: DataTransfer;\r\n    initDragEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, dataTransferArg: DataTransfer): void;\r\n}\r\ndeclare var DragEvent: {\r\n    prototype: DragEvent;\r\n    new (): DragEvent;\r\n}\r\n\r\ninterface HTMLTableSectionElement extends HTMLElement, HTMLTableAlignment, DOML2DeprecatedBackgroundColorStyle {\r\n    align: string;\r\n    rows: HTMLCollection;\r\n    deleteRow(index?: number): void;\r\n    moveRow(indexFrom?: number, indexTo?: number): Object;\r\n    insertRow(index?: number): HTMLElement;\r\n}\r\ndeclare var HTMLTableSectionElement: {\r\n    prototype: HTMLTableSectionElement;\r\n    new (): HTMLTableSectionElement;\r\n}\r\n\r\ninterface DOML2DeprecatedListNumberingAndBulletStyle {\r\n    type: string;\r\n}\r\n\r\ninterface HTMLInputElement extends HTMLElement, MSDataBindingExtensions {\r\n    width: string;\r\n    status: boolean;\r\n    form: HTMLFormElement;\r\n    selectionStart: number;\r\n    indeterminate: boolean;\r\n    readOnly: boolean;\r\n    size: number;\r\n    loop: number;\r\n    selectionEnd: number;\r\n    vrml: string;\r\n    lowsrc: string;\r\n    vspace: number;\r\n    accept: string;\r\n    alt: string;\r\n    defaultChecked: boolean;\r\n    align: string;\r\n    value: string;\r\n    src: string;\r\n    name: string;\r\n    useMap: string;\r\n    height: string;\r\n    border: string;\r\n    dynsrc: string;\r\n    checked: boolean;\r\n    hspace: number;\r\n    maxLength: number;\r\n    type: string;\r\n    defaultValue: string;\r\n    complete: boolean;\r\n    start: string;\r\n    createTextRange(): TextRange;\r\n    setSelectionRange(start: number, end: number): void;\r\n    select(): void;\r\n}\r\ndeclare var HTMLInputElement: {\r\n    prototype: HTMLInputElement;\r\n    new (): HTMLInputElement;\r\n}\r\n\r\ninterface HTMLAnchorElement extends HTMLElement, MSDataBindingExtensions {\r\n    rel: string;\r\n    protocol: string;\r\n    search: string;\r\n    coords: string;\r\n    hostname: string;\r\n    pathname: string;\r\n    Methods: string;\r\n    target: string;\r\n    protocolLong: string;\r\n    href: string;\r\n    name: string;\r\n    charset: string;\r\n    hreflang: string;\r\n    port: string;\r\n    host: string;\r\n    hash: string;\r\n    nameProp: string;\r\n    urn: string;\r\n    rev: string;\r\n    shape: string;\r\n    type: string;\r\n    mimeType: string;\r\n    toString(): string;\r\n}\r\ndeclare var HTMLAnchorElement: {\r\n    prototype: HTMLAnchorElement;\r\n    new (): HTMLAnchorElement;\r\n}\r\n\r\ninterface HTMLParamElement extends HTMLElement {\r\n    value: string;\r\n    name: string;\r\n    type: string;\r\n    valueType: string;\r\n}\r\ndeclare var HTMLParamElement: {\r\n    prototype: HTMLParamElement;\r\n    new (): HTMLParamElement;\r\n}\r\n\r\ninterface SVGImageElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired, SVGURIReference {\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\r\n    x: SVGAnimatedLength;\r\n    height: SVGAnimatedLength;\r\n}\r\ndeclare var SVGImageElement: {\r\n    prototype: SVGImageElement;\r\n    new (): SVGImageElement;\r\n}\r\n\r\ninterface SVGAnimatedNumber {\r\n    animVal: number;\r\n    baseVal: number;\r\n}\r\ndeclare var SVGAnimatedNumber: {\r\n    prototype: SVGAnimatedNumber;\r\n    new (): SVGAnimatedNumber;\r\n}\r\n\r\ninterface PerformanceTiming {\r\n    redirectStart: number;\r\n    domainLookupEnd: number;\r\n    responseStart: number;\r\n    domComplete: number;\r\n    domainLookupStart: number;\r\n    loadEventStart: number;\r\n    msFirstPaint: number;\r\n    unloadEventEnd: number;\r\n    fetchStart: number;\r\n    requestStart: number;\r\n    domInteractive: number;\r\n    navigationStart: number;\r\n    connectEnd: number;\r\n    loadEventEnd: number;\r\n    connectStart: number;\r\n    responseEnd: number;\r\n    domLoading: number;\r\n    redirectEnd: number;\r\n    unloadEventStart: number;\r\n    domContentLoadedEventStart: number;\r\n    domContentLoadedEventEnd: number;\r\n    toJSON(): any;\r\n}\r\ndeclare var PerformanceTiming: {\r\n    prototype: PerformanceTiming;\r\n    new (): PerformanceTiming;\r\n}\r\n\r\ninterface HTMLPreElement extends HTMLElement, DOML2DeprecatedTextFlowControl {\r\n    width: number;\r\n    cite: string;\r\n}\r\ndeclare var HTMLPreElement: {\r\n    prototype: HTMLPreElement;\r\n    new (): HTMLPreElement;\r\n}\r\n\r\ninterface EventException {\r\n    code: number;\r\n    message: string;\r\n    toString(): string;\r\n    DISPATCH_REQUEST_ERR: number;\r\n    UNSPECIFIED_EVENT_TYPE_ERR: number;\r\n}\r\ndeclare var EventException: {\r\n    prototype: EventException;\r\n    new (): EventException;\r\n    DISPATCH_REQUEST_ERR: number;\r\n    UNSPECIFIED_EVENT_TYPE_ERR: number;\r\n}\r\n\r\ninterface MSNavigatorDoNotTrack {\r\n    msDoNotTrack: string;\r\n}\r\n\r\ninterface NavigatorOnLine {\r\n    onLine: boolean;\r\n}\r\n\r\ninterface WindowLocalStorage {\r\n    localStorage: Storage;\r\n}\r\n\r\ninterface SVGMetadataElement extends SVGElement {\r\n}\r\ndeclare var SVGMetadataElement: {\r\n    prototype: SVGMetadataElement;\r\n    new (): SVGMetadataElement;\r\n}\r\n\r\ninterface SVGPathSegArcRel extends SVGPathSeg {\r\n    y: number;\r\n    sweepFlag: boolean;\r\n    r2: number;\r\n    x: number;\r\n    angle: number;\r\n    r1: number;\r\n    largeArcFlag: boolean;\r\n}\r\ndeclare var SVGPathSegArcRel: {\r\n    prototype: SVGPathSegArcRel;\r\n    new (): SVGPathSegArcRel;\r\n}\r\n\r\ninterface SVGPathSegMovetoAbs extends SVGPathSeg {\r\n    y: number;\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegMovetoAbs: {\r\n    prototype: SVGPathSegMovetoAbs;\r\n    new (): SVGPathSegMovetoAbs;\r\n}\r\n\r\ninterface SVGStringList {\r\n    numberOfItems: number;\r\n    replaceItem(newItem: string, index: number): string;\r\n    getItem(index: number): string;\r\n    clear(): void;\r\n    appendItem(newItem: string): string;\r\n    initialize(newItem: string): string;\r\n    removeItem(index: number): string;\r\n    insertItemBefore(newItem: string, index: number): string;\r\n}\r\ndeclare var SVGStringList: {\r\n    prototype: SVGStringList;\r\n    new (): SVGStringList;\r\n}\r\n\r\ninterface XDomainRequest {\r\n    timeout: number;\r\n    onerror: (ev: Event) => any;\r\n    addEventListener(type: \"error\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onprogress: (ev: any) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    ontimeout: (ev: Event) => any;\r\n    addEventListener(type: \"timeout\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    responseText: string;\r\n    contentType: string;\r\n    open(method: string, url: string): void;\r\n    create(): XDomainRequest;\r\n    abort(): void;\r\n    send(data?: any): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var XDomainRequest: {\r\n    prototype: XDomainRequest;\r\n    new (): XDomainRequest;\r\n}\r\n\r\ninterface DOML2DeprecatedBackgroundColorStyle {\r\n    bgColor: any;\r\n}\r\n\r\ninterface ElementTraversal {\r\n    childElementCount: number;\r\n    previousElementSibling: Element;\r\n    lastElementChild: Element;\r\n    nextElementSibling: Element;\r\n    firstElementChild: Element;\r\n}\r\n\r\ninterface SVGLength {\r\n    valueAsString: string;\r\n    valueInSpecifiedUnits: number;\r\n    value: number;\r\n    unitType: number;\r\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\r\n    convertToSpecifiedUnits(unitType: number): void;\r\n    SVG_LENGTHTYPE_NUMBER: number;\r\n    SVG_LENGTHTYPE_CM: number;\r\n    SVG_LENGTHTYPE_PC: number;\r\n    SVG_LENGTHTYPE_PERCENTAGE: number;\r\n    SVG_LENGTHTYPE_MM: number;\r\n    SVG_LENGTHTYPE_PT: number;\r\n    SVG_LENGTHTYPE_IN: number;\r\n    SVG_LENGTHTYPE_EMS: number;\r\n    SVG_LENGTHTYPE_PX: number;\r\n    SVG_LENGTHTYPE_UNKNOWN: number;\r\n    SVG_LENGTHTYPE_EXS: number;\r\n}\r\ndeclare var SVGLength: {\r\n    prototype: SVGLength;\r\n    new (): SVGLength;\r\n    SVG_LENGTHTYPE_NUMBER: number;\r\n    SVG_LENGTHTYPE_CM: number;\r\n    SVG_LENGTHTYPE_PC: number;\r\n    SVG_LENGTHTYPE_PERCENTAGE: number;\r\n    SVG_LENGTHTYPE_MM: number;\r\n    SVG_LENGTHTYPE_PT: number;\r\n    SVG_LENGTHTYPE_IN: number;\r\n    SVG_LENGTHTYPE_EMS: number;\r\n    SVG_LENGTHTYPE_PX: number;\r\n    SVG_LENGTHTYPE_UNKNOWN: number;\r\n    SVG_LENGTHTYPE_EXS: number;\r\n}\r\n\r\ninterface SVGPolygonElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGAnimatedPoints, SVGTests, SVGExternalResourcesRequired {\r\n}\r\ndeclare var SVGPolygonElement: {\r\n    prototype: SVGPolygonElement;\r\n    new (): SVGPolygonElement;\r\n}\r\n\r\ninterface HTMLPhraseElement extends HTMLElement {\r\n    dateTime: string;\r\n    cite: string;\r\n}\r\ndeclare var HTMLPhraseElement: {\r\n    prototype: HTMLPhraseElement;\r\n    new (): HTMLPhraseElement;\r\n}\r\n\r\ninterface NavigatorStorageUtils {\r\n}\r\n\r\ninterface SVGPathSegCurvetoCubicRel extends SVGPathSeg {\r\n    y: number;\r\n    y1: number;\r\n    x2: number;\r\n    x: number;\r\n    x1: number;\r\n    y2: number;\r\n}\r\ndeclare var SVGPathSegCurvetoCubicRel: {\r\n    prototype: SVGPathSegCurvetoCubicRel;\r\n    new (): SVGPathSegCurvetoCubicRel;\r\n}\r\n\r\ninterface MSEventObj extends Event {\r\n    nextPage: string;\r\n    keyCode: number;\r\n    toElement: Element;\r\n    returnValue: any;\r\n    dataFld: string;\r\n    y: number;\r\n    dataTransfer: DataTransfer;\r\n    propertyName: string;\r\n    url: string;\r\n    offsetX: number;\r\n    recordset: Object;\r\n    screenX: number;\r\n    buttonID: number;\r\n    wheelDelta: number;\r\n    reason: number;\r\n    origin: string;\r\n    data: string;\r\n    srcFilter: Object;\r\n    boundElements: HTMLCollection;\r\n    cancelBubble: boolean;\r\n    altLeft: boolean;\r\n    behaviorCookie: number;\r\n    bookmarks: BookmarkCollection;\r\n    type: string;\r\n    repeat: boolean;\r\n    srcElement: Element;\r\n    source: Window;\r\n    fromElement: Element;\r\n    offsetY: number;\r\n    x: number;\r\n    behaviorPart: number;\r\n    qualifier: string;\r\n    altKey: boolean;\r\n    ctrlKey: boolean;\r\n    clientY: number;\r\n    shiftKey: boolean;\r\n    shiftLeft: boolean;\r\n    contentOverflow: boolean;\r\n    screenY: number;\r\n    ctrlLeft: boolean;\r\n    button: number;\r\n    srcUrn: string;\r\n    clientX: number;\r\n    actionURL: string;\r\n    getAttribute(strAttributeName: string, lFlags?: number): any;\r\n    setAttribute(strAttributeName: string, AttributeValue: any, lFlags?: number): void;\r\n    removeAttribute(strAttributeName: string, lFlags?: number): boolean;\r\n}\r\ndeclare var MSEventObj: {\r\n    prototype: MSEventObj;\r\n    new (): MSEventObj;\r\n}\r\n\r\ninterface SVGTextContentElement extends SVGElement, SVGStylable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    textLength: SVGAnimatedLength;\r\n    lengthAdjust: SVGAnimatedEnumeration;\r\n    getCharNumAtPosition(point: SVGPoint): number;\r\n    getStartPositionOfChar(charnum: number): SVGPoint;\r\n    getExtentOfChar(charnum: number): SVGRect;\r\n    getComputedTextLength(): number;\r\n    getSubStringLength(charnum: number, nchars: number): number;\r\n    selectSubString(charnum: number, nchars: number): void;\r\n    getNumberOfChars(): number;\r\n    getRotationOfChar(charnum: number): number;\r\n    getEndPositionOfChar(charnum: number): SVGPoint;\r\n    LENGTHADJUST_SPACING: number;\r\n    LENGTHADJUST_SPACINGANDGLYPHS: number;\r\n    LENGTHADJUST_UNKNOWN: number;\r\n}\r\ndeclare var SVGTextContentElement: {\r\n    prototype: SVGTextContentElement;\r\n    new (): SVGTextContentElement;\r\n    LENGTHADJUST_SPACING: number;\r\n    LENGTHADJUST_SPACINGANDGLYPHS: number;\r\n    LENGTHADJUST_UNKNOWN: number;\r\n}\r\n\r\ninterface DOML2DeprecatedColorProperty {\r\n    color: string;\r\n}\r\n\r\ninterface HTMLCanvasElement extends HTMLElement {\r\n    width: number;\r\n    height: number;\r\n    toDataURL(type?: string, ...args: any[]): string;\r\n    getContext(contextId: string, ...args: any[]): any;\r\n    getContext(contextId: \"2d\"): CanvasRenderingContext2D;\r\n}\r\ndeclare var HTMLCanvasElement: {\r\n    prototype: HTMLCanvasElement;\r\n    new (): HTMLCanvasElement;\r\n}\r\n\r\ninterface Location {\r\n    hash: string;\r\n    protocol: string;\r\n    search: string;\r\n    href: string;\r\n    hostname: string;\r\n    port: string;\r\n    pathname: string;\r\n    host: string;\r\n    reload(flag?: boolean): void;\r\n    replace(url: string): void;\r\n    assign(url: string): void;\r\n    toString(): string;\r\n}\r\ndeclare var Location: {\r\n    prototype: Location;\r\n    new (): Location;\r\n}\r\n\r\ninterface HTMLTitleElement extends HTMLElement {\r\n    text: string;\r\n}\r\ndeclare var HTMLTitleElement: {\r\n    prototype: HTMLTitleElement;\r\n    new (): HTMLTitleElement;\r\n}\r\n\r\ninterface HTMLStyleElement extends HTMLElement, LinkStyle {\r\n    media: string;\r\n    type: string;\r\n}\r\ndeclare var HTMLStyleElement: {\r\n    prototype: HTMLStyleElement;\r\n    new (): HTMLStyleElement;\r\n}\r\n\r\ninterface PerformanceEntry {\r\n    name: string;\r\n    startTime: number;\r\n    duration: number;\r\n    entryType: string;\r\n}\r\ndeclare var PerformanceEntry: {\r\n    prototype: PerformanceEntry;\r\n    new (): PerformanceEntry;\r\n}\r\n\r\ninterface SVGTransform {\r\n    type: number;\r\n    angle: number;\r\n    matrix: SVGMatrix;\r\n    setTranslate(tx: number, ty: number): void;\r\n    setScale(sx: number, sy: number): void;\r\n    setMatrix(matrix: SVGMatrix): void;\r\n    setSkewY(angle: number): void;\r\n    setRotate(angle: number, cx: number, cy: number): void;\r\n    setSkewX(angle: number): void;\r\n    SVG_TRANSFORM_SKEWX: number;\r\n    SVG_TRANSFORM_UNKNOWN: number;\r\n    SVG_TRANSFORM_SCALE: number;\r\n    SVG_TRANSFORM_TRANSLATE: number;\r\n    SVG_TRANSFORM_MATRIX: number;\r\n    SVG_TRANSFORM_ROTATE: number;\r\n    SVG_TRANSFORM_SKEWY: number;\r\n}\r\ndeclare var SVGTransform: {\r\n    prototype: SVGTransform;\r\n    new (): SVGTransform;\r\n    SVG_TRANSFORM_SKEWX: number;\r\n    SVG_TRANSFORM_UNKNOWN: number;\r\n    SVG_TRANSFORM_SCALE: number;\r\n    SVG_TRANSFORM_TRANSLATE: number;\r\n    SVG_TRANSFORM_MATRIX: number;\r\n    SVG_TRANSFORM_ROTATE: number;\r\n    SVG_TRANSFORM_SKEWY: number;\r\n}\r\n\r\ninterface UIEvent extends Event {\r\n    detail: number;\r\n    view: Window;\r\n    initUIEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number): void;\r\n}\r\ndeclare var UIEvent: {\r\n    prototype: UIEvent;\r\n    new (): UIEvent;\r\n}\r\n\r\ninterface SVGURIReference {\r\n    href: SVGAnimatedString;\r\n}\r\n\r\ninterface SVGPathSeg {\r\n    pathSegType: number;\r\n    pathSegTypeAsLetter: string;\r\n    PATHSEG_MOVETO_REL: number;\r\n    PATHSEG_LINETO_VERTICAL_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\r\n    PATHSEG_CURVETO_QUADRATIC_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_ABS: number;\r\n    PATHSEG_LINETO_HORIZONTAL_ABS: number;\r\n    PATHSEG_CURVETO_QUADRATIC_ABS: number;\r\n    PATHSEG_LINETO_ABS: number;\r\n    PATHSEG_CLOSEPATH: number;\r\n    PATHSEG_LINETO_HORIZONTAL_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\r\n    PATHSEG_LINETO_REL: number;\r\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\r\n    PATHSEG_ARC_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_REL: number;\r\n    PATHSEG_UNKNOWN: number;\r\n    PATHSEG_LINETO_VERTICAL_ABS: number;\r\n    PATHSEG_ARC_ABS: number;\r\n    PATHSEG_MOVETO_ABS: number;\r\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\r\n}\r\ndeclare var SVGPathSeg: {\r\n    prototype: SVGPathSeg;\r\n    new (): SVGPathSeg;\r\n    PATHSEG_MOVETO_REL: number;\r\n    PATHSEG_LINETO_VERTICAL_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\r\n    PATHSEG_CURVETO_QUADRATIC_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_ABS: number;\r\n    PATHSEG_LINETO_HORIZONTAL_ABS: number;\r\n    PATHSEG_CURVETO_QUADRATIC_ABS: number;\r\n    PATHSEG_LINETO_ABS: number;\r\n    PATHSEG_CLOSEPATH: number;\r\n    PATHSEG_LINETO_HORIZONTAL_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\r\n    PATHSEG_LINETO_REL: number;\r\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\r\n    PATHSEG_ARC_REL: number;\r\n    PATHSEG_CURVETO_CUBIC_REL: number;\r\n    PATHSEG_UNKNOWN: number;\r\n    PATHSEG_LINETO_VERTICAL_ABS: number;\r\n    PATHSEG_ARC_ABS: number;\r\n    PATHSEG_MOVETO_ABS: number;\r\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\r\n}\r\n\r\ninterface WheelEvent extends MouseEvent {\r\n    deltaZ: number;\r\n    deltaX: number;\r\n    deltaMode: number;\r\n    deltaY: number;\r\n    initWheelEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, deltaXArg: number, deltaYArg: number, deltaZArg: number, deltaMode: number): void;\r\n    DOM_DELTA_PIXEL: number;\r\n    DOM_DELTA_LINE: number;\r\n    DOM_DELTA_PAGE: number;\r\n}\r\ndeclare var WheelEvent: {\r\n    prototype: WheelEvent;\r\n    new (): WheelEvent;\r\n    DOM_DELTA_PIXEL: number;\r\n    DOM_DELTA_LINE: number;\r\n    DOM_DELTA_PAGE: number;\r\n}\r\n\r\ninterface MSEventAttachmentTarget {\r\n    attachEvent(event: string, listener: EventListener): boolean;\r\n    detachEvent(event: string, listener: EventListener): void;\r\n}\r\n\r\ninterface SVGNumber {\r\n    value: number;\r\n}\r\ndeclare var SVGNumber: {\r\n    prototype: SVGNumber;\r\n    new (): SVGNumber;\r\n}\r\n\r\ninterface SVGPathElement extends SVGElement, SVGStylable, SVGAnimatedPathData, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    getPathSegAtLength(distance: number): number;\r\n    getPointAtLength(distance: number): SVGPoint;\r\n    createSVGPathSegCurvetoQuadraticAbs(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticAbs;\r\n    createSVGPathSegLinetoRel(x: number, y: number): SVGPathSegLinetoRel;\r\n    createSVGPathSegCurvetoQuadraticRel(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticRel;\r\n    createSVGPathSegCurvetoCubicAbs(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicAbs;\r\n    createSVGPathSegLinetoAbs(x: number, y: number): SVGPathSegLinetoAbs;\r\n    createSVGPathSegClosePath(): SVGPathSegClosePath;\r\n    createSVGPathSegCurvetoCubicRel(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicRel;\r\n    createSVGPathSegCurvetoQuadraticSmoothRel(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothRel;\r\n    createSVGPathSegMovetoRel(x: number, y: number): SVGPathSegMovetoRel;\r\n    createSVGPathSegCurvetoCubicSmoothAbs(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothAbs;\r\n    createSVGPathSegMovetoAbs(x: number, y: number): SVGPathSegMovetoAbs;\r\n    createSVGPathSegLinetoVerticalRel(y: number): SVGPathSegLinetoVerticalRel;\r\n    createSVGPathSegArcRel(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: boolean, sweepFlag: boolean): SVGPathSegArcRel;\r\n    createSVGPathSegCurvetoQuadraticSmoothAbs(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothAbs;\r\n    createSVGPathSegLinetoHorizontalRel(x: number): SVGPathSegLinetoHorizontalRel;\r\n    getTotalLength(): number;\r\n    createSVGPathSegCurvetoCubicSmoothRel(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothRel;\r\n    createSVGPathSegLinetoHorizontalAbs(x: number): SVGPathSegLinetoHorizontalAbs;\r\n    createSVGPathSegLinetoVerticalAbs(y: number): SVGPathSegLinetoVerticalAbs;\r\n    createSVGPathSegArcAbs(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: boolean, sweepFlag: boolean): SVGPathSegArcAbs;\r\n}\r\ndeclare var SVGPathElement: {\r\n    prototype: SVGPathElement;\r\n    new (): SVGPathElement;\r\n}\r\n\r\ninterface MSCompatibleInfo {\r\n    version: string;\r\n    userAgent: string;\r\n}\r\ndeclare var MSCompatibleInfo: {\r\n    prototype: MSCompatibleInfo;\r\n    new (): MSCompatibleInfo;\r\n}\r\n\r\ninterface Text extends CharacterData, MSNodeExtensions {\r\n    wholeText: string;\r\n    splitText(offset: number): Text;\r\n    replaceWholeText(content: string): Text;\r\n}\r\ndeclare var Text: {\r\n    prototype: Text;\r\n    new (): Text;\r\n}\r\n\r\ninterface SVGAnimatedRect {\r\n    animVal: SVGRect;\r\n    baseVal: SVGRect;\r\n}\r\ndeclare var SVGAnimatedRect: {\r\n    prototype: SVGAnimatedRect;\r\n    new (): SVGAnimatedRect;\r\n}\r\n\r\ninterface CSSNamespaceRule extends CSSRule {\r\n    namespaceURI: string;\r\n    prefix: string;\r\n}\r\ndeclare var CSSNamespaceRule: {\r\n    prototype: CSSNamespaceRule;\r\n    new (): CSSNamespaceRule;\r\n}\r\n\r\ninterface SVGPathSegList {\r\n    numberOfItems: number;\r\n    replaceItem(newItem: SVGPathSeg, index: number): SVGPathSeg;\r\n    getItem(index: number): SVGPathSeg;\r\n    clear(): void;\r\n    appendItem(newItem: SVGPathSeg): SVGPathSeg;\r\n    initialize(newItem: SVGPathSeg): SVGPathSeg;\r\n    removeItem(index: number): SVGPathSeg;\r\n    insertItemBefore(newItem: SVGPathSeg, index: number): SVGPathSeg;\r\n}\r\ndeclare var SVGPathSegList: {\r\n    prototype: SVGPathSegList;\r\n    new (): SVGPathSegList;\r\n}\r\n\r\ninterface HTMLUnknownElement extends HTMLElement, MSDataBindingRecordSetReadonlyExtensions {\r\n}\r\ndeclare var HTMLUnknownElement: {\r\n    prototype: HTMLUnknownElement;\r\n    new (): HTMLUnknownElement;\r\n}\r\n\r\ninterface HTMLAudioElement extends HTMLMediaElement {\r\n}\r\ndeclare var HTMLAudioElement: {\r\n    prototype: HTMLAudioElement;\r\n    new (): HTMLAudioElement;\r\n}\r\n\r\ninterface MSImageResourceExtensions {\r\n    dynsrc: string;\r\n    vrml: string;\r\n    lowsrc: string;\r\n    start: string;\r\n    loop: number;\r\n}\r\n\r\ninterface PositionError {\r\n    code: number;\r\n    message: string;\r\n    toString(): string;\r\n    POSITION_UNAVAILABLE: number;\r\n    PERMISSION_DENIED: number;\r\n    TIMEOUT: number;\r\n}\r\ndeclare var PositionError: {\r\n    prototype: PositionError;\r\n    new (): PositionError;\r\n    POSITION_UNAVAILABLE: number;\r\n    PERMISSION_DENIED: number;\r\n    TIMEOUT: number;\r\n}\r\n\r\ninterface HTMLTableCellElement extends HTMLElement, HTMLTableAlignment, DOML2DeprecatedBackgroundStyle, DOML2DeprecatedBackgroundColorStyle {\r\n    width: number;\r\n    headers: string;\r\n    cellIndex: number;\r\n    align: string;\r\n    borderColorLight: any;\r\n    colSpan: number;\r\n    borderColor: any;\r\n    axis: string;\r\n    height: any;\r\n    noWrap: boolean;\r\n    abbr: string;\r\n    rowSpan: number;\r\n    scope: string;\r\n    borderColorDark: any;\r\n}\r\ndeclare var HTMLTableCellElement: {\r\n    prototype: HTMLTableCellElement;\r\n    new (): HTMLTableCellElement;\r\n}\r\n\r\ninterface SVGElementInstance extends EventTarget {\r\n    previousSibling: SVGElementInstance;\r\n    parentNode: SVGElementInstance;\r\n    lastChild: SVGElementInstance;\r\n    nextSibling: SVGElementInstance;\r\n    childNodes: SVGElementInstanceList;\r\n    correspondingUseElement: SVGUseElement;\r\n    correspondingElement: SVGElement;\r\n    firstChild: SVGElementInstance;\r\n}\r\ndeclare var SVGElementInstance: {\r\n    prototype: SVGElementInstance;\r\n    new (): SVGElementInstance;\r\n}\r\n\r\ninterface MSNamespaceInfoCollection {\r\n    length: number;\r\n    add(namespace?: string, urn?: string, implementationUrl?: any): Object;\r\n    item(index: any): Object;\r\n    [index: string]: Object;\r\n}\r\ndeclare var MSNamespaceInfoCollection: {\r\n    prototype: MSNamespaceInfoCollection;\r\n    new (): MSNamespaceInfoCollection;\r\n}\r\n\r\ninterface SVGCircleElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    cx: SVGAnimatedLength;\r\n    r: SVGAnimatedLength;\r\n    cy: SVGAnimatedLength;\r\n}\r\ndeclare var SVGCircleElement: {\r\n    prototype: SVGCircleElement;\r\n    new (): SVGCircleElement;\r\n}\r\n\r\ninterface StyleSheetList {\r\n    length: number;\r\n    item(index?: number): StyleSheet;\r\n    [index: number]: StyleSheet;\r\n}\r\ndeclare var StyleSheetList: {\r\n    prototype: StyleSheetList;\r\n    new (): StyleSheetList;\r\n}\r\n\r\ninterface CSSImportRule extends CSSRule {\r\n    styleSheet: CSSStyleSheet;\r\n    href: string;\r\n    media: MediaList;\r\n}\r\ndeclare var CSSImportRule: {\r\n    prototype: CSSImportRule;\r\n    new (): CSSImportRule;\r\n}\r\n\r\ninterface CustomEvent extends Event {\r\n    detail: Object;\r\n    initCustomEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, detailArg: Object): void;\r\n}\r\ndeclare var CustomEvent: {\r\n    prototype: CustomEvent;\r\n    new (): CustomEvent;\r\n}\r\n\r\ninterface HTMLBaseFontElement extends HTMLElement, DOML2DeprecatedColorProperty {\r\n    face: string;\r\n    size: number;\r\n}\r\ndeclare var HTMLBaseFontElement: {\r\n    prototype: HTMLBaseFontElement;\r\n    new (): HTMLBaseFontElement;\r\n}\r\n\r\ninterface HTMLTextAreaElement extends HTMLElement, MSDataBindingExtensions {\r\n    value: string;\r\n    status: any;\r\n    form: HTMLFormElement;\r\n    name: string;\r\n    selectionStart: number;\r\n    rows: number;\r\n    cols: number;\r\n    readOnly: boolean;\r\n    wrap: string;\r\n    selectionEnd: number;\r\n    type: string;\r\n    defaultValue: string;\r\n    createTextRange(): TextRange;\r\n    setSelectionRange(start: number, end: number): void;\r\n    select(): void;\r\n}\r\ndeclare var HTMLTextAreaElement: {\r\n    prototype: HTMLTextAreaElement;\r\n    new (): HTMLTextAreaElement;\r\n}\r\n\r\ninterface Geolocation {\r\n    clearWatch(watchId: number): void;\r\n    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): void;\r\n    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): number;\r\n}\r\ndeclare var Geolocation: {\r\n    prototype: Geolocation;\r\n    new (): Geolocation;\r\n}\r\n\r\ninterface DOML2DeprecatedMarginStyle {\r\n    vspace: number;\r\n    hspace: number;\r\n}\r\n\r\ninterface MSWindowModeless {\r\n    dialogTop: any;\r\n    dialogLeft: any;\r\n    dialogWidth: any;\r\n    dialogHeight: any;\r\n    menuArguments: any;\r\n}\r\n\r\ninterface DOML2DeprecatedAlignmentStyle {\r\n    align: string;\r\n}\r\n\r\ninterface HTMLMarqueeElement extends HTMLElement, MSDataBindingExtensions, DOML2DeprecatedBackgroundColorStyle {\r\n    width: string;\r\n    onbounce: (ev: Event) => any;\r\n    addEventListener(type: \"bounce\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    vspace: number;\r\n    trueSpeed: boolean;\r\n    scrollAmount: number;\r\n    scrollDelay: number;\r\n    behavior: string;\r\n    height: string;\r\n    loop: number;\r\n    direction: string;\r\n    hspace: number;\r\n    onstart: (ev: Event) => any;\r\n    addEventListener(type: \"start\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onfinish: (ev: Event) => any;\r\n    addEventListener(type: \"finish\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    stop(): void;\r\n    start(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var HTMLMarqueeElement: {\r\n    prototype: HTMLMarqueeElement;\r\n    new (): HTMLMarqueeElement;\r\n}\r\n\r\ninterface SVGRect {\r\n    y: number;\r\n    width: number;\r\n    x: number;\r\n    height: number;\r\n}\r\ndeclare var SVGRect: {\r\n    prototype: SVGRect;\r\n    new (): SVGRect;\r\n}\r\n\r\ninterface MSNodeExtensions {\r\n    swapNode(otherNode: Node): Node;\r\n    removeNode(deep?: boolean): Node;\r\n    replaceNode(replacement: Node): Node;\r\n}\r\n\r\ninterface History {\r\n    length: number;\r\n    back(distance?: any): void;\r\n    forward(distance?: any): void;\r\n    go(delta?: any): void;\r\n}\r\ndeclare var History: {\r\n    prototype: History;\r\n    new (): History;\r\n}\r\n\r\ninterface SVGPathSegCurvetoCubicAbs extends SVGPathSeg {\r\n    y: number;\r\n    y1: number;\r\n    x2: number;\r\n    x: number;\r\n    x1: number;\r\n    y2: number;\r\n}\r\ndeclare var SVGPathSegCurvetoCubicAbs: {\r\n    prototype: SVGPathSegCurvetoCubicAbs;\r\n    new (): SVGPathSegCurvetoCubicAbs;\r\n}\r\n\r\ninterface SVGPathSegCurvetoQuadraticAbs extends SVGPathSeg {\r\n    y: number;\r\n    y1: number;\r\n    x: number;\r\n    x1: number;\r\n}\r\ndeclare var SVGPathSegCurvetoQuadraticAbs: {\r\n    prototype: SVGPathSegCurvetoQuadraticAbs;\r\n    new (): SVGPathSegCurvetoQuadraticAbs;\r\n}\r\n\r\ninterface TimeRanges {\r\n    length: number;\r\n    start(index: number): number;\r\n    end(index: number): number;\r\n}\r\ndeclare var TimeRanges: {\r\n    prototype: TimeRanges;\r\n    new (): TimeRanges;\r\n}\r\n\r\ninterface CSSRule {\r\n    cssText: string;\r\n    parentStyleSheet: CSSStyleSheet;\r\n    parentRule: CSSRule;\r\n    type: number;\r\n    IMPORT_RULE: number;\r\n    MEDIA_RULE: number;\r\n    STYLE_RULE: number;\r\n    NAMESPACE_RULE: number;\r\n    PAGE_RULE: number;\r\n    UNKNOWN_RULE: number;\r\n    FONT_FACE_RULE: number;\r\n    CHARSET_RULE: number;\r\n}\r\ndeclare var CSSRule: {\r\n    prototype: CSSRule;\r\n    new (): CSSRule;\r\n    IMPORT_RULE: number;\r\n    MEDIA_RULE: number;\r\n    STYLE_RULE: number;\r\n    NAMESPACE_RULE: number;\r\n    PAGE_RULE: number;\r\n    UNKNOWN_RULE: number;\r\n    FONT_FACE_RULE: number;\r\n    CHARSET_RULE: number;\r\n}\r\n\r\ninterface SVGPathSegLinetoAbs extends SVGPathSeg {\r\n    y: number;\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegLinetoAbs: {\r\n    prototype: SVGPathSegLinetoAbs;\r\n    new (): SVGPathSegLinetoAbs;\r\n}\r\n\r\ninterface HTMLModElement extends HTMLElement {\r\n    dateTime: string;\r\n    cite: string;\r\n}\r\ndeclare var HTMLModElement: {\r\n    prototype: HTMLModElement;\r\n    new (): HTMLModElement;\r\n}\r\n\r\ninterface SVGMatrix {\r\n    e: number;\r\n    c: number;\r\n    a: number;\r\n    b: number;\r\n    d: number;\r\n    f: number;\r\n    multiply(secondMatrix: SVGMatrix): SVGMatrix;\r\n    flipY(): SVGMatrix;\r\n    skewY(angle: number): SVGMatrix;\r\n    inverse(): SVGMatrix;\r\n    scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\r\n    rotate(angle: number): SVGMatrix;\r\n    flipX(): SVGMatrix;\r\n    translate(x: number, y: number): SVGMatrix;\r\n    scale(scaleFactor: number): SVGMatrix;\r\n    rotateFromVector(x: number, y: number): SVGMatrix;\r\n    skewX(angle: number): SVGMatrix;\r\n}\r\ndeclare var SVGMatrix: {\r\n    prototype: SVGMatrix;\r\n    new (): SVGMatrix;\r\n}\r\n\r\ninterface MSPopupWindow {\r\n    document: Document;\r\n    isOpen: boolean;\r\n    show(x: number, y: number, w: number, h: number, element?: any): void;\r\n    hide(): void;\r\n}\r\ndeclare var MSPopupWindow: {\r\n    prototype: MSPopupWindow;\r\n    new (): MSPopupWindow;\r\n}\r\n\r\ninterface BeforeUnloadEvent extends Event {\r\n    returnValue: string;\r\n}\r\ndeclare var BeforeUnloadEvent: {\r\n    prototype: BeforeUnloadEvent;\r\n    new (): BeforeUnloadEvent;\r\n}\r\n\r\ninterface SVGUseElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired, SVGURIReference {\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    animatedInstanceRoot: SVGElementInstance;\r\n    instanceRoot: SVGElementInstance;\r\n    x: SVGAnimatedLength;\r\n    height: SVGAnimatedLength;\r\n}\r\ndeclare var SVGUseElement: {\r\n    prototype: SVGUseElement;\r\n    new (): SVGUseElement;\r\n}\r\n\r\ninterface Event {\r\n    timeStamp: number;\r\n    defaultPrevented: boolean;\r\n    isTrusted: boolean;\r\n    currentTarget: EventTarget;\r\n    cancelBubble: boolean;\r\n    target: EventTarget;\r\n    eventPhase: number;\r\n    cancelable: boolean;\r\n    type: string;\r\n    srcElement: Element;\r\n    bubbles: boolean;\r\n    initEvent(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void;\r\n    stopPropagation(): void;\r\n    stopImmediatePropagation(): void;\r\n    preventDefault(): void;\r\n    CAPTURING_PHASE: number;\r\n    AT_TARGET: number;\r\n    BUBBLING_PHASE: number;\r\n}\r\ndeclare var Event: {\r\n    prototype: Event;\r\n    new (): Event;\r\n    CAPTURING_PHASE: number;\r\n    AT_TARGET: number;\r\n    BUBBLING_PHASE: number;\r\n}\r\n\r\ninterface ImageData {\r\n    width: number;\r\n    data: number[];\r\n    height: number;\r\n}\r\ndeclare var ImageData: {\r\n    prototype: ImageData;\r\n    new (): ImageData;\r\n}\r\n\r\ninterface HTMLTableColElement extends HTMLElement, HTMLTableAlignment {\r\n    width: any;\r\n    align: string;\r\n    span: number;\r\n}\r\ndeclare var HTMLTableColElement: {\r\n    prototype: HTMLTableColElement;\r\n    new (): HTMLTableColElement;\r\n}\r\n\r\ninterface SVGException {\r\n    code: number;\r\n    message: string;\r\n    toString(): string;\r\n    SVG_MATRIX_NOT_INVERTABLE: number;\r\n    SVG_WRONG_TYPE_ERR: number;\r\n    SVG_INVALID_VALUE_ERR: number;\r\n}\r\ndeclare var SVGException: {\r\n    prototype: SVGException;\r\n    new (): SVGException;\r\n    SVG_MATRIX_NOT_INVERTABLE: number;\r\n    SVG_WRONG_TYPE_ERR: number;\r\n    SVG_INVALID_VALUE_ERR: number;\r\n}\r\n\r\ninterface SVGLinearGradientElement extends SVGGradientElement {\r\n    y1: SVGAnimatedLength;\r\n    x2: SVGAnimatedLength;\r\n    x1: SVGAnimatedLength;\r\n    y2: SVGAnimatedLength;\r\n}\r\ndeclare var SVGLinearGradientElement: {\r\n    prototype: SVGLinearGradientElement;\r\n    new (): SVGLinearGradientElement;\r\n}\r\n\r\ninterface HTMLTableAlignment {\r\n    ch: string;\r\n    vAlign: string;\r\n    chOff: string;\r\n}\r\n\r\ninterface SVGAnimatedEnumeration {\r\n    animVal: number;\r\n    baseVal: number;\r\n}\r\ndeclare var SVGAnimatedEnumeration: {\r\n    prototype: SVGAnimatedEnumeration;\r\n    new (): SVGAnimatedEnumeration;\r\n}\r\n\r\ninterface DOML2DeprecatedSizeProperty {\r\n    size: number;\r\n}\r\n\r\ninterface HTMLUListElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, DOML2DeprecatedListNumberingAndBulletStyle {\r\n}\r\ndeclare var HTMLUListElement: {\r\n    prototype: HTMLUListElement;\r\n    new (): HTMLUListElement;\r\n}\r\n\r\ninterface SVGRectElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    ry: SVGAnimatedLength;\r\n    rx: SVGAnimatedLength;\r\n    x: SVGAnimatedLength;\r\n    height: SVGAnimatedLength;\r\n}\r\ndeclare var SVGRectElement: {\r\n    prototype: SVGRectElement;\r\n    new (): SVGRectElement;\r\n}\r\n\r\ninterface ErrorEventHandler {\r\n    (event: Event, source: string, fileno: number, columnNumber: number): void;\r\n}\r\n\r\ninterface HTMLDivElement extends HTMLElement, MSDataBindingExtensions {\r\n    align: string;\r\n    noWrap: boolean;\r\n}\r\ndeclare var HTMLDivElement: {\r\n    prototype: HTMLDivElement;\r\n    new (): HTMLDivElement;\r\n}\r\n\r\ninterface DOML2DeprecatedBorderStyle {\r\n    border: string;\r\n}\r\n\r\ninterface NamedNodeMap {\r\n    length: number;\r\n    removeNamedItemNS(namespaceURI: string, localName: string): Attr;\r\n    item(index: number): Attr;\r\n    [index: number]: Attr;\r\n    removeNamedItem(name: string): Attr;\r\n    getNamedItem(name: string): Attr;\r\n    setNamedItem(arg: Attr): Attr;\r\n    getNamedItemNS(namespaceURI: string, localName: string): Attr;\r\n    setNamedItemNS(arg: Attr): Attr;\r\n}\r\ndeclare var NamedNodeMap: {\r\n    prototype: NamedNodeMap;\r\n    new (): NamedNodeMap;\r\n}\r\n\r\ninterface MediaList {\r\n    length: number;\r\n    mediaText: string;\r\n    deleteMedium(oldMedium: string): void;\r\n    appendMedium(newMedium: string): void;\r\n    item(index: number): string;\r\n    [index: number]: string;\r\n    toString(): string;\r\n}\r\ndeclare var MediaList: {\r\n    prototype: MediaList;\r\n    new (): MediaList;\r\n}\r\n\r\ninterface SVGPathSegCurvetoQuadraticSmoothAbs extends SVGPathSeg {\r\n    y: number;\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegCurvetoQuadraticSmoothAbs: {\r\n    prototype: SVGPathSegCurvetoQuadraticSmoothAbs;\r\n    new (): SVGPathSegCurvetoQuadraticSmoothAbs;\r\n}\r\n\r\ninterface SVGPathSegCurvetoCubicSmoothRel extends SVGPathSeg {\r\n    y: number;\r\n    x2: number;\r\n    x: number;\r\n    y2: number;\r\n}\r\ndeclare var SVGPathSegCurvetoCubicSmoothRel: {\r\n    prototype: SVGPathSegCurvetoCubicSmoothRel;\r\n    new (): SVGPathSegCurvetoCubicSmoothRel;\r\n}\r\n\r\ninterface SVGLengthList {\r\n    numberOfItems: number;\r\n    replaceItem(newItem: SVGLength, index: number): SVGLength;\r\n    getItem(index: number): SVGLength;\r\n    clear(): void;\r\n    appendItem(newItem: SVGLength): SVGLength;\r\n    initialize(newItem: SVGLength): SVGLength;\r\n    removeItem(index: number): SVGLength;\r\n    insertItemBefore(newItem: SVGLength, index: number): SVGLength;\r\n}\r\ndeclare var SVGLengthList: {\r\n    prototype: SVGLengthList;\r\n    new (): SVGLengthList;\r\n}\r\n\r\ninterface ProcessingInstruction extends Node {\r\n    target: string;\r\n    data: string;\r\n}\r\ndeclare var ProcessingInstruction: {\r\n    prototype: ProcessingInstruction;\r\n    new (): ProcessingInstruction;\r\n}\r\n\r\ninterface MSWindowExtensions {\r\n    status: string;\r\n    onmouseleave: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseleave\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    screenLeft: number;\r\n    offscreenBuffering: any;\r\n    maxConnectionsPerServer: number;\r\n    onmouseenter: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseenter\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    clipboardData: DataTransfer;\r\n    defaultStatus: string;\r\n    clientInformation: Navigator;\r\n    closed: boolean;\r\n    onhelp: (ev: Event) => any;\r\n    addEventListener(type: \"help\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    external: External;\r\n    event: MSEventObj;\r\n    onfocusout: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusout\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    screenTop: number;\r\n    onfocusin: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusin\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    showModelessDialog(url?: string, argument?: any, options?: any): Window;\r\n    navigate(url: string): void;\r\n    resizeBy(x?: number, y?: number): void;\r\n    item(index: any): any;\r\n    resizeTo(x?: number, y?: number): void;\r\n    createPopup(arguments?: any): MSPopupWindow;\r\n    toStaticHTML(html: string): string;\r\n    execScript(code: string, language?: string): any;\r\n    msWriteProfilerMark(profilerMarkName: string): void;\r\n    moveTo(x?: number, y?: number): void;\r\n    moveBy(x?: number, y?: number): void;\r\n    showHelp(url: string, helpArg?: any, features?: string): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface MSBehaviorUrnsCollection {\r\n    length: number;\r\n    item(index: number): string;\r\n}\r\ndeclare var MSBehaviorUrnsCollection: {\r\n    prototype: MSBehaviorUrnsCollection;\r\n    new (): MSBehaviorUrnsCollection;\r\n}\r\n\r\ninterface CSSFontFaceRule extends CSSRule {\r\n    style: CSSStyleDeclaration;\r\n}\r\ndeclare var CSSFontFaceRule: {\r\n    prototype: CSSFontFaceRule;\r\n    new (): CSSFontFaceRule;\r\n}\r\n\r\ninterface DOML2DeprecatedBackgroundStyle {\r\n    background: string;\r\n}\r\n\r\ninterface TextEvent extends UIEvent {\r\n    inputMethod: number;\r\n    data: string;\r\n    locale: string;\r\n    initTextEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, dataArg: string, inputMethod: number, locale: string): void;\r\n    DOM_INPUT_METHOD_KEYBOARD: number;\r\n    DOM_INPUT_METHOD_DROP: number;\r\n    DOM_INPUT_METHOD_IME: number;\r\n    DOM_INPUT_METHOD_SCRIPT: number;\r\n    DOM_INPUT_METHOD_VOICE: number;\r\n    DOM_INPUT_METHOD_UNKNOWN: number;\r\n    DOM_INPUT_METHOD_PASTE: number;\r\n    DOM_INPUT_METHOD_HANDWRITING: number;\r\n    DOM_INPUT_METHOD_OPTION: number;\r\n    DOM_INPUT_METHOD_MULTIMODAL: number;\r\n}\r\ndeclare var TextEvent: {\r\n    prototype: TextEvent;\r\n    new (): TextEvent;\r\n    DOM_INPUT_METHOD_KEYBOARD: number;\r\n    DOM_INPUT_METHOD_DROP: number;\r\n    DOM_INPUT_METHOD_IME: number;\r\n    DOM_INPUT_METHOD_SCRIPT: number;\r\n    DOM_INPUT_METHOD_VOICE: number;\r\n    DOM_INPUT_METHOD_UNKNOWN: number;\r\n    DOM_INPUT_METHOD_PASTE: number;\r\n    DOM_INPUT_METHOD_HANDWRITING: number;\r\n    DOM_INPUT_METHOD_OPTION: number;\r\n    DOM_INPUT_METHOD_MULTIMODAL: number;\r\n}\r\n\r\ninterface DocumentFragment extends Node, NodeSelector, MSEventAttachmentTarget, MSNodeExtensions {\r\n}\r\ndeclare var DocumentFragment: {\r\n    prototype: DocumentFragment;\r\n    new (): DocumentFragment;\r\n}\r\n\r\ninterface SVGPolylineElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGAnimatedPoints, SVGTests, SVGExternalResourcesRequired {\r\n}\r\ndeclare var SVGPolylineElement: {\r\n    prototype: SVGPolylineElement;\r\n    new (): SVGPolylineElement;\r\n}\r\n\r\ninterface SVGAnimatedPathData {\r\n    pathSegList: SVGPathSegList;\r\n}\r\n\r\ninterface Position {\r\n    timestamp: number;\r\n    coords: Coordinates;\r\n}\r\ndeclare var Position: {\r\n    prototype: Position;\r\n    new (): Position;\r\n}\r\n\r\ninterface BookmarkCollection {\r\n    length: number;\r\n    item(index: number): any;\r\n    [index: number]: any;\r\n}\r\ndeclare var BookmarkCollection: {\r\n    prototype: BookmarkCollection;\r\n    new (): BookmarkCollection;\r\n}\r\n\r\ninterface PerformanceMark extends PerformanceEntry {\r\n}\r\ndeclare var PerformanceMark: {\r\n    prototype: PerformanceMark;\r\n    new (): PerformanceMark;\r\n}\r\n\r\ninterface CSSPageRule extends CSSRule {\r\n    pseudoClass: string;\r\n    selectorText: string;\r\n    selector: string;\r\n    style: CSSStyleDeclaration;\r\n}\r\ndeclare var CSSPageRule: {\r\n    prototype: CSSPageRule;\r\n    new (): CSSPageRule;\r\n}\r\n\r\ninterface HTMLBRElement extends HTMLElement {\r\n    clear: string;\r\n}\r\ndeclare var HTMLBRElement: {\r\n    prototype: HTMLBRElement;\r\n    new (): HTMLBRElement;\r\n}\r\n\r\ninterface MSNavigatorExtensions {\r\n    userLanguage: string;\r\n    plugins: MSPluginsCollection;\r\n    cookieEnabled: boolean;\r\n    appCodeName: string;\r\n    cpuClass: string;\r\n    appMinorVersion: string;\r\n    connectionSpeed: number;\r\n    browserLanguage: string;\r\n    mimeTypes: MSMimeTypesCollection;\r\n    systemLanguage: string;\r\n    javaEnabled(): boolean;\r\n    taintEnabled(): boolean;\r\n}\r\n\r\ninterface HTMLSpanElement extends HTMLElement, MSDataBindingExtensions {\r\n}\r\ndeclare var HTMLSpanElement: {\r\n    prototype: HTMLSpanElement;\r\n    new (): HTMLSpanElement;\r\n}\r\n\r\ninterface HTMLHeadElement extends HTMLElement {\r\n    profile: string;\r\n}\r\ndeclare var HTMLHeadElement: {\r\n    prototype: HTMLHeadElement;\r\n    new (): HTMLHeadElement;\r\n}\r\n\r\ninterface HTMLHeadingElement extends HTMLElement, DOML2DeprecatedTextFlowControl {\r\n    align: string;\r\n}\r\ndeclare var HTMLHeadingElement: {\r\n    prototype: HTMLHeadingElement;\r\n    new (): HTMLHeadingElement;\r\n}\r\n\r\ninterface HTMLFormElement extends HTMLElement, MSHTMLCollectionExtensions {\r\n    length: number;\r\n    target: string;\r\n    acceptCharset: string;\r\n    enctype: string;\r\n    elements: HTMLCollection;\r\n    action: string;\r\n    name: string;\r\n    method: string;\r\n    encoding: string;\r\n    reset(): void;\r\n    item(name?: any, index?: any): any;\r\n    submit(): void;\r\n    namedItem(name: string): any;\r\n    [name: string]: any;\r\n}\r\ndeclare var HTMLFormElement: {\r\n    prototype: HTMLFormElement;\r\n    new (): HTMLFormElement;\r\n}\r\n\r\ninterface SVGZoomAndPan {\r\n    zoomAndPan: number;\r\n    SVG_ZOOMANDPAN_MAGNIFY: number;\r\n    SVG_ZOOMANDPAN_UNKNOWN: number;\r\n    SVG_ZOOMANDPAN_DISABLE: number;\r\n}\r\ndeclare var SVGZoomAndPan: {\r\n    prototype: SVGZoomAndPan;\r\n    new (): SVGZoomAndPan;\r\n    SVG_ZOOMANDPAN_MAGNIFY: number;\r\n    SVG_ZOOMANDPAN_UNKNOWN: number;\r\n    SVG_ZOOMANDPAN_DISABLE: number;\r\n}\r\n\r\ninterface HTMLMediaElement extends HTMLElement {\r\n    initialTime: number;\r\n    played: TimeRanges;\r\n    currentSrc: string;\r\n    readyState: any;\r\n    autobuffer: boolean;\r\n    loop: boolean;\r\n    ended: boolean;\r\n    buffered: TimeRanges;\r\n    error: MediaError;\r\n    seekable: TimeRanges;\r\n    autoplay: boolean;\r\n    controls: boolean;\r\n    volume: number;\r\n    src: string;\r\n    playbackRate: number;\r\n    duration: number;\r\n    muted: boolean;\r\n    defaultPlaybackRate: number;\r\n    paused: boolean;\r\n    seeking: boolean;\r\n    currentTime: number;\r\n    preload: string;\r\n    networkState: number;\r\n    pause(): void;\r\n    play(): void;\r\n    load(): void;\r\n    canPlayType(type: string): string;\r\n    HAVE_METADATA: number;\r\n    HAVE_CURRENT_DATA: number;\r\n    HAVE_NOTHING: number;\r\n    NETWORK_NO_SOURCE: number;\r\n    HAVE_ENOUGH_DATA: number;\r\n    NETWORK_EMPTY: number;\r\n    NETWORK_LOADING: number;\r\n    NETWORK_IDLE: number;\r\n    HAVE_FUTURE_DATA: number;\r\n}\r\ndeclare var HTMLMediaElement: {\r\n    prototype: HTMLMediaElement;\r\n    new (): HTMLMediaElement;\r\n    HAVE_METADATA: number;\r\n    HAVE_CURRENT_DATA: number;\r\n    HAVE_NOTHING: number;\r\n    NETWORK_NO_SOURCE: number;\r\n    HAVE_ENOUGH_DATA: number;\r\n    NETWORK_EMPTY: number;\r\n    NETWORK_LOADING: number;\r\n    NETWORK_IDLE: number;\r\n    HAVE_FUTURE_DATA: number;\r\n}\r\n\r\ninterface ElementCSSInlineStyle {\r\n    runtimeStyle: MSStyleCSSProperties;\r\n    currentStyle: MSCurrentStyleCSSProperties;\r\n    doScroll(component?: any): void;\r\n    componentFromPoint(x: number, y: number): string;\r\n}\r\n\r\ninterface DOMParser {\r\n    parseFromString(source: string, mimeType: string): Document;\r\n}\r\ndeclare var DOMParser: {\r\n    prototype: DOMParser;\r\n    new (): DOMParser;\r\n}\r\n\r\ninterface MSMimeTypesCollection {\r\n    length: number;\r\n}\r\ndeclare var MSMimeTypesCollection: {\r\n    prototype: MSMimeTypesCollection;\r\n    new (): MSMimeTypesCollection;\r\n}\r\n\r\ninterface StyleSheet {\r\n    disabled: boolean;\r\n    ownerNode: Node;\r\n    parentStyleSheet: StyleSheet;\r\n    href: string;\r\n    media: MediaList;\r\n    type: string;\r\n    title: string;\r\n}\r\ndeclare var StyleSheet: {\r\n    prototype: StyleSheet;\r\n    new (): StyleSheet;\r\n}\r\n\r\ninterface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {\r\n    startOffset: SVGAnimatedLength;\r\n    method: SVGAnimatedEnumeration;\r\n    spacing: SVGAnimatedEnumeration;\r\n    TEXTPATH_SPACINGTYPE_EXACT: number;\r\n    TEXTPATH_METHODTYPE_STRETCH: number;\r\n    TEXTPATH_SPACINGTYPE_AUTO: number;\r\n    TEXTPATH_SPACINGTYPE_UNKNOWN: number;\r\n    TEXTPATH_METHODTYPE_UNKNOWN: number;\r\n    TEXTPATH_METHODTYPE_ALIGN: number;\r\n}\r\ndeclare var SVGTextPathElement: {\r\n    prototype: SVGTextPathElement;\r\n    new (): SVGTextPathElement;\r\n    TEXTPATH_SPACINGTYPE_EXACT: number;\r\n    TEXTPATH_METHODTYPE_STRETCH: number;\r\n    TEXTPATH_SPACINGTYPE_AUTO: number;\r\n    TEXTPATH_SPACINGTYPE_UNKNOWN: number;\r\n    TEXTPATH_METHODTYPE_UNKNOWN: number;\r\n    TEXTPATH_METHODTYPE_ALIGN: number;\r\n}\r\n\r\ninterface HTMLDTElement extends HTMLElement {\r\n    noWrap: boolean;\r\n}\r\ndeclare var HTMLDTElement: {\r\n    prototype: HTMLDTElement;\r\n    new (): HTMLDTElement;\r\n}\r\n\r\ninterface NodeList {\r\n    length: number;\r\n    item(index: number): Node;\r\n    [index: number]: Node;\r\n}\r\ndeclare var NodeList: {\r\n    prototype: NodeList;\r\n    new (): NodeList;\r\n}\r\n\r\ninterface NodeListOf<TNode extends Node> extends NodeList {\r\n    length: number;\r\n    item(index: number): TNode;\r\n    [index: number]: TNode;\r\n}\r\n\r\ninterface XMLSerializer {\r\n    serializeToString(target: Node): string;\r\n}\r\ndeclare var XMLSerializer: {\r\n    prototype: XMLSerializer;\r\n    new (): XMLSerializer;\r\n}\r\n\r\ninterface PerformanceMeasure extends PerformanceEntry {\r\n}\r\ndeclare var PerformanceMeasure: {\r\n    prototype: PerformanceMeasure;\r\n    new (): PerformanceMeasure;\r\n}\r\n\r\ninterface SVGGradientElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGExternalResourcesRequired, SVGURIReference {\r\n    spreadMethod: SVGAnimatedEnumeration;\r\n    gradientTransform: SVGAnimatedTransformList;\r\n    gradientUnits: SVGAnimatedEnumeration;\r\n    SVG_SPREADMETHOD_REFLECT: number;\r\n    SVG_SPREADMETHOD_PAD: number;\r\n    SVG_SPREADMETHOD_UNKNOWN: number;\r\n    SVG_SPREADMETHOD_REPEAT: number;\r\n}\r\ndeclare var SVGGradientElement: {\r\n    prototype: SVGGradientElement;\r\n    new (): SVGGradientElement;\r\n    SVG_SPREADMETHOD_REFLECT: number;\r\n    SVG_SPREADMETHOD_PAD: number;\r\n    SVG_SPREADMETHOD_UNKNOWN: number;\r\n    SVG_SPREADMETHOD_REPEAT: number;\r\n}\r\n\r\ninterface NodeFilter {\r\n    acceptNode(n: Node): number;\r\n    SHOW_ENTITY_REFERENCE: number;\r\n    SHOW_NOTATION: number;\r\n    SHOW_ENTITY: number;\r\n    SHOW_DOCUMENT: number;\r\n    SHOW_PROCESSING_INSTRUCTION: number;\r\n    FILTER_REJECT: number;\r\n    SHOW_CDATA_SECTION: number;\r\n    FILTER_ACCEPT: number;\r\n    SHOW_ALL: number;\r\n    SHOW_DOCUMENT_TYPE: number;\r\n    SHOW_TEXT: number;\r\n    SHOW_ELEMENT: number;\r\n    SHOW_COMMENT: number;\r\n    FILTER_SKIP: number;\r\n    SHOW_ATTRIBUTE: number;\r\n    SHOW_DOCUMENT_FRAGMENT: number;\r\n}\r\ndeclare var NodeFilter: {\r\n    prototype: NodeFilter;\r\n    new (): NodeFilter;\r\n    SHOW_ENTITY_REFERENCE: number;\r\n    SHOW_NOTATION: number;\r\n    SHOW_ENTITY: number;\r\n    SHOW_DOCUMENT: number;\r\n    SHOW_PROCESSING_INSTRUCTION: number;\r\n    FILTER_REJECT: number;\r\n    SHOW_CDATA_SECTION: number;\r\n    FILTER_ACCEPT: number;\r\n    SHOW_ALL: number;\r\n    SHOW_DOCUMENT_TYPE: number;\r\n    SHOW_TEXT: number;\r\n    SHOW_ELEMENT: number;\r\n    SHOW_COMMENT: number;\r\n    FILTER_SKIP: number;\r\n    SHOW_ATTRIBUTE: number;\r\n    SHOW_DOCUMENT_FRAGMENT: number;\r\n}\r\n\r\ninterface SVGNumberList {\r\n    numberOfItems: number;\r\n    replaceItem(newItem: SVGNumber, index: number): SVGNumber;\r\n    getItem(index: number): SVGNumber;\r\n    clear(): void;\r\n    appendItem(newItem: SVGNumber): SVGNumber;\r\n    initialize(newItem: SVGNumber): SVGNumber;\r\n    removeItem(index: number): SVGNumber;\r\n    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;\r\n}\r\ndeclare var SVGNumberList: {\r\n    prototype: SVGNumberList;\r\n    new (): SVGNumberList;\r\n}\r\n\r\ninterface MediaError {\r\n    code: number;\r\n    MEDIA_ERR_ABORTED: number;\r\n    MEDIA_ERR_NETWORK: number;\r\n    MEDIA_ERR_SRC_NOT_SUPPORTED: number;\r\n    MEDIA_ERR_DECODE: number;\r\n}\r\ndeclare var MediaError: {\r\n    prototype: MediaError;\r\n    new (): MediaError;\r\n    MEDIA_ERR_ABORTED: number;\r\n    MEDIA_ERR_NETWORK: number;\r\n    MEDIA_ERR_SRC_NOT_SUPPORTED: number;\r\n    MEDIA_ERR_DECODE: number;\r\n}\r\n\r\ninterface HTMLFieldSetElement extends HTMLElement {\r\n    align: string;\r\n    form: HTMLFormElement;\r\n}\r\ndeclare var HTMLFieldSetElement: {\r\n    prototype: HTMLFieldSetElement;\r\n    new (): HTMLFieldSetElement;\r\n}\r\n\r\ninterface HTMLBGSoundElement extends HTMLElement {\r\n    balance: any;\r\n    volume: any;\r\n    src: string;\r\n    loop: number;\r\n}\r\ndeclare var HTMLBGSoundElement: {\r\n    prototype: HTMLBGSoundElement;\r\n    new (): HTMLBGSoundElement;\r\n}\r\n\r\ninterface HTMLElement extends Element, ElementCSSInlineStyle, MSEventAttachmentTarget, MSNodeExtensions {\r\n    onmouseleave: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseleave\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onbeforecut: (ev: DragEvent) => any;\r\n    addEventListener(type: \"beforecut\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onkeydown: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keydown\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    onmove: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"move\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onkeyup: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keyup\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    onreset: (ev: Event) => any;\r\n    addEventListener(type: \"reset\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onhelp: (ev: Event) => any;\r\n    addEventListener(type: \"help\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondragleave: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragleave\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    className: string;\r\n    onfocusin: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusin\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onseeked: (ev: Event) => any;\r\n    addEventListener(type: \"seeked\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    recordNumber: any;\r\n    title: string;\r\n    parentTextEdit: Element;\r\n    outerHTML: string;\r\n    ondurationchange: (ev: Event) => any;\r\n    addEventListener(type: \"durationchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    offsetHeight: number;\r\n    all: HTMLCollection;\r\n    onblur: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"blur\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    dir: string;\r\n    onemptied: (ev: Event) => any;\r\n    addEventListener(type: \"emptied\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onseeking: (ev: Event) => any;\r\n    addEventListener(type: \"seeking\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oncanplay: (ev: Event) => any;\r\n    addEventListener(type: \"canplay\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    ondeactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"deactivate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    ondatasetchanged: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"datasetchanged\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onrowsdelete: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowsdelete\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    sourceIndex: number;\r\n    onloadstart: (ev: Event) => any;\r\n    addEventListener(type: \"loadstart\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onlosecapture: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"losecapture\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    ondragenter: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragenter\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    oncontrolselect: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"controlselect\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onsubmit: (ev: Event) => any;\r\n    addEventListener(type: \"submit\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    behaviorUrns: MSBehaviorUrnsCollection;\r\n    scopeName: string;\r\n    onchange: (ev: Event) => any;\r\n    addEventListener(type: \"change\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    id: string;\r\n    onlayoutcomplete: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"layoutcomplete\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    uniqueID: string;\r\n    onbeforeactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"beforeactivate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    oncanplaythrough: (ev: Event) => any;\r\n    addEventListener(type: \"canplaythrough\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onbeforeupdate: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"beforeupdate\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onfilterchange: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"filterchange\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    offsetParent: Element;\r\n    ondatasetcomplete: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"datasetcomplete\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onsuspend: (ev: Event) => any;\r\n    addEventListener(type: \"suspend\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    readyState: any;\r\n    onmouseenter: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseenter\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    innerText: string;\r\n    onerrorupdate: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"errorupdate\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onmouseout: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseout\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    parentElement: HTMLElement;\r\n    onmousewheel: (ev: MouseWheelEvent) => any;\r\n    addEventListener(type: \"mousewheel\", listener: (ev: MouseWheelEvent) => any, useCapture?: boolean): void;\r\n    onvolumechange: (ev: Event) => any;\r\n    addEventListener(type: \"volumechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oncellchange: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"cellchange\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onrowexit: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowexit\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onrowsinserted: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowsinserted\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onpropertychange: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"propertychange\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    filters: Object;\r\n    children: HTMLCollection;\r\n    ondragend: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragend\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onbeforepaste: (ev: DragEvent) => any;\r\n    addEventListener(type: \"beforepaste\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    ondragover: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragover\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    offsetTop: number;\r\n    onmouseup: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseup\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    ondragstart: (ev: DragEvent) => any;\r\n    addEventListener(type: \"dragstart\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onbeforecopy: (ev: DragEvent) => any;\r\n    addEventListener(type: \"beforecopy\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    ondrag: (ev: DragEvent) => any;\r\n    addEventListener(type: \"drag\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    innerHTML: string;\r\n    onmouseover: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mouseover\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    lang: string;\r\n    uniqueNumber: number;\r\n    onpause: (ev: Event) => any;\r\n    addEventListener(type: \"pause\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    tagUrn: string;\r\n    onmousedown: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousedown\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"click\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onwaiting: (ev: Event) => any;\r\n    addEventListener(type: \"waiting\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onresizestart: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"resizestart\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    offsetLeft: number;\r\n    isTextEdit: boolean;\r\n    isDisabled: boolean;\r\n    onpaste: (ev: DragEvent) => any;\r\n    addEventListener(type: \"paste\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    canHaveHTML: boolean;\r\n    onmoveend: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"moveend\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    language: string;\r\n    onstalled: (ev: Event) => any;\r\n    addEventListener(type: \"stalled\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onmousemove: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"mousemove\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    style: MSStyleCSSProperties;\r\n    isContentEditable: boolean;\r\n    onbeforeeditfocus: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"beforeeditfocus\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onratechange: (ev: Event) => any;\r\n    addEventListener(type: \"ratechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    contentEditable: string;\r\n    tabIndex: number;\r\n    document: Document;\r\n    onprogress: (ev: any) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    ondblclick: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"dblclick\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    oncontextmenu: (ev: MouseEvent) => any;\r\n    addEventListener(type: \"contextmenu\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\n    onloadedmetadata: (ev: Event) => any;\r\n    addEventListener(type: \"loadedmetadata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onafterupdate: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"afterupdate\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onerror: (ev: Event) => any;\r\n    addEventListener(type: \"error\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onplay: (ev: Event) => any;\r\n    addEventListener(type: \"play\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onresizeend: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"resizeend\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onplaying: (ev: Event) => any;\r\n    addEventListener(type: \"playing\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    isMultiLine: boolean;\r\n    onfocusout: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focusout\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    onabort: (ev: UIEvent) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    ondataavailable: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"dataavailable\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    hideFocus: boolean;\r\n    onreadystatechange: (ev: Event) => any;\r\n    addEventListener(type: \"readystatechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onkeypress: (ev: KeyboardEvent) => any;\r\n    addEventListener(type: \"keypress\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\n    onloadeddata: (ev: Event) => any;\r\n    addEventListener(type: \"loadeddata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onbeforedeactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"beforedeactivate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    outerText: string;\r\n    disabled: boolean;\r\n    onactivate: (ev: UIEvent) => any;\r\n    addEventListener(type: \"activate\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    accessKey: string;\r\n    onmovestart: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"movestart\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onselectstart: (ev: Event) => any;\r\n    addEventListener(type: \"selectstart\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onfocus: (ev: FocusEvent) => any;\r\n    addEventListener(type: \"focus\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\n    ontimeupdate: (ev: Event) => any;\r\n    addEventListener(type: \"timeupdate\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onresize: (ev: UIEvent) => any;\r\n    addEventListener(type: \"resize\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    oncut: (ev: DragEvent) => any;\r\n    addEventListener(type: \"cut\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onselect: (ev: UIEvent) => any;\r\n    addEventListener(type: \"select\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    ondrop: (ev: DragEvent) => any;\r\n    addEventListener(type: \"drop\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    offsetWidth: number;\r\n    oncopy: (ev: DragEvent) => any;\r\n    addEventListener(type: \"copy\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\n    onended: (ev: Event) => any;\r\n    addEventListener(type: \"ended\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onscroll: (ev: UIEvent) => any;\r\n    addEventListener(type: \"scroll\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\n    onrowenter: (ev: MSEventObj) => any;\r\n    addEventListener(type: \"rowenter\", listener: (ev: MSEventObj) => any, useCapture?: boolean): void;\r\n    onload: (ev: Event) => any;\r\n    addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    canHaveChildren: boolean;\r\n    oninput: (ev: Event) => any;\r\n    addEventListener(type: \"input\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    dragDrop(): boolean;\r\n    scrollIntoView(top?: boolean): void;\r\n    addFilter(filter: Object): void;\r\n    setCapture(containerCapture?: boolean): void;\r\n    focus(): void;\r\n    getAdjacentText(where: string): string;\r\n    insertAdjacentText(where: string, text: string): void;\r\n    getElementsByClassName(classNames: string): NodeList;\r\n    setActive(): void;\r\n    removeFilter(filter: Object): void;\r\n    blur(): void;\r\n    clearAttributes(): void;\r\n    releaseCapture(): void;\r\n    createControlRange(): ControlRangeCollection;\r\n    removeBehavior(cookie: number): boolean;\r\n    contains(child: HTMLElement): boolean;\r\n    click(): void;\r\n    insertAdjacentElement(position: string, insertedElement: Element): Element;\r\n    mergeAttributes(source: HTMLElement, preserveIdentity?: boolean): void;\r\n    replaceAdjacentText(where: string, newText: string): string;\r\n    applyElement(apply: Element, where?: string): Element;\r\n    addBehavior(bstrUrl: string, factory?: any): number;\r\n    insertAdjacentHTML(where: string, html: string): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var HTMLElement: {\r\n    prototype: HTMLElement;\r\n    new (): HTMLElement;\r\n}\r\n\r\ninterface Comment extends CharacterData {\r\n    text: string;\r\n}\r\ndeclare var Comment: {\r\n    prototype: Comment;\r\n    new (): Comment;\r\n}\r\n\r\ninterface PerformanceResourceTiming extends PerformanceEntry {\r\n    redirectStart: number;\r\n    redirectEnd: number;\r\n    domainLookupEnd: number;\r\n    responseStart: number;\r\n    domainLookupStart: number;\r\n    fetchStart: number;\r\n    requestStart: number;\r\n    connectEnd: number;\r\n    connectStart: number;\r\n    initiatorType: string;\r\n    responseEnd: number;\r\n}\r\ndeclare var PerformanceResourceTiming: {\r\n    prototype: PerformanceResourceTiming;\r\n    new (): PerformanceResourceTiming;\r\n}\r\n\r\ninterface CanvasPattern {\r\n}\r\ndeclare var CanvasPattern: {\r\n    prototype: CanvasPattern;\r\n    new (): CanvasPattern;\r\n}\r\n\r\ninterface HTMLHRElement extends HTMLElement, DOML2DeprecatedColorProperty, DOML2DeprecatedSizeProperty {\r\n    width: number;\r\n    align: string;\r\n    noShade: boolean;\r\n}\r\ndeclare var HTMLHRElement: {\r\n    prototype: HTMLHRElement;\r\n    new (): HTMLHRElement;\r\n}\r\n\r\ninterface HTMLObjectElement extends HTMLElement, GetSVGDocument, DOML2DeprecatedMarginStyle, DOML2DeprecatedBorderStyle, DOML2DeprecatedAlignmentStyle, MSDataBindingExtensions, MSDataBindingRecordSetExtensions {\r\n    width: string;\r\n    codeType: string;\r\n    object: Object;\r\n    form: HTMLFormElement;\r\n    code: string;\r\n    archive: string;\r\n    standby: string;\r\n    alt: string;\r\n    classid: string;\r\n    name: string;\r\n    useMap: string;\r\n    data: string;\r\n    height: string;\r\n    contentDocument: Document;\r\n    altHtml: string;\r\n    codeBase: string;\r\n    declare: boolean;\r\n    type: string;\r\n    BaseHref: string;\r\n}\r\ndeclare var HTMLObjectElement: {\r\n    prototype: HTMLObjectElement;\r\n    new (): HTMLObjectElement;\r\n}\r\n\r\ninterface HTMLEmbedElement extends HTMLElement, GetSVGDocument {\r\n    width: string;\r\n    palette: string;\r\n    src: string;\r\n    name: string;\r\n    pluginspage: string;\r\n    height: string;\r\n    units: string;\r\n}\r\ndeclare var HTMLEmbedElement: {\r\n    prototype: HTMLEmbedElement;\r\n    new (): HTMLEmbedElement;\r\n}\r\n\r\ninterface StorageEvent extends Event {\r\n    oldValue: any;\r\n    newValue: any;\r\n    url: string;\r\n    storageArea: Storage;\r\n    key: string;\r\n    initStorageEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, keyArg: string, oldValueArg: any, newValueArg: any, urlArg: string, storageAreaArg: Storage): void;\r\n}\r\ndeclare var StorageEvent: {\r\n    prototype: StorageEvent;\r\n    new (): StorageEvent;\r\n}\r\n\r\ninterface CharacterData extends Node {\r\n    length: number;\r\n    data: string;\r\n    deleteData(offset: number, count: number): void;\r\n    replaceData(offset: number, count: number, arg: string): void;\r\n    appendData(arg: string): void;\r\n    insertData(offset: number, arg: string): void;\r\n    substringData(offset: number, count: number): string;\r\n}\r\ndeclare var CharacterData: {\r\n    prototype: CharacterData;\r\n    new (): CharacterData;\r\n}\r\n\r\ninterface HTMLOptGroupElement extends HTMLElement, MSDataBindingExtensions {\r\n    index: number;\r\n    defaultSelected: boolean;\r\n    text: string;\r\n    value: string;\r\n    form: HTMLFormElement;\r\n    label: string;\r\n    selected: boolean;\r\n}\r\ndeclare var HTMLOptGroupElement: {\r\n    prototype: HTMLOptGroupElement;\r\n    new (): HTMLOptGroupElement;\r\n}\r\n\r\ninterface HTMLIsIndexElement extends HTMLElement {\r\n    form: HTMLFormElement;\r\n    action: string;\r\n    prompt: string;\r\n}\r\ndeclare var HTMLIsIndexElement: {\r\n    prototype: HTMLIsIndexElement;\r\n    new (): HTMLIsIndexElement;\r\n}\r\n\r\ninterface SVGPathSegLinetoRel extends SVGPathSeg {\r\n    y: number;\r\n    x: number;\r\n}\r\ndeclare var SVGPathSegLinetoRel: {\r\n    prototype: SVGPathSegLinetoRel;\r\n    new (): SVGPathSegLinetoRel;\r\n}\r\n\r\ninterface DOMException {\r\n    code: number;\r\n    message: string;\r\n    toString(): string;\r\n    HIERARCHY_REQUEST_ERR: number;\r\n    NO_MODIFICATION_ALLOWED_ERR: number;\r\n    INVALID_MODIFICATION_ERR: number;\r\n    NAMESPACE_ERR: number;\r\n    INVALID_CHARACTER_ERR: number;\r\n    TYPE_MISMATCH_ERR: number;\r\n    ABORT_ERR: number;\r\n    INVALID_STATE_ERR: number;\r\n    SECURITY_ERR: number;\r\n    NETWORK_ERR: number;\r\n    WRONG_DOCUMENT_ERR: number;\r\n    QUOTA_EXCEEDED_ERR: number;\r\n    INDEX_SIZE_ERR: number;\r\n    DOMSTRING_SIZE_ERR: number;\r\n    SYNTAX_ERR: number;\r\n    SERIALIZE_ERR: number;\r\n    VALIDATION_ERR: number;\r\n    NOT_FOUND_ERR: number;\r\n    URL_MISMATCH_ERR: number;\r\n    PARSE_ERR: number;\r\n    NO_DATA_ALLOWED_ERR: number;\r\n    NOT_SUPPORTED_ERR: number;\r\n    INVALID_ACCESS_ERR: number;\r\n    INUSE_ATTRIBUTE_ERR: number;\r\n}\r\ndeclare var DOMException: {\r\n    prototype: DOMException;\r\n    new (): DOMException;\r\n    HIERARCHY_REQUEST_ERR: number;\r\n    NO_MODIFICATION_ALLOWED_ERR: number;\r\n    INVALID_MODIFICATION_ERR: number;\r\n    NAMESPACE_ERR: number;\r\n    INVALID_CHARACTER_ERR: number;\r\n    TYPE_MISMATCH_ERR: number;\r\n    ABORT_ERR: number;\r\n    INVALID_STATE_ERR: number;\r\n    SECURITY_ERR: number;\r\n    NETWORK_ERR: number;\r\n    WRONG_DOCUMENT_ERR: number;\r\n    QUOTA_EXCEEDED_ERR: number;\r\n    INDEX_SIZE_ERR: number;\r\n    DOMSTRING_SIZE_ERR: number;\r\n    SYNTAX_ERR: number;\r\n    SERIALIZE_ERR: number;\r\n    VALIDATION_ERR: number;\r\n    NOT_FOUND_ERR: number;\r\n    URL_MISMATCH_ERR: number;\r\n    PARSE_ERR: number;\r\n    NO_DATA_ALLOWED_ERR: number;\r\n    NOT_SUPPORTED_ERR: number;\r\n    INVALID_ACCESS_ERR: number;\r\n    INUSE_ATTRIBUTE_ERR: number;\r\n}\r\n\r\ninterface SVGAnimatedBoolean {\r\n    animVal: boolean;\r\n    baseVal: boolean;\r\n}\r\ndeclare var SVGAnimatedBoolean: {\r\n    prototype: SVGAnimatedBoolean;\r\n    new (): SVGAnimatedBoolean;\r\n}\r\n\r\ninterface MSCompatibleInfoCollection {\r\n    length: number;\r\n    item(index: number): MSCompatibleInfo;\r\n}\r\ndeclare var MSCompatibleInfoCollection: {\r\n    prototype: MSCompatibleInfoCollection;\r\n    new (): MSCompatibleInfoCollection;\r\n}\r\n\r\ninterface SVGSwitchElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n}\r\ndeclare var SVGSwitchElement: {\r\n    prototype: SVGSwitchElement;\r\n    new (): SVGSwitchElement;\r\n}\r\n\r\ninterface SVGPreserveAspectRatio {\r\n    align: number;\r\n    meetOrSlice: number;\r\n    SVG_PRESERVEASPECTRATIO_NONE: number;\r\n    SVG_PRESERVEASPECTRATIO_XMINYMID: number;\r\n    SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\r\n    SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\r\n    SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\r\n    SVG_MEETORSLICE_UNKNOWN: number;\r\n    SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\r\n    SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\r\n    SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\r\n    SVG_MEETORSLICE_MEET: number;\r\n    SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\r\n    SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\r\n    SVG_MEETORSLICE_SLICE: number;\r\n    SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\r\n}\r\ndeclare var SVGPreserveAspectRatio: {\r\n    prototype: SVGPreserveAspectRatio;\r\n    new (): SVGPreserveAspectRatio;\r\n    SVG_PRESERVEASPECTRATIO_NONE: number;\r\n    SVG_PRESERVEASPECTRATIO_XMINYMID: number;\r\n    SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\r\n    SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\r\n    SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\r\n    SVG_MEETORSLICE_UNKNOWN: number;\r\n    SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\r\n    SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\r\n    SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\r\n    SVG_MEETORSLICE_MEET: number;\r\n    SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\r\n    SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\r\n    SVG_MEETORSLICE_SLICE: number;\r\n    SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\r\n}\r\n\r\ninterface Attr extends Node {\r\n    expando: boolean;\r\n    specified: boolean;\r\n    ownerElement: Element;\r\n    value: string;\r\n    name: string;\r\n}\r\ndeclare var Attr: {\r\n    prototype: Attr;\r\n    new (): Attr;\r\n}\r\n\r\ninterface PerformanceNavigation {\r\n    redirectCount: number;\r\n    type: number;\r\n    toJSON(): any;\r\n    TYPE_RELOAD: number;\r\n    TYPE_RESERVED: number;\r\n    TYPE_BACK_FORWARD: number;\r\n    TYPE_NAVIGATE: number;\r\n}\r\ndeclare var PerformanceNavigation: {\r\n    prototype: PerformanceNavigation;\r\n    new (): PerformanceNavigation;\r\n    TYPE_RELOAD: number;\r\n    TYPE_RESERVED: number;\r\n    TYPE_BACK_FORWARD: number;\r\n    TYPE_NAVIGATE: number;\r\n}\r\n\r\ninterface SVGStopElement extends SVGElement, SVGStylable {\r\n    offset: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGStopElement: {\r\n    prototype: SVGStopElement;\r\n    new (): SVGStopElement;\r\n}\r\n\r\ninterface PositionCallback {\r\n    (position: Position): void;\r\n}\r\n\r\ninterface SVGSymbolElement extends SVGElement, SVGStylable, SVGLangSpace, SVGFitToViewBox, SVGExternalResourcesRequired {\r\n}\r\ndeclare var SVGSymbolElement: {\r\n    prototype: SVGSymbolElement;\r\n    new (): SVGSymbolElement;\r\n}\r\n\r\ninterface SVGElementInstanceList {\r\n    length: number;\r\n    item(index: number): SVGElementInstance;\r\n}\r\ndeclare var SVGElementInstanceList: {\r\n    prototype: SVGElementInstanceList;\r\n    new (): SVGElementInstanceList;\r\n}\r\n\r\ninterface CSSRuleList {\r\n    length: number;\r\n    item(index: number): CSSRule;\r\n    [index: number]: CSSRule;\r\n}\r\ndeclare var CSSRuleList: {\r\n    prototype: CSSRuleList;\r\n    new (): CSSRuleList;\r\n}\r\n\r\ninterface MSDataBindingRecordSetExtensions {\r\n    recordset: Object;\r\n    namedRecordset(dataMember: string, hierarchy?: any): Object;\r\n}\r\n\r\ninterface LinkStyle {\r\n    styleSheet: StyleSheet;\r\n    sheet: StyleSheet;\r\n}\r\n\r\ninterface HTMLVideoElement extends HTMLMediaElement {\r\n    width: number;\r\n    videoWidth: number;\r\n    videoHeight: number;\r\n    height: number;\r\n    poster: string;\r\n}\r\ndeclare var HTMLVideoElement: {\r\n    prototype: HTMLVideoElement;\r\n    new (): HTMLVideoElement;\r\n}\r\n\r\ninterface ClientRectList {\r\n    length: number;\r\n    item(index: number): ClientRect;\r\n    [index: number]: ClientRect;\r\n}\r\ndeclare var ClientRectList: {\r\n    prototype: ClientRectList;\r\n    new (): ClientRectList;\r\n}\r\n\r\ninterface SVGMaskElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGLangSpace, SVGTests, SVGExternalResourcesRequired {\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    maskUnits: SVGAnimatedEnumeration;\r\n    maskContentUnits: SVGAnimatedEnumeration;\r\n    x: SVGAnimatedLength;\r\n    height: SVGAnimatedLength;\r\n}\r\ndeclare var SVGMaskElement: {\r\n    prototype: SVGMaskElement;\r\n    new (): SVGMaskElement;\r\n}\r\n\r\ninterface External {\r\n}\r\ndeclare var External: {\r\n    prototype: External;\r\n    new (): External;\r\n}\r\n\r\ndeclare var Audio: { new (src?: string): HTMLAudioElement; };\r\ndeclare var Option: { new (text?: string, value?: string, defaultSelected?: boolean, selected?: boolean): HTMLOptionElement; };\r\ndeclare var Image: { new (width?: number, height?: number): HTMLImageElement; };\r\n\r\ndeclare var ondragend: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"dragend\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var onkeydown: (ev: KeyboardEvent) => any;\r\ndeclare function addEventListener(type: \"keydown\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\ndeclare var ondragover: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"dragover\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var onkeyup: (ev: KeyboardEvent) => any;\r\ndeclare function addEventListener(type: \"keyup\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\ndeclare var onreset: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"reset\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onmouseup: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mouseup\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var ondragstart: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"dragstart\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var ondrag: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"drag\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var screenX: number;\r\ndeclare var onmouseover: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mouseover\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var ondragleave: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"dragleave\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var history: History;\r\ndeclare var pageXOffset: number;\r\ndeclare var name: string;\r\ndeclare var onafterprint: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"afterprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onpause: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"pause\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onbeforeprint: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"beforeprint\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var top: Window;\r\ndeclare var onmousedown: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mousedown\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var onseeked: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"seeked\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var opener: Window;\r\ndeclare var onclick: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"click\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var innerHeight: number;\r\ndeclare var onwaiting: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"waiting\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var ononline: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"online\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var ondurationchange: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"durationchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var frames: Window;\r\ndeclare var onblur: (ev: FocusEvent) => any;\r\ndeclare function addEventListener(type: \"blur\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\ndeclare var onemptied: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"emptied\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onseeking: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"seeking\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var oncanplay: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"canplay\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var outerWidth: number;\r\ndeclare var onstalled: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"stalled\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onmousemove: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mousemove\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var innerWidth: number;\r\ndeclare var onoffline: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"offline\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var length: number;\r\ndeclare var screen: Screen;\r\ndeclare var onbeforeunload: (ev: BeforeUnloadEvent) => any;\r\ndeclare function addEventListener(type: \"beforeunload\", listener: (ev: BeforeUnloadEvent) => any, useCapture?: boolean): void;\r\ndeclare var onratechange: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"ratechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onstorage: (ev: StorageEvent) => any;\r\ndeclare function addEventListener(type: \"storage\", listener: (ev: StorageEvent) => any, useCapture?: boolean): void;\r\ndeclare var onloadstart: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"loadstart\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var ondragenter: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"dragenter\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var onsubmit: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"submit\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var self: Window;\r\ndeclare var document: Document;\r\ndeclare var onprogress: (ev: any) => any;\r\ndeclare function addEventListener(type: \"progress\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var ondblclick: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"dblclick\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var pageYOffset: number;\r\ndeclare var oncontextmenu: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"contextmenu\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var onchange: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"change\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onloadedmetadata: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"loadedmetadata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onplay: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"play\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onerror: ErrorEventHandler;\r\ndeclare var onplaying: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"playing\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var parent: Window;\r\ndeclare var location: Location;\r\ndeclare var oncanplaythrough: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"canplaythrough\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onabort: (ev: UIEvent) => any;\r\ndeclare function addEventListener(type: \"abort\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\ndeclare var onreadystatechange: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"readystatechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var outerHeight: number;\r\ndeclare var onkeypress: (ev: KeyboardEvent) => any;\r\ndeclare function addEventListener(type: \"keypress\", listener: (ev: KeyboardEvent) => any, useCapture?: boolean): void;\r\ndeclare var frameElement: Element;\r\ndeclare var onloadeddata: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"loadeddata\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onsuspend: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"suspend\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var window: Window;\r\ndeclare var onfocus: (ev: FocusEvent) => any;\r\ndeclare function addEventListener(type: \"focus\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\ndeclare var onmessage: (ev: MessageEvent) => any;\r\ndeclare function addEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\r\ndeclare var ontimeupdate: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"timeupdate\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onresize: (ev: UIEvent) => any;\r\ndeclare function addEventListener(type: \"resize\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\ndeclare var onselect: (ev: UIEvent) => any;\r\ndeclare function addEventListener(type: \"select\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\ndeclare var navigator: Navigator;\r\ndeclare var styleMedia: StyleMedia;\r\ndeclare var ondrop: (ev: DragEvent) => any;\r\ndeclare function addEventListener(type: \"drop\", listener: (ev: DragEvent) => any, useCapture?: boolean): void;\r\ndeclare var onmouseout: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mouseout\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var onended: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"ended\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onhashchange: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"hashchange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onunload: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"unload\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onscroll: (ev: UIEvent) => any;\r\ndeclare function addEventListener(type: \"scroll\", listener: (ev: UIEvent) => any, useCapture?: boolean): void;\r\ndeclare var screenY: number;\r\ndeclare var onmousewheel: (ev: MouseWheelEvent) => any;\r\ndeclare function addEventListener(type: \"mousewheel\", listener: (ev: MouseWheelEvent) => any, useCapture?: boolean): void;\r\ndeclare var onload: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"load\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var onvolumechange: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"volumechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var oninput: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"input\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var performance: Performance;\r\ndeclare function alert(message?: string): void;\r\ndeclare function scroll(x?: number, y?: number): void;\r\ndeclare function focus(): void;\r\ndeclare function scrollTo(x?: number, y?: number): void;\r\ndeclare function print(): void;\r\ndeclare function prompt(message?: string, defaul?: string): string;\r\ndeclare function toString(): string;\r\ndeclare function open(url?: string, target?: string, features?: string, replace?: boolean): Window;\r\ndeclare function scrollBy(x?: number, y?: number): void;\r\ndeclare function confirm(message?: string): boolean;\r\ndeclare function close(): void;\r\ndeclare function postMessage(message: any, targetOrigin: string, ports?: any): void;\r\ndeclare function showModalDialog(url?: string, argument?: any, options?: any): any;\r\ndeclare function blur(): void;\r\ndeclare function getSelection(): Selection;\r\ndeclare function getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;\r\ndeclare function addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\ndeclare function removeEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\ndeclare function dispatchEvent(evt: Event): boolean;\r\ndeclare function attachEvent(event: string, listener: EventListener): boolean;\r\ndeclare function detachEvent(event: string, listener: EventListener): void;\r\ndeclare var localStorage: Storage;\r\ndeclare var status: string;\r\ndeclare var onmouseleave: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mouseleave\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var screenLeft: number;\r\ndeclare var offscreenBuffering: any;\r\ndeclare var maxConnectionsPerServer: number;\r\ndeclare var onmouseenter: (ev: MouseEvent) => any;\r\ndeclare function addEventListener(type: \"mouseenter\", listener: (ev: MouseEvent) => any, useCapture?: boolean): void;\r\ndeclare var clipboardData: DataTransfer;\r\ndeclare var defaultStatus: string;\r\ndeclare var clientInformation: Navigator;\r\ndeclare var closed: boolean;\r\ndeclare var onhelp: (ev: Event) => any;\r\ndeclare function addEventListener(type: \"help\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\ndeclare var external: External;\r\ndeclare var event: MSEventObj;\r\ndeclare var onfocusout: (ev: FocusEvent) => any;\r\ndeclare function addEventListener(type: \"focusout\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\ndeclare var screenTop: number;\r\ndeclare var onfocusin: (ev: FocusEvent) => any;\r\ndeclare function addEventListener(type: \"focusin\", listener: (ev: FocusEvent) => any, useCapture?: boolean): void;\r\ndeclare function showModelessDialog(url?: string, argument?: any, options?: any): Window;\r\ndeclare function navigate(url: string): void;\r\ndeclare function resizeBy(x?: number, y?: number): void;\r\ndeclare function item(index: any): any;\r\ndeclare function resizeTo(x?: number, y?: number): void;\r\ndeclare function createPopup(arguments?: any): MSPopupWindow;\r\ndeclare function toStaticHTML(html: string): string;\r\ndeclare function execScript(code: string, language?: string): any;\r\ndeclare function msWriteProfilerMark(profilerMarkName: string): void;\r\ndeclare function moveTo(x?: number, y?: number): void;\r\ndeclare function moveBy(x?: number, y?: number): void;\r\ndeclare function showHelp(url: string, helpArg?: any, features?: string): void;\r\ndeclare var sessionStorage: Storage;\r\ndeclare function clearTimeout(handle: number): void;\r\ndeclare function setTimeout(handler: any, timeout?: any, ...args: any[]): number;\r\ndeclare function clearInterval(handle: number): void;\r\ndeclare function setInterval(handler: any, timeout?: any, ...args: any[]): number;\r\n\r\n\r\n/////////////////////////////\r\n/// IE10 DOM APIs \r\n/////////////////////////////\r\n\r\n\r\n\r\ninterface ObjectURLOptions {\r\n    oneTimeOnly?: boolean;\r\n}\r\n\r\ninterface HTMLBodyElement {\r\n    onpopstate: (ev: PopStateEvent) => any;\r\n    addEventListener(type: \"popstate\", listener: (ev: PopStateEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface MSGestureEvent extends UIEvent {\r\n    offsetY: number;\r\n    translationY: number;\r\n    velocityExpansion: number;\r\n    velocityY: number;\r\n    velocityAngular: number;\r\n    translationX: number;\r\n    velocityX: number;\r\n    hwTimestamp: number;\r\n    offsetX: number;\r\n    screenX: number;\r\n    rotation: number;\r\n    expansion: number;\r\n    clientY: number;\r\n    screenY: number;\r\n    scale: number;\r\n    gestureObject: any;\r\n    clientX: number;\r\n    initGestureEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, offsetXArg: number, offsetYArg: number, translationXArg: number, translationYArg: number, scaleArg: number, expansionArg: number, rotationArg: number, velocityXArg: number, velocityYArg: number, velocityExpansionArg: number, velocityAngularArg: number, hwTimestampArg: number): void;\r\n    MSGESTURE_FLAG_BEGIN: number;\r\n    MSGESTURE_FLAG_END: number;\r\n    MSGESTURE_FLAG_CANCEL: number;\r\n    MSGESTURE_FLAG_INERTIA: number;\r\n    MSGESTURE_FLAG_NONE: number;\r\n}\r\ndeclare var MSGestureEvent: {\r\n    prototype: MSGestureEvent;\r\n    new (): MSGestureEvent;\r\n    MSGESTURE_FLAG_BEGIN: number;\r\n    MSGESTURE_FLAG_END: number;\r\n    MSGESTURE_FLAG_CANCEL: number;\r\n    MSGESTURE_FLAG_INERTIA: number;\r\n    MSGESTURE_FLAG_NONE: number;\r\n}\r\n\r\ninterface HTMLAnchorElement {\r\n    text: string;\r\n}\r\n\r\ninterface HTMLInputElement {\r\n    validationMessage: string;\r\n    files: FileList;\r\n    max: string;\r\n    formTarget: string;\r\n    willValidate: boolean;\r\n    step: string;\r\n    autofocus: boolean;\r\n    required: boolean;\r\n    formEnctype: string;\r\n    valueAsNumber: number;\r\n    placeholder: string;\r\n    formMethod: string;\r\n    list: HTMLElement;\r\n    autocomplete: string;\r\n    min: string;\r\n    formAction: string;\r\n    pattern: string;\r\n    validity: ValidityState;\r\n    formNoValidate: string;\r\n    multiple: boolean;\r\n    checkValidity(): boolean;\r\n    stepDown(n?: number): void;\r\n    stepUp(n?: number): void;\r\n    setCustomValidity(error: string): void;\r\n}\r\n\r\ninterface ErrorEvent extends Event {\r\n    colno: number;\r\n    filename: string;\r\n    lineno: number;\r\n    message: string;\r\n    initErrorEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, messageArg: string, filenameArg: string, linenoArg: number): void;\r\n}\r\ndeclare var ErrorEvent: {\r\n    prototype: ErrorEvent;\r\n    new (): ErrorEvent;\r\n}\r\n\r\ninterface SVGFilterElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGLangSpace, SVGURIReference, SVGExternalResourcesRequired {\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    filterResX: SVGAnimatedInteger;\r\n    filterUnits: SVGAnimatedEnumeration;\r\n    primitiveUnits: SVGAnimatedEnumeration;\r\n    x: SVGAnimatedLength;\r\n    height: SVGAnimatedLength;\r\n    filterResY: SVGAnimatedInteger;\r\n    setFilterRes(filterResX: number, filterResY: number): void;\r\n}\r\ndeclare var SVGFilterElement: {\r\n    prototype: SVGFilterElement;\r\n    new (): SVGFilterElement;\r\n}\r\n\r\ninterface TrackEvent extends Event {\r\n    track: any;\r\n}\r\ndeclare var TrackEvent: {\r\n    prototype: TrackEvent;\r\n    new (): TrackEvent;\r\n}\r\n\r\ninterface SVGFEMergeNodeElement extends SVGElement {\r\n    in1: SVGAnimatedString;\r\n}\r\ndeclare var SVGFEMergeNodeElement: {\r\n    prototype: SVGFEMergeNodeElement;\r\n    new (): SVGFEMergeNodeElement;\r\n}\r\n\r\ninterface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n}\r\ndeclare var SVGFEFloodElement: {\r\n    prototype: SVGFEFloodElement;\r\n    new (): SVGFEFloodElement;\r\n}\r\n\r\ninterface MSGesture {\r\n    target: Element;\r\n    addPointer(pointerId: number): void;\r\n    stop(): void;\r\n}\r\ndeclare var MSGesture: {\r\n    prototype: MSGesture;\r\n    new (): MSGesture;\r\n}\r\n\r\ninterface TextTrackCue extends EventTarget {\r\n    onenter: (ev: Event) => any;\r\n    addEventListener(type: \"enter\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    track: TextTrack;\r\n    endTime: number;\r\n    text: string;\r\n    pauseOnExit: boolean;\r\n    id: string;\r\n    startTime: number;\r\n    onexit: (ev: Event) => any;\r\n    addEventListener(type: \"exit\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    getCueAsHTML(): DocumentFragment;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var TextTrackCue: {\r\n    prototype: TextTrackCue;\r\n    new (): TextTrackCue;\r\n}\r\n\r\ninterface MSStreamReader extends MSBaseReader {\r\n    error: DOMError;\r\n    readAsArrayBuffer(stream: MSStream, size?: number): void;\r\n    readAsBlob(stream: MSStream, size?: number): void;\r\n    readAsDataURL(stream: MSStream, size?: number): void;\r\n    readAsText(stream: MSStream, encoding?: string, size?: number): void;\r\n}\r\ndeclare var MSStreamReader: {\r\n    prototype: MSStreamReader;\r\n    new (): MSStreamReader;\r\n}\r\n\r\ninterface DOMTokenList {\r\n    length: number;\r\n    contains(token: string): boolean;\r\n    remove(token: string): void;\r\n    toggle(token: string): boolean;\r\n    add(token: string): void;\r\n    item(index: number): string;\r\n    [index: number]: string;\r\n    toString(): string;\r\n}\r\ndeclare var DOMTokenList: {\r\n    prototype: DOMTokenList;\r\n    new (): DOMTokenList;\r\n}\r\n\r\ninterface EventException {\r\n    name: string;\r\n}\r\n\r\ninterface Performance {\r\n    now(): number;\r\n}\r\n\r\ninterface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {\r\n}\r\ndeclare var SVGFEFuncAElement: {\r\n    prototype: SVGFEFuncAElement;\r\n    new (): SVGFEFuncAElement;\r\n}\r\n\r\ninterface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    in1: SVGAnimatedString;\r\n}\r\ndeclare var SVGFETileElement: {\r\n    prototype: SVGFETileElement;\r\n    new (): SVGFETileElement;\r\n}\r\n\r\ninterface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    in2: SVGAnimatedString;\r\n    mode: SVGAnimatedEnumeration;\r\n    in1: SVGAnimatedString;\r\n    SVG_FEBLEND_MODE_DARKEN: number;\r\n    SVG_FEBLEND_MODE_UNKNOWN: number;\r\n    SVG_FEBLEND_MODE_MULTIPLY: number;\r\n    SVG_FEBLEND_MODE_NORMAL: number;\r\n    SVG_FEBLEND_MODE_SCREEN: number;\r\n    SVG_FEBLEND_MODE_LIGHTEN: number;\r\n}\r\ndeclare var SVGFEBlendElement: {\r\n    prototype: SVGFEBlendElement;\r\n    new (): SVGFEBlendElement;\r\n    SVG_FEBLEND_MODE_DARKEN: number;\r\n    SVG_FEBLEND_MODE_UNKNOWN: number;\r\n    SVG_FEBLEND_MODE_MULTIPLY: number;\r\n    SVG_FEBLEND_MODE_NORMAL: number;\r\n    SVG_FEBLEND_MODE_SCREEN: number;\r\n    SVG_FEBLEND_MODE_LIGHTEN: number;\r\n}\r\n\r\ninterface WindowTimers extends WindowTimersExtension {\r\n}\r\ndeclare var WindowTimers: {\r\n    prototype: WindowTimers;\r\n    new (): WindowTimers;\r\n}\r\n\r\ninterface CSSStyleDeclaration {\r\n    animationFillMode: string;\r\n    floodColor: string;\r\n    animationIterationCount: string;\r\n    textShadow: string;\r\n    backfaceVisibility: string;\r\n    msAnimationIterationCount: string;\r\n    animationDelay: string;\r\n    animationTimingFunction: string;\r\n    columnWidth: any;\r\n    msScrollSnapX: string;\r\n    columnRuleColor: any;\r\n    columnRuleWidth: any;\r\n    transitionDelay: string;\r\n    transition: string;\r\n    msFlowFrom: string;\r\n    msScrollSnapType: string;\r\n    msContentZoomSnapType: string;\r\n    msGridColumns: string;\r\n    msAnimationName: string;\r\n    msGridRowAlign: string;\r\n    msContentZoomChaining: string;\r\n    msGridColumn: any;\r\n    msHyphenateLimitZone: any;\r\n    msScrollRails: string;\r\n    msAnimationDelay: string;\r\n    enableBackground: string;\r\n    msWrapThrough: string;\r\n    columnRuleStyle: string;\r\n    msAnimation: string;\r\n    msFlexFlow: string;\r\n    msScrollSnapY: string;\r\n    msHyphenateLimitLines: any;\r\n    msTouchAction: string;\r\n    msScrollLimit: string;\r\n    animation: string;\r\n    transform: string;\r\n    filter: string;\r\n    colorInterpolationFilters: string;\r\n    transitionTimingFunction: string;\r\n    msBackfaceVisibility: string;\r\n    animationPlayState: string;\r\n    transformOrigin: string;\r\n    msScrollLimitYMin: any;\r\n    msFontFeatureSettings: string;\r\n    msContentZoomLimitMin: any;\r\n    columnGap: any;\r\n    transitionProperty: string;\r\n    msAnimationDuration: string;\r\n    msAnimationFillMode: string;\r\n    msFlexDirection: string;\r\n    msTransitionDuration: string;\r\n    fontFeatureSettings: string;\r\n    breakBefore: string;\r\n    msFlexWrap: string;\r\n    perspective: string;\r\n    msFlowInto: string;\r\n    msTransformStyle: string;\r\n    msScrollTranslation: string;\r\n    msTransitionProperty: string;\r\n    msUserSelect: string;\r\n    msOverflowStyle: string;\r\n    msScrollSnapPointsY: string;\r\n    animationDirection: string;\r\n    animationDuration: string;\r\n    msFlex: string;\r\n    msTransitionTimingFunction: string;\r\n    animationName: string;\r\n    columnRule: string;\r\n    msGridColumnSpan: any;\r\n    msFlexNegative: string;\r\n    columnFill: string;\r\n    msGridRow: any;\r\n    msFlexOrder: string;\r\n    msFlexItemAlign: string;\r\n    msFlexPositive: string;\r\n    msContentZoomLimitMax: any;\r\n    msScrollLimitYMax: any;\r\n    msGridColumnAlign: string;\r\n    perspectiveOrigin: string;\r\n    lightingColor: string;\r\n    columns: string;\r\n    msScrollChaining: string;\r\n    msHyphenateLimitChars: string;\r\n    msTouchSelect: string;\r\n    floodOpacity: string;\r\n    msAnimationDirection: string;\r\n    msAnimationPlayState: string;\r\n    columnSpan: string;\r\n    msContentZooming: string;\r\n    msPerspective: string;\r\n    msFlexPack: string;\r\n    msScrollSnapPointsX: string;\r\n    msContentZoomSnapPoints: string;\r\n    msGridRowSpan: any;\r\n    msContentZoomSnap: string;\r\n    msScrollLimitXMin: any;\r\n    breakInside: string;\r\n    msHighContrastAdjust: string;\r\n    msFlexLinePack: string;\r\n    msGridRows: string;\r\n    transitionDuration: string;\r\n    msHyphens: string;\r\n    breakAfter: string;\r\n    msTransition: string;\r\n    msPerspectiveOrigin: string;\r\n    msContentZoomLimit: string;\r\n    msScrollLimitXMax: any;\r\n    msFlexAlign: string;\r\n    msWrapMargin: any;\r\n    columnCount: any;\r\n    msAnimationTimingFunction: string;\r\n    msTransitionDelay: string;\r\n    transformStyle: string;\r\n    msWrapFlow: string;\r\n    msFlexPreferredSize: string;\r\n}\r\n\r\ninterface MessageChannel {\r\n    port2: MessagePort;\r\n    port1: MessagePort;\r\n}\r\ndeclare var MessageChannel: {\r\n    prototype: MessageChannel;\r\n    new (): MessageChannel;\r\n}\r\n\r\ninterface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n}\r\ndeclare var SVGFEMergeElement: {\r\n    prototype: SVGFEMergeElement;\r\n    new (): SVGFEMergeElement;\r\n}\r\n\r\ninterface Navigator extends MSFileSaver {\r\n    msMaxTouchPoints: number;\r\n    msPointerEnabled: boolean;\r\n    msManipulationViewsEnabled: boolean;\r\n    msLaunchUri(uri: string, successCallback?: MSLaunchUriCallback, noHandlerCallback?: MSLaunchUriCallback): void;\r\n}\r\n\r\ninterface TransitionEvent extends Event {\r\n    propertyName: string;\r\n    elapsedTime: number;\r\n    initTransitionEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, propertyNameArg: string, elapsedTimeArg: number): void;\r\n}\r\ndeclare var TransitionEvent: {\r\n    prototype: TransitionEvent;\r\n    new (): TransitionEvent;\r\n}\r\n\r\ninterface MediaQueryList {\r\n    matches: boolean;\r\n    media: string;\r\n    addListener(listener: MediaQueryListListener): void;\r\n    removeListener(listener: MediaQueryListListener): void;\r\n}\r\ndeclare var MediaQueryList: {\r\n    prototype: MediaQueryList;\r\n    new (): MediaQueryList;\r\n}\r\n\r\ninterface DOMError {\r\n    name: string;\r\n    toString(): string;\r\n}\r\ndeclare var DOMError: {\r\n    prototype: DOMError;\r\n    new (): DOMError;\r\n}\r\n\r\ninterface CloseEvent extends Event {\r\n    wasClean: boolean;\r\n    reason: string;\r\n    code: number;\r\n    initCloseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, wasCleanArg: boolean, codeArg: number, reasonArg: string): void;\r\n}\r\ndeclare var CloseEvent: {\r\n    prototype: CloseEvent;\r\n    new (): CloseEvent;\r\n}\r\n\r\ninterface WebSocket extends EventTarget {\r\n    protocol: string;\r\n    readyState: number;\r\n    bufferedAmount: number;\r\n    onopen: (ev: Event) => any;\r\n    addEventListener(type: \"open\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    extensions: string;\r\n    onmessage: (ev: any) => any;\r\n    addEventListener(type: \"message\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onclose: (ev: CloseEvent) => any;\r\n    addEventListener(type: \"close\", listener: (ev: CloseEvent) => any, useCapture?: boolean): void;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    binaryType: string;\r\n    url: string;\r\n    close(code?: number, reason?: string): void;\r\n    send(data: any): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    OPEN: number;\r\n    CLOSING: number;\r\n    CONNECTING: number;\r\n    CLOSED: number;\r\n}\r\ndeclare var WebSocket: {\r\n    prototype: WebSocket;\r\n    new (url: string): WebSocket;\r\n    new (url: string, prototcol: string): WebSocket;\r\n    new (url: string, prototcol: string[]): WebSocket;\r\n    OPEN: number;\r\n    CLOSING: number;\r\n    CONNECTING: number;\r\n    CLOSED: number;\r\n}\r\n\r\ninterface SVGFEPointLightElement extends SVGElement {\r\n    y: SVGAnimatedNumber;\r\n    x: SVGAnimatedNumber;\r\n    z: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGFEPointLightElement: {\r\n    prototype: SVGFEPointLightElement;\r\n    new (): SVGFEPointLightElement;\r\n}\r\n\r\ninterface ProgressEvent extends Event {\r\n    loaded: number;\r\n    lengthComputable: boolean;\r\n    total: number;\r\n    initProgressEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, lengthComputableArg: boolean, loadedArg: number, totalArg: number): void;\r\n}\r\ndeclare var ProgressEvent: {\r\n    prototype: ProgressEvent;\r\n    new (): ProgressEvent;\r\n}\r\n\r\ninterface IDBObjectStore {\r\n    indexNames: DOMStringList;\r\n    name: string;\r\n    transaction: IDBTransaction;\r\n    keyPath: string;\r\n    count(key?: any): IDBRequest;\r\n    add(value: any, key?: any): IDBRequest;\r\n    clear(): IDBRequest;\r\n    createIndex(name: string, keyPath: string, optionalParameters?: any): IDBIndex;\r\n    put(value: any, key?: any): IDBRequest;\r\n    openCursor(range?: any, direction?: string): IDBRequest;\r\n    deleteIndex(indexName: string): void;\r\n    index(name: string): IDBIndex;\r\n    get(key: any): IDBRequest;\r\n    delete(key: any): IDBRequest;\r\n}\r\ndeclare var IDBObjectStore: {\r\n    prototype: IDBObjectStore;\r\n    new (): IDBObjectStore;\r\n}\r\n\r\ninterface HTMLCanvasElement {\r\n    msToBlob(): Blob;\r\n}\r\n\r\ninterface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    stdDeviationX: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    stdDeviationY: SVGAnimatedNumber;\r\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\r\n}\r\ndeclare var SVGFEGaussianBlurElement: {\r\n    prototype: SVGFEGaussianBlurElement;\r\n    new (): SVGFEGaussianBlurElement;\r\n}\r\n\r\ninterface SVGFilterPrimitiveStandardAttributes extends SVGStylable {\r\n    y: SVGAnimatedLength;\r\n    width: SVGAnimatedLength;\r\n    x: SVGAnimatedLength;\r\n    height: SVGAnimatedLength;\r\n    result: SVGAnimatedString;\r\n}\r\n\r\ninterface Element {\r\n    msRegionOverflow: string;\r\n    onmspointerdown: (ev: any) => any;\r\n    addEventListener(type: \"mspointerdown\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgotpointercapture: (ev: any) => any;\r\n    addEventListener(type: \"msgotpointercapture\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturedoubletap: (ev: any) => any;\r\n    addEventListener(type: \"msgesturedoubletap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerhover: (ev: any) => any;\r\n    addEventListener(type: \"mspointerhover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturehold: (ev: any) => any;\r\n    addEventListener(type: \"msgesturehold\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointermove: (ev: any) => any;\r\n    addEventListener(type: \"mspointermove\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturechange: (ev: any) => any;\r\n    addEventListener(type: \"msgesturechange\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturestart: (ev: any) => any;\r\n    addEventListener(type: \"msgesturestart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointercancel: (ev: any) => any;\r\n    addEventListener(type: \"mspointercancel\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgestureend: (ev: any) => any;\r\n    addEventListener(type: \"msgestureend\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturetap: (ev: any) => any;\r\n    addEventListener(type: \"msgesturetap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerout: (ev: any) => any;\r\n    addEventListener(type: \"mspointerout\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsinertiastart: (ev: any) => any;\r\n    addEventListener(type: \"msinertiastart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmslostpointercapture: (ev: any) => any;\r\n    addEventListener(type: \"mslostpointercapture\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerover: (ev: any) => any;\r\n    addEventListener(type: \"mspointerover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msContentZoomFactor: number;\r\n    onmspointerup: (ev: any) => any;\r\n    addEventListener(type: \"mspointerup\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msGetRegionContent(): MSRangeCollection;\r\n    msReleasePointerCapture(pointerId: number): void;\r\n    msSetPointerCapture(pointerId: number): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface IDBVersionChangeEvent extends Event {\r\n    newVersion: number;\r\n    oldVersion: number;\r\n}\r\ndeclare var IDBVersionChangeEvent: {\r\n    prototype: IDBVersionChangeEvent;\r\n    new (): IDBVersionChangeEvent;\r\n}\r\n\r\ninterface IDBIndex {\r\n    unique: boolean;\r\n    name: string;\r\n    keyPath: string;\r\n    objectStore: IDBObjectStore;\r\n    count(key?: any): IDBRequest;\r\n    getKey(key: any): IDBRequest;\r\n    openKeyCursor(range?: IDBKeyRange, direction?: string): IDBRequest;\r\n    get(key: any): IDBRequest;\r\n    openCursor(range?: IDBKeyRange, direction?: string): IDBRequest;\r\n}\r\ndeclare var IDBIndex: {\r\n    prototype: IDBIndex;\r\n    new (): IDBIndex;\r\n}\r\n\r\ninterface WheelEvent {\r\n    getCurrentPoint(element: Element): void;\r\n}\r\n\r\ninterface FileList {\r\n    length: number;\r\n    item(index: number): File;\r\n    [index: number]: File;\r\n}\r\ndeclare var FileList: {\r\n    prototype: FileList;\r\n    new (): FileList;\r\n}\r\n\r\ninterface IDBCursor {\r\n    source: any;\r\n    direction: string;\r\n    key: any;\r\n    primaryKey: any;\r\n    advance(count: number): void;\r\n    delete(): IDBRequest;\r\n    continue(key?: any): void;\r\n    update(value: any): IDBRequest;\r\n    PREV: string;\r\n    PREV_NO_DUPLICATE: string;\r\n    NEXT: string;\r\n    NEXT_NO_DUPLICATE: string;\r\n}\r\ndeclare var IDBCursor: {\r\n    prototype: IDBCursor;\r\n    new (): IDBCursor;\r\n    PREV: string;\r\n    PREV_NO_DUPLICATE: string;\r\n    NEXT: string;\r\n    NEXT_NO_DUPLICATE: string;\r\n}\r\n\r\ninterface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    kernelUnitLengthY: SVGAnimatedNumber;\r\n    surfaceScale: SVGAnimatedNumber;\r\n    specularExponent: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    kernelUnitLengthX: SVGAnimatedNumber;\r\n    specularConstant: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGFESpecularLightingElement: {\r\n    prototype: SVGFESpecularLightingElement;\r\n    new (): SVGFESpecularLightingElement;\r\n}\r\n\r\ninterface File extends Blob {\r\n    lastModifiedDate: any;\r\n    name: string;\r\n}\r\ndeclare var File: {\r\n    prototype: File;\r\n    new (): File;\r\n}\r\n\r\ninterface URL {\r\n    revokeObjectURL(url: string): void;\r\n    createObjectURL(object: any, options?: ObjectURLOptions): string;\r\n}\r\ndeclare var URL: URL;\r\n\r\ninterface RangeException {\r\n    name: string;\r\n}\r\n\r\ninterface IDBCursorWithValue extends IDBCursor {\r\n    value: any;\r\n}\r\ndeclare var IDBCursorWithValue: {\r\n    prototype: IDBCursorWithValue;\r\n    new (): IDBCursorWithValue;\r\n}\r\n\r\ninterface HTMLTextAreaElement {\r\n    validationMessage: string;\r\n    autofocus: boolean;\r\n    validity: ValidityState;\r\n    required: boolean;\r\n    maxLength: number;\r\n    willValidate: boolean;\r\n    placeholder: string;\r\n    checkValidity(): boolean;\r\n    setCustomValidity(error: string): void;\r\n}\r\n\r\ninterface XMLHttpRequestEventTarget extends EventTarget {\r\n    onprogress: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    onload: (ev: any) => any;\r\n    addEventListener(type: \"load\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    ontimeout: (ev: any) => any;\r\n    addEventListener(type: \"timeout\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onabort: (ev: any) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onloadstart: (ev: any) => any;\r\n    addEventListener(type: \"loadstart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onloadend: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"loadend\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var XMLHttpRequestEventTarget: {\r\n    prototype: XMLHttpRequestEventTarget;\r\n    new (): XMLHttpRequestEventTarget;\r\n}\r\n\r\ninterface IDBEnvironment {\r\n    msIndexedDB: IDBFactory;\r\n    indexedDB: IDBFactory;\r\n}\r\n\r\ninterface AudioTrackList extends EventTarget {\r\n    length: number;\r\n    onchange: (ev: any) => any;\r\n    addEventListener(type: \"change\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onaddtrack: (ev: TrackEvent) => any;\r\n    addEventListener(type: \"addtrack\", listener: (ev: TrackEvent) => any, useCapture?: boolean): void;\r\n    getTrackById(id: string): AudioTrack;\r\n    item(index: number): AudioTrack;\r\n    [index: number]: AudioTrack;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var AudioTrackList: {\r\n    prototype: AudioTrackList;\r\n    new (): AudioTrackList;\r\n}\r\n\r\ninterface MSBaseReader extends EventTarget {\r\n    onprogress: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    readyState: number;\r\n    onabort: (ev: any) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onloadend: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"loadend\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    onload: (ev: any) => any;\r\n    addEventListener(type: \"load\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onloadstart: (ev: any) => any;\r\n    addEventListener(type: \"loadstart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    result: any;\r\n    abort(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    LOADING: number;\r\n    EMPTY: number;\r\n    DONE: number;\r\n}\r\n\r\ninterface History {\r\n    state: any;\r\n    replaceState(statedata: any, title: string, url?: string): void;\r\n    pushState(statedata: any, title: string, url?: string): void;\r\n}\r\n\r\ninterface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    operator: SVGAnimatedEnumeration;\r\n    radiusX: SVGAnimatedNumber;\r\n    radiusY: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\r\n    SVG_MORPHOLOGY_OPERATOR_ERODE: number;\r\n    SVG_MORPHOLOGY_OPERATOR_DILATE: number;\r\n}\r\ndeclare var SVGFEMorphologyElement: {\r\n    prototype: SVGFEMorphologyElement;\r\n    new (): SVGFEMorphologyElement;\r\n    SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\r\n    SVG_MORPHOLOGY_OPERATOR_ERODE: number;\r\n    SVG_MORPHOLOGY_OPERATOR_DILATE: number;\r\n}\r\n\r\ninterface HTMLSelectElement {\r\n    validationMessage: string;\r\n    autofocus: boolean;\r\n    validity: ValidityState;\r\n    required: boolean;\r\n    willValidate: boolean;\r\n    checkValidity(): boolean;\r\n    setCustomValidity(error: string): void;\r\n}\r\n\r\ninterface CSSRule {\r\n    KEYFRAMES_RULE: number;\r\n    KEYFRAME_RULE: number;\r\n    VIEWPORT_RULE: number;\r\n}\r\n//declare var CSSRule: {\r\n//    prototype: CSSRule;\r\n//    KEYFRAMES_RULE: number;\r\n//    KEYFRAME_RULE: number;\r\n//    VIEWPORT_RULE: number;\r\n//}\r\n\r\ninterface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {\r\n}\r\ndeclare var SVGFEFuncRElement: {\r\n    prototype: SVGFEFuncRElement;\r\n    new (): SVGFEFuncRElement;\r\n}\r\n\r\ninterface WindowTimersExtension {\r\n    msSetImmediate(expression: any, ...args: any[]): number;\r\n    clearImmediate(handle: number): void;\r\n    msClearImmediate(handle: number): void;\r\n    setImmediate(expression: any, ...args: any[]): number;\r\n}\r\n\r\ninterface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    in2: SVGAnimatedString;\r\n    xChannelSelector: SVGAnimatedEnumeration;\r\n    yChannelSelector: SVGAnimatedEnumeration;\r\n    scale: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    SVG_CHANNEL_B: number;\r\n    SVG_CHANNEL_R: number;\r\n    SVG_CHANNEL_G: number;\r\n    SVG_CHANNEL_UNKNOWN: number;\r\n    SVG_CHANNEL_A: number;\r\n}\r\ndeclare var SVGFEDisplacementMapElement: {\r\n    prototype: SVGFEDisplacementMapElement;\r\n    new (): SVGFEDisplacementMapElement;\r\n    SVG_CHANNEL_B: number;\r\n    SVG_CHANNEL_R: number;\r\n    SVG_CHANNEL_G: number;\r\n    SVG_CHANNEL_UNKNOWN: number;\r\n    SVG_CHANNEL_A: number;\r\n}\r\n\r\ninterface AnimationEvent extends Event {\r\n    animationName: string;\r\n    elapsedTime: number;\r\n    initAnimationEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, animationNameArg: string, elapsedTimeArg: number): void;\r\n}\r\ndeclare var AnimationEvent: {\r\n    prototype: AnimationEvent;\r\n    new (): AnimationEvent;\r\n}\r\n\r\ninterface SVGComponentTransferFunctionElement extends SVGElement {\r\n    tableValues: SVGAnimatedNumberList;\r\n    slope: SVGAnimatedNumber;\r\n    type: SVGAnimatedEnumeration;\r\n    exponent: SVGAnimatedNumber;\r\n    amplitude: SVGAnimatedNumber;\r\n    intercept: SVGAnimatedNumber;\r\n    offset: SVGAnimatedNumber;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\r\n}\r\ndeclare var SVGComponentTransferFunctionElement: {\r\n    prototype: SVGComponentTransferFunctionElement;\r\n    new (): SVGComponentTransferFunctionElement;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\r\n    SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\r\n}\r\n\r\ninterface MSRangeCollection {\r\n    length: number;\r\n    item(index: number): Range;\r\n    [index: number]: Range;\r\n}\r\ndeclare var MSRangeCollection: {\r\n    prototype: MSRangeCollection;\r\n    new (): MSRangeCollection;\r\n}\r\n\r\ninterface SVGFEDistantLightElement extends SVGElement {\r\n    azimuth: SVGAnimatedNumber;\r\n    elevation: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGFEDistantLightElement: {\r\n    prototype: SVGFEDistantLightElement;\r\n    new (): SVGFEDistantLightElement;\r\n}\r\n\r\ninterface SVGException {\r\n    name: string;\r\n}\r\n\r\ninterface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {\r\n}\r\ndeclare var SVGFEFuncBElement: {\r\n    prototype: SVGFEFuncBElement;\r\n    new (): SVGFEFuncBElement;\r\n}\r\n\r\ninterface IDBKeyRange {\r\n    upper: any;\r\n    upperOpen: boolean;\r\n    lower: any;\r\n    lowerOpen: boolean;\r\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\r\n    only(value: any): IDBKeyRange;\r\n    lowerBound(bound: any, open?: boolean): IDBKeyRange;\r\n    upperBound(bound: any, open?: boolean): IDBKeyRange;\r\n}\r\ndeclare var IDBKeyRange: {\r\n    prototype: IDBKeyRange;\r\n    new (): IDBKeyRange;\r\n}\r\n\r\ninterface WindowConsole {\r\n    console: Console;\r\n}\r\n\r\ninterface IDBTransaction extends EventTarget {\r\n    oncomplete: (ev: Event) => any;\r\n    addEventListener(type: \"complete\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    db: IDBDatabase;\r\n    mode: string;\r\n    error: DOMError;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    onabort: (ev: any) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    abort(): void;\r\n    objectStore(name: string): IDBObjectStore;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    READ_ONLY: string;\r\n    VERSION_CHANGE: string;\r\n    READ_WRITE: string;\r\n}\r\ndeclare var IDBTransaction: {\r\n    prototype: IDBTransaction;\r\n    new (): IDBTransaction;\r\n    READ_ONLY: string;\r\n    VERSION_CHANGE: string;\r\n    READ_WRITE: string;\r\n}\r\n\r\ninterface AudioTrack {\r\n    kind: string;\r\n    language: string;\r\n    id: string;\r\n    label: string;\r\n    enabled: boolean;\r\n}\r\ndeclare var AudioTrack: {\r\n    prototype: AudioTrack;\r\n    new (): AudioTrack;\r\n}\r\n\r\ninterface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    orderY: SVGAnimatedInteger;\r\n    kernelUnitLengthY: SVGAnimatedNumber;\r\n    orderX: SVGAnimatedInteger;\r\n    preserveAlpha: SVGAnimatedBoolean;\r\n    kernelMatrix: SVGAnimatedNumberList;\r\n    edgeMode: SVGAnimatedEnumeration;\r\n    kernelUnitLengthX: SVGAnimatedNumber;\r\n    bias: SVGAnimatedNumber;\r\n    targetX: SVGAnimatedInteger;\r\n    targetY: SVGAnimatedInteger;\r\n    divisor: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    SVG_EDGEMODE_WRAP: number;\r\n    SVG_EDGEMODE_DUPLICATE: number;\r\n    SVG_EDGEMODE_UNKNOWN: number;\r\n    SVG_EDGEMODE_NONE: number;\r\n}\r\ndeclare var SVGFEConvolveMatrixElement: {\r\n    prototype: SVGFEConvolveMatrixElement;\r\n    new (): SVGFEConvolveMatrixElement;\r\n    SVG_EDGEMODE_WRAP: number;\r\n    SVG_EDGEMODE_DUPLICATE: number;\r\n    SVG_EDGEMODE_UNKNOWN: number;\r\n    SVG_EDGEMODE_NONE: number;\r\n}\r\n\r\ninterface TextTrackCueList {\r\n    length: number;\r\n    item(index: number): TextTrackCue;\r\n    [index: number]: TextTrackCue;\r\n    getCueById(id: string): TextTrackCue;\r\n}\r\ndeclare var TextTrackCueList: {\r\n    prototype: TextTrackCueList;\r\n    new (): TextTrackCueList;\r\n}\r\n\r\ninterface CSSKeyframesRule extends CSSRule {\r\n    name: string;\r\n    cssRules: CSSRuleList;\r\n    findRule(rule: string): CSSKeyframeRule;\r\n    deleteRule(rule: string): void;\r\n    appendRule(rule: string): void;\r\n}\r\ndeclare var CSSKeyframesRule: {\r\n    prototype: CSSKeyframesRule;\r\n    new (): CSSKeyframesRule;\r\n}\r\n\r\ninterface Window extends WindowBase64, IDBEnvironment, WindowConsole {\r\n    onmspointerdown: (ev: any) => any;\r\n    addEventListener(type: \"mspointerdown\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    animationStartTime: number;\r\n    onmsgesturedoubletap: (ev: any) => any;\r\n    addEventListener(type: \"msgesturedoubletap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerhover: (ev: any) => any;\r\n    addEventListener(type: \"mspointerhover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturehold: (ev: any) => any;\r\n    addEventListener(type: \"msgesturehold\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointermove: (ev: any) => any;\r\n    addEventListener(type: \"mspointermove\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturechange: (ev: any) => any;\r\n    addEventListener(type: \"msgesturechange\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturestart: (ev: any) => any;\r\n    addEventListener(type: \"msgesturestart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointercancel: (ev: any) => any;\r\n    addEventListener(type: \"mspointercancel\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgestureend: (ev: any) => any;\r\n    addEventListener(type: \"msgestureend\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturetap: (ev: any) => any;\r\n    addEventListener(type: \"msgesturetap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerout: (ev: any) => any;\r\n    addEventListener(type: \"mspointerout\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msAnimationStartTime: number;\r\n    applicationCache: ApplicationCache;\r\n    onmsinertiastart: (ev: any) => any;\r\n    addEventListener(type: \"msinertiastart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerover: (ev: any) => any;\r\n    addEventListener(type: \"mspointerover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onpopstate: (ev: PopStateEvent) => any;\r\n    addEventListener(type: \"popstate\", listener: (ev: PopStateEvent) => any, useCapture?: boolean): void;\r\n    onmspointerup: (ev: any) => any;\r\n    addEventListener(type: \"mspointerup\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msCancelRequestAnimationFrame(handle: number): void;\r\n    matchMedia(mediaQuery: string): MediaQueryList;\r\n    cancelAnimationFrame(handle: number): void;\r\n    msIsStaticHTML(html: string): boolean;\r\n    msMatchMedia(mediaQuery: string): MediaQueryList;\r\n    requestAnimationFrame(callback: FrameRequestCallback): number;\r\n    msRequestAnimationFrame(callback: FrameRequestCallback): number;\r\n}\r\n\r\ninterface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    baseFrequencyX: SVGAnimatedNumber;\r\n    numOctaves: SVGAnimatedInteger;\r\n    type: SVGAnimatedEnumeration;\r\n    baseFrequencyY: SVGAnimatedNumber;\r\n    stitchTiles: SVGAnimatedEnumeration;\r\n    seed: SVGAnimatedNumber;\r\n    SVG_STITCHTYPE_UNKNOWN: number;\r\n    SVG_STITCHTYPE_NOSTITCH: number;\r\n    SVG_TURBULENCE_TYPE_UNKNOWN: number;\r\n    SVG_TURBULENCE_TYPE_TURBULENCE: number;\r\n    SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\r\n    SVG_STITCHTYPE_STITCH: number;\r\n}\r\ndeclare var SVGFETurbulenceElement: {\r\n    prototype: SVGFETurbulenceElement;\r\n    new (): SVGFETurbulenceElement;\r\n    SVG_STITCHTYPE_UNKNOWN: number;\r\n    SVG_STITCHTYPE_NOSTITCH: number;\r\n    SVG_TURBULENCE_TYPE_UNKNOWN: number;\r\n    SVG_TURBULENCE_TYPE_TURBULENCE: number;\r\n    SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\r\n    SVG_STITCHTYPE_STITCH: number;\r\n}\r\n\r\ninterface TextTrackList {\r\n    length: number;\r\n    item(index: number): TextTrack;\r\n    [index: number]: TextTrack;\r\n}\r\ndeclare var TextTrackList: {\r\n    prototype: TextTrackList;\r\n    new (): TextTrackList;\r\n}\r\n\r\ninterface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {\r\n}\r\ndeclare var SVGFEFuncGElement: {\r\n    prototype: SVGFEFuncGElement;\r\n    new (): SVGFEFuncGElement;\r\n}\r\n\r\ninterface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    in1: SVGAnimatedString;\r\n    type: SVGAnimatedEnumeration;\r\n    values: SVGAnimatedNumberList;\r\n    SVG_FECOLORMATRIX_TYPE_SATURATE: number;\r\n    SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\r\n    SVG_FECOLORMATRIX_TYPE_MATRIX: number;\r\n    SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\r\n    SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\r\n}\r\ndeclare var SVGFEColorMatrixElement: {\r\n    prototype: SVGFEColorMatrixElement;\r\n    new (): SVGFEColorMatrixElement;\r\n    SVG_FECOLORMATRIX_TYPE_SATURATE: number;\r\n    SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\r\n    SVG_FECOLORMATRIX_TYPE_MATRIX: number;\r\n    SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\r\n    SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\r\n}\r\n\r\ninterface Console {\r\n    info(message?: any, ...optionalParams: any[]): void;\r\n    profile(reportName?: string): void;\r\n    assert(test?: boolean, message?: string, ...optionalParams: any[]): void;\r\n    msIsIndependentlyComposed(element: Element): boolean;\r\n    clear(): void;\r\n    dir(value?: any, ...optionalParams: any[]): void;\r\n    warn(message?: any, ...optionalParams: any[]): void;\r\n    error(message?: any, ...optionalParams: any[]): void;\r\n    log(message?: any, ...optionalParams: any[]): void;\r\n    profileEnd(): void;\r\n}\r\ndeclare var Console: {\r\n    prototype: Console;\r\n    new (): Console;\r\n}\r\n\r\ninterface SVGFESpotLightElement extends SVGElement {\r\n    pointsAtY: SVGAnimatedNumber;\r\n    y: SVGAnimatedNumber;\r\n    limitingConeAngle: SVGAnimatedNumber;\r\n    specularExponent: SVGAnimatedNumber;\r\n    x: SVGAnimatedNumber;\r\n    pointsAtZ: SVGAnimatedNumber;\r\n    z: SVGAnimatedNumber;\r\n    pointsAtX: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGFESpotLightElement: {\r\n    prototype: SVGFESpotLightElement;\r\n    new (): SVGFESpotLightElement;\r\n}\r\n\r\ninterface HTMLImageElement {\r\n    msPlayToPrimary: boolean;\r\n    msPlayToDisabled: boolean;\r\n    msPlayToSource: any;\r\n}\r\n\r\ninterface WindowBase64 {\r\n    btoa(rawString: string): string;\r\n    atob(encodedString: string): string;\r\n}\r\n\r\ninterface IDBDatabase extends EventTarget {\r\n    version: string;\r\n    name: string;\r\n    objectStoreNames: DOMStringList;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    onabort: (ev: any) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    createObjectStore(name: string, optionalParameters?: any): IDBObjectStore;\r\n    close(): void;\r\n    transaction(storeNames: any, mode?: string): IDBTransaction;\r\n    deleteObjectStore(name: string): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var IDBDatabase: {\r\n    prototype: IDBDatabase;\r\n    new (): IDBDatabase;\r\n}\r\n\r\ninterface DOMStringList {\r\n    length: number;\r\n    contains(str: string): boolean;\r\n    item(index: number): string;\r\n    [index: number]: string;\r\n}\r\ndeclare var DOMStringList: {\r\n    prototype: DOMStringList;\r\n    new (): DOMStringList;\r\n}\r\n\r\ninterface HTMLButtonElement {\r\n    validationMessage: string;\r\n    formTarget: string;\r\n    willValidate: boolean;\r\n    formAction: string;\r\n    autofocus: boolean;\r\n    validity: ValidityState;\r\n    formNoValidate: string;\r\n    formEnctype: string;\r\n    formMethod: string;\r\n    checkValidity(): boolean;\r\n    setCustomValidity(error: string): void;\r\n}\r\n\r\ninterface IDBOpenDBRequest extends IDBRequest {\r\n    onupgradeneeded: (ev: IDBVersionChangeEvent) => any;\r\n    addEventListener(type: \"upgradeneeded\", listener: (ev: IDBVersionChangeEvent) => any, useCapture?: boolean): void;\r\n    onblocked: (ev: Event) => any;\r\n    addEventListener(type: \"blocked\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var IDBOpenDBRequest: {\r\n    prototype: IDBOpenDBRequest;\r\n    new (): IDBOpenDBRequest;\r\n}\r\n\r\ninterface HTMLProgressElement extends HTMLElement {\r\n    value: number;\r\n    max: number;\r\n    position: number;\r\n    form: HTMLFormElement;\r\n}\r\ndeclare var HTMLProgressElement: {\r\n    prototype: HTMLProgressElement;\r\n    new (): HTMLProgressElement;\r\n}\r\n\r\ninterface MSLaunchUriCallback {\r\n    (): void;\r\n}\r\n\r\ninterface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    dy: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    dx: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGFEOffsetElement: {\r\n    prototype: SVGFEOffsetElement;\r\n    new (): SVGFEOffsetElement;\r\n}\r\n\r\ninterface HTMLFormElement {\r\n    autocomplete: string;\r\n    noValidate: boolean;\r\n    checkValidity(): boolean;\r\n}\r\n\r\ninterface MSUnsafeFunctionCallback {\r\n    (): any;\r\n}\r\n\r\ninterface Document {\r\n    onmspointerdown: (ev: any) => any;\r\n    addEventListener(type: \"mspointerdown\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msHidden: boolean;\r\n    msVisibilityState: string;\r\n    onmsgesturedoubletap: (ev: any) => any;\r\n    addEventListener(type: \"msgesturedoubletap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    visibilityState: string;\r\n    onmsmanipulationstatechanged: (ev: any) => any;\r\n    addEventListener(type: \"msmanipulationstatechanged\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerhover: (ev: any) => any;\r\n    addEventListener(type: \"mspointerhover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmscontentzoom: (ev: any) => any;\r\n    addEventListener(type: \"mscontentzoom\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointermove: (ev: any) => any;\r\n    addEventListener(type: \"mspointermove\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturehold: (ev: any) => any;\r\n    addEventListener(type: \"msgesturehold\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturechange: (ev: any) => any;\r\n    addEventListener(type: \"msgesturechange\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturestart: (ev: any) => any;\r\n    addEventListener(type: \"msgesturestart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointercancel: (ev: any) => any;\r\n    addEventListener(type: \"mspointercancel\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgestureend: (ev: any) => any;\r\n    addEventListener(type: \"msgestureend\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsgesturetap: (ev: any) => any;\r\n    addEventListener(type: \"msgesturetap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerout: (ev: any) => any;\r\n    addEventListener(type: \"mspointerout\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmsinertiastart: (ev: any) => any;\r\n    addEventListener(type: \"msinertiastart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msCSSOMElementFloatMetrics: boolean;\r\n    onmspointerover: (ev: any) => any;\r\n    addEventListener(type: \"mspointerover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    hidden: boolean;\r\n    onmspointerup: (ev: any) => any;\r\n    addEventListener(type: \"mspointerup\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msElementsFromPoint(x: number, y: number): NodeList;\r\n    msElementsFromRect(left: number, top: number, width: number, height: number): NodeList;\r\n    clear(): void;\r\n}\r\n\r\ninterface MessageEvent extends Event {\r\n    ports: any;\r\n}\r\n\r\ninterface HTMLScriptElement {\r\n    async: boolean;\r\n}\r\n\r\ninterface HTMLMediaElement {\r\n    msAudioCategory: string;\r\n    msRealTime: boolean;\r\n    msPlayToPrimary: boolean;\r\n    textTracks: TextTrackList;\r\n    msPlayToDisabled: boolean;\r\n    audioTracks: AudioTrackList;\r\n    msPlayToSource: any;\r\n    msAudioDeviceType: string;\r\n    msClearEffects(): void;\r\n    msSetMediaProtectionManager(mediaProtectionManager?: any): void;\r\n    msInsertAudioEffect(activatableClassId: string, effectRequired: boolean, config?: any): void;\r\n}\r\n\r\ninterface TextTrack extends EventTarget {\r\n    language: string;\r\n    mode: any;\r\n    readyState: number;\r\n    activeCues: TextTrackCueList;\r\n    cues: TextTrackCueList;\r\n    oncuechange: (ev: Event) => any;\r\n    addEventListener(type: \"cuechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    kind: string;\r\n    onload: (ev: any) => any;\r\n    addEventListener(type: \"load\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    label: string;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    ERROR: number;\r\n    SHOWING: number;\r\n    LOADING: number;\r\n    LOADED: number;\r\n    NONE: number;\r\n    HIDDEN: number;\r\n    DISABLED: number;\r\n}\r\ndeclare var TextTrack: {\r\n    prototype: TextTrack;\r\n    new (): TextTrack;\r\n    ERROR: number;\r\n    SHOWING: number;\r\n    LOADING: number;\r\n    LOADED: number;\r\n    NONE: number;\r\n    HIDDEN: number;\r\n    DISABLED: number;\r\n}\r\n\r\ninterface MediaQueryListListener {\r\n    (mql: MediaQueryList): void;\r\n}\r\n\r\ninterface IDBRequest extends EventTarget {\r\n    source: any;\r\n    onsuccess: (ev: Event) => any;\r\n    addEventListener(type: \"success\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    error: DOMError;\r\n    transaction: IDBTransaction;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    readyState: string;\r\n    result: any;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var IDBRequest: {\r\n    prototype: IDBRequest;\r\n    new (): IDBRequest;\r\n}\r\n\r\ninterface MessagePort extends EventTarget {\r\n    onmessage: (ev: any) => any;\r\n    addEventListener(type: \"message\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    close(): void;\r\n    postMessage(message: any, ports?: any): void;\r\n    start(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var MessagePort: {\r\n    prototype: MessagePort;\r\n    new (): MessagePort;\r\n}\r\n\r\ninterface FileReader extends MSBaseReader {\r\n    error: DOMError;\r\n    readAsArrayBuffer(blob: Blob): void;\r\n    readAsDataURL(blob: Blob): void;\r\n    readAsText(blob: Blob, encoding?: string): void;\r\n}\r\ndeclare var FileReader: {\r\n    prototype: FileReader;\r\n    new (): FileReader;\r\n}\r\n\r\ninterface BlobPropertyBag {\r\n    type?: string;\r\n    endings?: string;\r\n}\r\n\r\ninterface Blob {\r\n    type: string;\r\n    size: number;\r\n    msDetachStream(): any;\r\n    slice(start?: number, end?: number, contentType?: string): Blob;\r\n    close(): void;\r\n    msClose(): void;\r\n}\r\ndeclare var Blob: {\r\n    prototype: Blob;\r\n    new (blobParts?: any[], options?: BlobPropertyBag): Blob;\r\n}\r\n\r\ninterface ApplicationCache extends EventTarget {\r\n    status: number;\r\n    ondownloading: (ev: Event) => any;\r\n    addEventListener(type: \"downloading\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onprogress: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    onupdateready: (ev: Event) => any;\r\n    addEventListener(type: \"updateready\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    oncached: (ev: Event) => any;\r\n    addEventListener(type: \"cached\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onobsolete: (ev: Event) => any;\r\n    addEventListener(type: \"obsolete\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    onchecking: (ev: Event) => any;\r\n    addEventListener(type: \"checking\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    onnoupdate: (ev: Event) => any;\r\n    addEventListener(type: \"noupdate\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    swapCache(): void;\r\n    abort(): void;\r\n    update(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    CHECKING: number;\r\n    UNCACHED: number;\r\n    UPDATEREADY: number;\r\n    DOWNLOADING: number;\r\n    IDLE: number;\r\n    OBSOLETE: number;\r\n}\r\ndeclare var ApplicationCache: {\r\n    prototype: ApplicationCache;\r\n    new (): ApplicationCache;\r\n    CHECKING: number;\r\n    UNCACHED: number;\r\n    UPDATEREADY: number;\r\n    DOWNLOADING: number;\r\n    IDLE: number;\r\n    OBSOLETE: number;\r\n}\r\n\r\ninterface FrameRequestCallback {\r\n    (time: number): void;\r\n}\r\n\r\ninterface XMLHttpRequest {\r\n    response: any;\r\n    withCredentials: boolean;\r\n    onprogress: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    onabort: (ev: any) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    responseType: string;\r\n    onloadend: (ev: ProgressEvent) => any;\r\n    addEventListener(type: \"loadend\", listener: (ev: ProgressEvent) => any, useCapture?: boolean): void;\r\n    upload: XMLHttpRequestEventTarget;\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    onloadstart: (ev: any) => any;\r\n    addEventListener(type: \"loadstart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface PopStateEvent extends Event {\r\n    state: any;\r\n    initPopStateEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, stateArg: any): void;\r\n}\r\ndeclare var PopStateEvent: {\r\n    prototype: PopStateEvent;\r\n    new (): PopStateEvent;\r\n}\r\n\r\ninterface CSSKeyframeRule extends CSSRule {\r\n    keyText: string;\r\n    style: CSSStyleDeclaration;\r\n}\r\ndeclare var CSSKeyframeRule: {\r\n    prototype: CSSKeyframeRule;\r\n    new (): CSSKeyframeRule;\r\n}\r\n\r\ninterface MSFileSaver {\r\n    msSaveBlob(blob: any, defaultName?: string): boolean;\r\n    msSaveOrOpenBlob(blob: any, defaultName?: string): boolean;\r\n}\r\n\r\ninterface MSStream {\r\n    type: string;\r\n    msDetachStream(): any;\r\n    msClose(): void;\r\n}\r\ndeclare var MSStream: {\r\n    prototype: MSStream;\r\n    new (): MSStream;\r\n}\r\n\r\ninterface MediaError {\r\n    msExtendedCode: number;\r\n}\r\n\r\ninterface HTMLFieldSetElement {\r\n    validationMessage: string;\r\n    validity: ValidityState;\r\n    willValidate: boolean;\r\n    checkValidity(): boolean;\r\n    setCustomValidity(error: string): void;\r\n}\r\n\r\ninterface MSBlobBuilder {\r\n    append(data: any, endings?: string): void;\r\n    getBlob(contentType?: string): Blob;\r\n}\r\ndeclare var MSBlobBuilder: {\r\n    prototype: MSBlobBuilder;\r\n    new (): MSBlobBuilder;\r\n}\r\n\r\ninterface HTMLElement {\r\n    onmscontentzoom: (ev: any) => any;\r\n    addEventListener(type: \"mscontentzoom\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    oncuechange: (ev: Event) => any;\r\n    addEventListener(type: \"cuechange\", listener: (ev: Event) => any, useCapture?: boolean): void;\r\n    spellcheck: boolean;\r\n    classList: DOMTokenList;\r\n    onmsmanipulationstatechanged: (ev: any) => any;\r\n    addEventListener(type: \"msmanipulationstatechanged\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    draggable: boolean;\r\n}\r\n\r\ninterface DataTransfer {\r\n    types: DOMStringList;\r\n    files: FileList;\r\n}\r\n\r\ninterface DOMSettableTokenList extends DOMTokenList {\r\n    value: string;\r\n}\r\ndeclare var DOMSettableTokenList: {\r\n    prototype: DOMSettableTokenList;\r\n    new (): DOMSettableTokenList;\r\n}\r\n\r\ninterface IDBFactory {\r\n    open(name: string, version?: number): IDBOpenDBRequest;\r\n    cmp(first: any, second: any): number;\r\n    deleteDatabase(name: string): IDBOpenDBRequest;\r\n}\r\ndeclare var IDBFactory: {\r\n    prototype: IDBFactory;\r\n    new (): IDBFactory;\r\n}\r\n\r\ninterface Range {\r\n    createContextualFragment(fragment: string): DocumentFragment;\r\n}\r\n\r\ninterface HTMLObjectElement {\r\n    validationMessage: string;\r\n    validity: ValidityState;\r\n    willValidate: boolean;\r\n    checkValidity(): boolean;\r\n    setCustomValidity(error: string): void;\r\n}\r\n\r\ninterface MSPointerEvent extends MouseEvent {\r\n    width: number;\r\n    rotation: number;\r\n    pressure: number;\r\n    pointerType: any;\r\n    isPrimary: boolean;\r\n    tiltY: number;\r\n    height: number;\r\n    intermediatePoints: any;\r\n    currentPoint: any;\r\n    tiltX: number;\r\n    hwTimestamp: number;\r\n    pointerId: number;\r\n    initPointerEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget, offsetXArg: number, offsetYArg: number, widthArg: number, heightArg: number, pressure: number, rotation: number, tiltX: number, tiltY: number, pointerIdArg: number, pointerType: any, hwTimestampArg: number, isPrimary: boolean): void;\r\n    getCurrentPoint(element: Element): void;\r\n    getIntermediatePoints(element: Element): void;\r\n    MSPOINTER_TYPE_PEN: number;\r\n    MSPOINTER_TYPE_MOUSE: number;\r\n    MSPOINTER_TYPE_TOUCH: number;\r\n}\r\ndeclare var MSPointerEvent: {\r\n    prototype: MSPointerEvent;\r\n    new (): MSPointerEvent;\r\n    MSPOINTER_TYPE_PEN: number;\r\n    MSPOINTER_TYPE_MOUSE: number;\r\n    MSPOINTER_TYPE_TOUCH: number;\r\n}\r\n\r\ninterface DOMException {\r\n    name: string;\r\n    INVALID_NODE_TYPE_ERR: number;\r\n    DATA_CLONE_ERR: number;\r\n    TIMEOUT_ERR: number;\r\n}\r\n//declare var DOMException: {\r\n//    prototype: DOMException;\r\n//    INVALID_NODE_TYPE_ERR: number;\r\n//    DATA_CLONE_ERR: number;\r\n//    TIMEOUT_ERR: number;\r\n//}\r\n\r\ninterface MSManipulationEvent extends UIEvent {\r\n    lastState: number;\r\n    currentState: number;\r\n    initMSManipulationEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, lastState: number, currentState: number): void;\r\n    MS_MANIPULATION_STATE_STOPPED: number;\r\n    MS_MANIPULATION_STATE_ACTIVE: number;\r\n    MS_MANIPULATION_STATE_INERTIA: number;\r\n}\r\ndeclare var MSManipulationEvent: {\r\n    prototype: MSManipulationEvent;\r\n    new (): MSManipulationEvent;\r\n    MS_MANIPULATION_STATE_STOPPED: number;\r\n    MS_MANIPULATION_STATE_ACTIVE: number;\r\n    MS_MANIPULATION_STATE_INERTIA: number;\r\n}\r\n\r\ninterface FormData {\r\n    append(name: any, value: any, blobName?: string): void;\r\n}\r\ndeclare var FormData: {\r\n    prototype: FormData;\r\n    new (form?: HTMLFormElement): FormData;\r\n}\r\n\r\ninterface HTMLDataListElement extends HTMLElement {\r\n    options: HTMLCollection;\r\n}\r\ndeclare var HTMLDataListElement: {\r\n    prototype: HTMLDataListElement;\r\n    new (): HTMLDataListElement;\r\n}\r\n\r\ninterface SVGFEImageElement extends SVGElement, SVGLangSpace, SVGFilterPrimitiveStandardAttributes, SVGURIReference, SVGExternalResourcesRequired {\r\n    preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\r\n}\r\ndeclare var SVGFEImageElement: {\r\n    prototype: SVGFEImageElement;\r\n    new (): SVGFEImageElement;\r\n}\r\n\r\ninterface AbstractWorker extends EventTarget {\r\n    onerror: (ev: ErrorEvent) => any;\r\n    addEventListener(type: \"error\", listener: (ev: ErrorEvent) => any, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    operator: SVGAnimatedEnumeration;\r\n    in2: SVGAnimatedString;\r\n    k2: SVGAnimatedNumber;\r\n    k1: SVGAnimatedNumber;\r\n    k3: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    k4: SVGAnimatedNumber;\r\n    SVG_FECOMPOSITE_OPERATOR_OUT: number;\r\n    SVG_FECOMPOSITE_OPERATOR_OVER: number;\r\n    SVG_FECOMPOSITE_OPERATOR_XOR: number;\r\n    SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\r\n    SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\r\n    SVG_FECOMPOSITE_OPERATOR_IN: number;\r\n    SVG_FECOMPOSITE_OPERATOR_ATOP: number;\r\n}\r\ndeclare var SVGFECompositeElement: {\r\n    prototype: SVGFECompositeElement;\r\n    new (): SVGFECompositeElement;\r\n    SVG_FECOMPOSITE_OPERATOR_OUT: number;\r\n    SVG_FECOMPOSITE_OPERATOR_OVER: number;\r\n    SVG_FECOMPOSITE_OPERATOR_XOR: number;\r\n    SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\r\n    SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\r\n    SVG_FECOMPOSITE_OPERATOR_IN: number;\r\n    SVG_FECOMPOSITE_OPERATOR_ATOP: number;\r\n}\r\n\r\ninterface ValidityState {\r\n    customError: boolean;\r\n    valueMissing: boolean;\r\n    stepMismatch: boolean;\r\n    rangeUnderflow: boolean;\r\n    rangeOverflow: boolean;\r\n    typeMismatch: boolean;\r\n    patternMismatch: boolean;\r\n    tooLong: boolean;\r\n    valid: boolean;\r\n}\r\ndeclare var ValidityState: {\r\n    prototype: ValidityState;\r\n    new (): ValidityState;\r\n}\r\n\r\ninterface HTMLTrackElement extends HTMLElement {\r\n    kind: string;\r\n    src: string;\r\n    srclang: string;\r\n    track: TextTrack;\r\n    label: string;\r\n    default: boolean;\r\n}\r\ndeclare var HTMLTrackElement: {\r\n    prototype: HTMLTrackElement;\r\n    new (): HTMLTrackElement;\r\n}\r\n\r\ninterface MSApp {\r\n    createFileFromStorageFile(storageFile: any): File;\r\n    createBlobFromRandomAccessStream(type: string, seeker: any): Blob;\r\n    createStreamFromInputStream(type: string, inputStream: any): MSStream;\r\n    terminateApp(exceptionObject: any): void;\r\n    createDataPackage(object: any): any;\r\n    execUnsafeLocalFunction(unsafeFunction: MSUnsafeFunctionCallback): any;\r\n    getHtmlPrintDocumentSource(htmlDoc: any): any;\r\n    addPublicLocalApplicationUri(uri: string): void;\r\n    createDataPackageFromSelection(): any;\r\n}\r\ndeclare var MSApp: MSApp;\r\n\r\ninterface HTMLVideoElement {\r\n    msIsStereo3D: boolean;\r\n    msStereo3DPackingMode: string;\r\n    onMSVideoOptimalLayoutChanged: (ev: any) => any;\r\n    addEventListener(type: \"MSVideoOptimalLayoutChanged\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onMSVideoFrameStepCompleted: (ev: any) => any;\r\n    addEventListener(type: \"MSVideoFrameStepCompleted\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msStereo3DRenderMode: string;\r\n    msIsLayoutOptimalForPlayback: boolean;\r\n    msHorizontalMirror: boolean;\r\n    onMSVideoFormatChanged: (ev: any) => any;\r\n    addEventListener(type: \"MSVideoFormatChanged\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msZoom: boolean;\r\n    msInsertVideoEffect(activatableClassId: string, effectRequired: boolean, config?: any): void;\r\n    msSetVideoRectangle(left: number, top: number, right: number, bottom: number): void;\r\n    msFrameStep(forward: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    in1: SVGAnimatedString;\r\n}\r\ndeclare var SVGFEComponentTransferElement: {\r\n    prototype: SVGFEComponentTransferElement;\r\n    new (): SVGFEComponentTransferElement;\r\n}\r\n\r\ninterface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\r\n    kernelUnitLengthY: SVGAnimatedNumber;\r\n    surfaceScale: SVGAnimatedNumber;\r\n    in1: SVGAnimatedString;\r\n    kernelUnitLengthX: SVGAnimatedNumber;\r\n    diffuseConstant: SVGAnimatedNumber;\r\n}\r\ndeclare var SVGFEDiffuseLightingElement: {\r\n    prototype: SVGFEDiffuseLightingElement;\r\n    new (): SVGFEDiffuseLightingElement;\r\n}\r\n\r\ninterface MSCSSMatrix {\r\n    m24: number;\r\n    m34: number;\r\n    a: number;\r\n    d: number;\r\n    m32: number;\r\n    m41: number;\r\n    m11: number;\r\n    f: number;\r\n    e: number;\r\n    m23: number;\r\n    m14: number;\r\n    m33: number;\r\n    m22: number;\r\n    m21: number;\r\n    c: number;\r\n    m12: number;\r\n    b: number;\r\n    m42: number;\r\n    m31: number;\r\n    m43: number;\r\n    m13: number;\r\n    m44: number;\r\n    multiply(secondMatrix: MSCSSMatrix): MSCSSMatrix;\r\n    skewY(angle: number): MSCSSMatrix;\r\n    setMatrixValue(value: string): void;\r\n    inverse(): MSCSSMatrix;\r\n    rotateAxisAngle(x: number, y: number, z: number, angle: number): MSCSSMatrix;\r\n    toString(): string;\r\n    rotate(angleX: number, angleY?: number, angleZ?: number): MSCSSMatrix;\r\n    translate(x: number, y: number, z?: number): MSCSSMatrix;\r\n    scale(scaleX: number, scaleY?: number, scaleZ?: number): MSCSSMatrix;\r\n    skewX(angle: number): MSCSSMatrix;\r\n}\r\ndeclare var MSCSSMatrix: {\r\n    prototype: MSCSSMatrix;\r\n    new (text?: string): MSCSSMatrix;\r\n}\r\n\r\ninterface Worker extends AbstractWorker {\r\n    onmessage: (ev: any) => any;\r\n    addEventListener(type: \"message\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    postMessage(message: any, ports?: any): void;\r\n    terminate(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var Worker: {\r\n    prototype: Worker;\r\n    new (stringUrl: string): Worker;\r\n}\r\n\r\ninterface HTMLIFrameElement {\r\n    sandbox: DOMSettableTokenList;\r\n}\r\n\r\ndeclare var onmspointerdown: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerdown\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var animationStartTime: number;\r\ndeclare var onmsgesturedoubletap: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msgesturedoubletap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmspointerhover: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerhover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmsgesturehold: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msgesturehold\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmspointermove: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointermove\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmsgesturechange: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msgesturechange\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmsgesturestart: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msgesturestart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmspointercancel: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointercancel\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmsgestureend: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msgestureend\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmsgesturetap: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msgesturetap\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmspointerout: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerout\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var msAnimationStartTime: number;\r\ndeclare var applicationCache: ApplicationCache;\r\ndeclare var onmsinertiastart: (ev: any) => any;\r\ndeclare function addEventListener(type: \"msinertiastart\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onmspointerover: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerover\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onpopstate: (ev: PopStateEvent) => any;\r\ndeclare function addEventListener(type: \"popstate\", listener: (ev: PopStateEvent) => any, useCapture?: boolean): void;\r\ndeclare var onmspointerup: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerup\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare function msCancelRequestAnimationFrame(handle: number): void;\r\ndeclare function matchMedia(mediaQuery: string): MediaQueryList;\r\ndeclare function cancelAnimationFrame(handle: number): void;\r\ndeclare function msIsStaticHTML(html: string): boolean;\r\ndeclare function msMatchMedia(mediaQuery: string): MediaQueryList;\r\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\r\ndeclare function msRequestAnimationFrame(callback: FrameRequestCallback): number;\r\ndeclare function btoa(rawString: string): string;\r\ndeclare function atob(encodedString: string): string;\r\ndeclare var msIndexedDB: IDBFactory;\r\ndeclare var indexedDB: IDBFactory;\r\ndeclare var console: Console;\r\n\r\n/////////////////////////////\r\n/// IE11 APIs \r\n/////////////////////////////\r\n\r\n\r\n\r\ninterface StoreExceptionsInformation extends ExceptionInformation {\r\n    siteName?: string;\r\n    explanationString?: string;\r\n    detailURI?: string;\r\n}\r\n\r\ninterface StoreSiteSpecificExceptionsInformation extends StoreExceptionsInformation {\r\n    arrayOfDomainStrings?: Array<string>;\r\n}\r\n\r\ninterface ConfirmSiteSpecificExceptionsInformation extends ExceptionInformation {\r\n    arrayOfDomainStrings?: Array<string>;\r\n}\r\n\r\ninterface AlgorithmParameters {\r\n}\r\n\r\ninterface MutationObserverInit {\r\n    childList?: boolean;\r\n    attributes?: boolean;\r\n    characterData?: boolean;\r\n    subtree?: boolean;\r\n    attributeOldValue?: boolean;\r\n    characterDataOldValue?: boolean;\r\n    attributeFilter?: Array<string>;\r\n}\r\n\r\ninterface ExceptionInformation {\r\n    domain?: string;\r\n}\r\n\r\ninterface MsZoomToOptions {\r\n    contentX?: number;\r\n    contentY?: number;\r\n    viewportX?: string;\r\n    viewportY?: string;\r\n    scaleFactor?: number;\r\n    animate?: string;\r\n}\r\n\r\ninterface DeviceAccelerationDict {\r\n    x?: number;\r\n    y?: number;\r\n    z?: number;\r\n}\r\n\r\ninterface DeviceRotationRateDict {\r\n    alpha?: number;\r\n    beta?: number;\r\n    gamma?: number;\r\n}\r\n\r\ninterface Algorithm {\r\n    name?: string;\r\n    params?: AlgorithmParameters;\r\n}\r\n\r\ninterface NavigatorID {\r\n    product: string;\r\n    vendor: string;\r\n}\r\ndeclare var NavigatorID: {\r\n    prototype: NavigatorID;\r\n    new (): NavigatorID;\r\n}\r\n\r\ninterface HTMLBodyElement {\r\n    onpageshow: (ev: PageTransitionEvent) => any;\r\n    addEventListener(type: \"pageshow\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\n    onpagehide: (ev: PageTransitionEvent) => any;\r\n    addEventListener(type: \"pagehide\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface MSExecAtPriorityFunctionCallback {\r\n    (...args: any[]): any;\r\n}\r\n\r\ninterface MSWindowExtensions {\r\n    captureEvents(): void;\r\n    releaseEvents(): void;\r\n}\r\ndeclare var MSWindowExtensions: {\r\n    prototype: MSWindowExtensions;\r\n    new (): MSWindowExtensions;\r\n}\r\n\r\ninterface MSGraphicsTrust {\r\n    status: string;\r\n    constrictionActive: boolean;\r\n}\r\ndeclare var MSGraphicsTrust: {\r\n    prototype: MSGraphicsTrust;\r\n    new (): MSGraphicsTrust;\r\n}\r\n\r\ninterface AudioTrack {\r\n    sourceBuffer: SourceBuffer;\r\n}\r\n\r\ninterface DragEvent {\r\n    msConvertURL(file: File, targetType: string, targetURL?: string): boolean;\r\n}\r\n\r\ninterface SubtleCrypto {\r\n    unwrapKey(wrappedKey: ArrayBufferView, keyAlgorithm: any, keyEncryptionKey: Key, extractable?: boolean, keyUsages?: string[]): KeyOperation;\r\n    encrypt(algorithm: any, key: Key, buffer?: ArrayBufferView): CryptoOperation;\r\n    importKey(format: string, keyData: ArrayBufferView, algorithm: any, extractable?: boolean, keyUsages?: string[]): KeyOperation;\r\n    wrapKey(key: Key, keyEncryptionKey: Key, keyWrappingAlgorithm: any): KeyOperation;\r\n    verify(algorithm: any, key: Key, signature: ArrayBufferView, buffer?: ArrayBufferView): CryptoOperation;\r\n    deriveKey(algorithm: any, baseKey: Key, derivedKeyType: any, extractable?: boolean, keyUsages?: string[]): KeyOperation;\r\n    digest(algorithm: any, buffer?: ArrayBufferView): CryptoOperation;\r\n    exportKey(format: string, key: Key): KeyOperation;\r\n    generateKey(algorithm: any, extractable?: boolean, keyUsages?: string[]): KeyOperation;\r\n    sign(algorithm: any, key: Key, buffer?: ArrayBufferView): CryptoOperation;\r\n    decrypt(algorithm: any, key: Key, buffer?: ArrayBufferView): CryptoOperation;\r\n}\r\ndeclare var SubtleCrypto: {\r\n    prototype: SubtleCrypto;\r\n    new (): SubtleCrypto;\r\n}\r\n\r\ninterface Crypto extends RandomSource {\r\n    subtle: SubtleCrypto;\r\n}\r\ndeclare var Crypto: {\r\n    prototype: Crypto;\r\n    new (): Crypto;\r\n}\r\n\r\ninterface VideoPlaybackQuality {\r\n    creationTime: number;\r\n    totalVideoFrames: number;\r\n    droppedVideoFrames: number;\r\n}\r\ndeclare var VideoPlaybackQuality: {\r\n    prototype: VideoPlaybackQuality;\r\n    new (): VideoPlaybackQuality;\r\n}\r\n\r\ninterface Window {\r\n    onpageshow: (ev: PageTransitionEvent) => any;\r\n    addEventListener(type: \"pageshow\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\n    ondevicemotion: (ev: DeviceMotionEvent) => any;\r\n    addEventListener(type: \"devicemotion\", listener: (ev: DeviceMotionEvent) => any, useCapture?: boolean): void;\r\n    devicePixelRatio: number;\r\n    msCrypto: Crypto;\r\n    ondeviceorientation: (ev: DeviceOrientationEvent) => any;\r\n    addEventListener(type: \"deviceorientation\", listener: (ev: DeviceOrientationEvent) => any, useCapture?: boolean): void;\r\n    onmspointerenter: (ev: any) => any;\r\n    addEventListener(type: \"mspointerenter\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onpagehide: (ev: PageTransitionEvent) => any;\r\n    addEventListener(type: \"pagehide\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\n    onmspointerleave: (ev: any) => any;\r\n    addEventListener(type: \"mspointerleave\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Key {\r\n    algorithm: Algorithm;\r\n    type: string;\r\n    extractable: boolean;\r\n    keyUsage: string[];\r\n}\r\ndeclare var Key: {\r\n    prototype: Key;\r\n    new (): Key;\r\n}\r\n\r\ninterface TextTrackList extends EventTarget {\r\n    onaddtrack: (ev: any) => any;\r\n    addEventListener(type: \"addtrack\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface DeviceAcceleration {\r\n    y: number;\r\n    x: number;\r\n    z: number;\r\n}\r\ndeclare var DeviceAcceleration: {\r\n    prototype: DeviceAcceleration;\r\n    new (): DeviceAcceleration;\r\n}\r\n\r\ninterface Console {\r\n    count(countTitle?: string): void;\r\n    groupEnd(): void;\r\n    time(timerName?: string): void;\r\n    timeEnd(timerName?: string): void;\r\n    trace(): void;\r\n    group(groupTitle?: string): void;\r\n    dirxml(value: any): void;\r\n    debug(message?: string, ...optionalParams: any[]): void;\r\n    groupCollapsed(groupTitle?: string): void;\r\n    select(element: Element): void;\r\n}\r\n\r\ninterface MSNavigatorDoNotTrack {\r\n    removeSiteSpecificTrackingException(args: ExceptionInformation): boolean;\r\n    removeWebWideTrackingException(args: ExceptionInformation): boolean;\r\n    storeWebWideTrackingException(args: StoreExceptionsInformation): void;\r\n    storeSiteSpecificTrackingException(args: StoreSiteSpecificExceptionsInformation): void;\r\n    confirmSiteSpecificTrackingException(args: ConfirmSiteSpecificExceptionsInformation): boolean;\r\n    confirmWebWideTrackingException(args: ExceptionInformation): boolean;\r\n}\r\ndeclare var MSNavigatorDoNotTrack: {\r\n    prototype: MSNavigatorDoNotTrack;\r\n    new (): MSNavigatorDoNotTrack;\r\n}\r\n\r\ninterface HTMLImageElement {\r\n    crossOrigin: string;\r\n}\r\n\r\ninterface HTMLAllCollection extends HTMLCollection {\r\n    namedItem(name: string): Element;\r\n}\r\ndeclare var HTMLAllCollection: {\r\n    prototype: HTMLAllCollection;\r\n    new (): HTMLAllCollection;\r\n}\r\n\r\ninterface MSNavigatorExtensions {\r\n    language: string;\r\n}\r\ndeclare var MSNavigatorExtensions: {\r\n    prototype: MSNavigatorExtensions;\r\n    new (): MSNavigatorExtensions;\r\n}\r\n\r\ninterface AesGcmEncryptResult {\r\n    ciphertext: ArrayBuffer;\r\n    tag: ArrayBuffer;\r\n}\r\ndeclare var AesGcmEncryptResult: {\r\n    prototype: AesGcmEncryptResult;\r\n    new (): AesGcmEncryptResult;\r\n}\r\n\r\ninterface CSSStyleDeclaration {\r\n    alignItems: string;\r\n    borderImageSource: string;\r\n    flexBasis: string;\r\n    borderImageWidth: string;\r\n    borderImageRepeat: string;\r\n    order: string;\r\n    flex: string;\r\n    alignContent: string;\r\n    msImeAlign: string;\r\n    flexShrink: string;\r\n    flexGrow: string;\r\n    borderImageSlice: string;\r\n    flexWrap: string;\r\n    borderImageOutset: string;\r\n    flexDirection: string;\r\n    flexFlow: string;\r\n    borderImage: string;\r\n    justifyContent: string;\r\n    alignSelf: string;\r\n    msTextCombineHorizontal: string;\r\n}\r\n\r\ninterface HTMLSourceElement {\r\n    msKeySystem: string;\r\n}\r\n\r\ninterface NavigationCompletedEvent extends NavigationEvent {\r\n    webErrorStatus: number;\r\n    isSuccess: boolean;\r\n}\r\ndeclare var NavigationCompletedEvent: {\r\n    prototype: NavigationCompletedEvent;\r\n    new (): NavigationCompletedEvent;\r\n}\r\n\r\ninterface MutationRecord {\r\n    oldValue: string;\r\n    previousSibling: Node;\r\n    addedNodes: NodeList;\r\n    attributeName: string;\r\n    removedNodes: NodeList;\r\n    target: Node;\r\n    nextSibling: Node;\r\n    attributeNamespace: string;\r\n    type: string;\r\n}\r\ndeclare var MutationRecord: {\r\n    prototype: MutationRecord;\r\n    new (): MutationRecord;\r\n}\r\n\r\ninterface Document extends MSDocumentExtensions {\r\n    msFullscreenEnabled: boolean;\r\n    onmsfullscreenerror: (ev: any) => any;\r\n    addEventListener(type: \"msfullscreenerror\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerenter: (ev: any) => any;\r\n    addEventListener(type: \"mspointerenter\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msFullscreenElement: Element;\r\n    onmsfullscreenchange: (ev: any) => any;\r\n    addEventListener(type: \"msfullscreenchange\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerleave: (ev: any) => any;\r\n    addEventListener(type: \"mspointerleave\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msExitFullscreen(): void;\r\n}\r\n\r\ninterface MimeTypeArray {\r\n    length: number;\r\n    item(index: number): Plugin;\r\n    [index: number]: Plugin;\r\n    namedItem(type: string): Plugin;\r\n}\r\ndeclare var MimeTypeArray: {\r\n    prototype: MimeTypeArray;\r\n    new (): MimeTypeArray;\r\n}\r\n\r\ninterface HTMLMediaElement {\r\n    msPlayToPreferredSourceUri: string;\r\n    onmsneedkey: (ev: MSMediaKeyNeededEvent) => any;\r\n    addEventListener(type: \"msneedkey\", listener: (ev: MSMediaKeyNeededEvent) => any, useCapture?: boolean): void;\r\n    msKeys: MSMediaKeys;\r\n    msGraphicsTrustStatus: MSGraphicsTrust;\r\n    msSetMediaKeys(mediaKeys: MSMediaKeys): void;\r\n    addTextTrack(kind: string, label?: string, language?: string): TextTrack;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface TextTrack {\r\n    addCue(cue: TextTrackCue): void;\r\n    removeCue(cue: TextTrackCue): void;\r\n}\r\n\r\ninterface KeyOperation extends EventTarget {\r\n    oncomplete: (ev: any) => any;\r\n    addEventListener(type: \"complete\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onerror: (ev: any) => any;\r\n    addEventListener(type: \"error\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    result: any;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var KeyOperation: {\r\n    prototype: KeyOperation;\r\n    new (): KeyOperation;\r\n}\r\n\r\ninterface DOMStringMap {\r\n}\r\ndeclare var DOMStringMap: {\r\n    prototype: DOMStringMap;\r\n    new (): DOMStringMap;\r\n}\r\n\r\ninterface DeviceOrientationEvent extends Event {\r\n    gamma: number;\r\n    alpha: number;\r\n    absolute: boolean;\r\n    beta: number;\r\n    initDeviceOrientationEvent(type: string, bubbles: boolean, cancelable: boolean, alpha: number, beta: number, gamma: number, absolute: boolean): void;\r\n}\r\ndeclare var DeviceOrientationEvent: {\r\n    prototype: DeviceOrientationEvent;\r\n    new (): DeviceOrientationEvent;\r\n}\r\n\r\ninterface MSMediaKeyMessageEvent extends Event {\r\n    destinationURL: string;\r\n    message: Uint8Array;\r\n}\r\ndeclare var MSMediaKeyMessageEvent: {\r\n    prototype: MSMediaKeyMessageEvent;\r\n    new (): MSMediaKeyMessageEvent;\r\n}\r\n\r\ninterface MSMediaKeys {\r\n    keySystem: string;\r\n    createSession(type: string, initData: Uint8Array, cdmData?: Uint8Array): MSMediaKeySession;\r\n    isTypeSupported(keySystem: string, type?: string): boolean;\r\n}\r\ndeclare var MSMediaKeys: {\r\n    prototype: MSMediaKeys;\r\n    new (): MSMediaKeys;\r\n}\r\n\r\ninterface MSHTMLWebViewElement extends HTMLElement {\r\n    documentTitle: string;\r\n    width: number;\r\n    src: string;\r\n    canGoForward: boolean;\r\n    height: number;\r\n    canGoBack: boolean;\r\n    navigateWithHttpRequestMessage(requestMessage: any): void;\r\n    goBack(): void;\r\n    navigate(uri: string): void;\r\n    stop(): void;\r\n    navigateToString(contents: string): void;\r\n    captureSelectedContentToDataPackageAsync(): MSWebViewAsyncOperation;\r\n    capturePreviewToBlobAsync(): MSWebViewAsyncOperation;\r\n    refresh(): void;\r\n    goForward(): void;\r\n    navigateToLocalStreamUri(source: string, streamResolver: any): void;\r\n    invokeScriptAsync(scriptName: string, ...args: any[]): MSWebViewAsyncOperation;\r\n    buildLocalStreamUri(contentIdentifier: string, relativePath: string): string;\r\n}\r\ndeclare var MSHTMLWebViewElement: {\r\n    prototype: MSHTMLWebViewElement;\r\n    new (): MSHTMLWebViewElement;\r\n}\r\n\r\ninterface NavigationEvent extends Event {\r\n    uri: string;\r\n}\r\ndeclare var NavigationEvent: {\r\n    prototype: NavigationEvent;\r\n    new (): NavigationEvent;\r\n}\r\n\r\ninterface Element {\r\n    onmspointerenter: (ev: any) => any;\r\n    addEventListener(type: \"mspointerenter\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onmspointerleave: (ev: any) => any;\r\n    addEventListener(type: \"mspointerleave\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msZoomTo(args: MsZoomToOptions): void;\r\n    msGetUntransformedBounds(): ClientRect;\r\n    msRequestFullscreen(): void;\r\n}\r\n\r\ninterface RandomSource {\r\n    getRandomValues(array: ArrayBufferView): ArrayBufferView;\r\n}\r\n\r\ninterface XMLHttpRequest {\r\n    msCaching: string;\r\n    msCachingEnabled(): boolean;\r\n    overrideMimeType(mime: string): void;\r\n}\r\n\r\ninterface SourceBuffer extends EventTarget {\r\n    updating: boolean;\r\n    appendWindowStart: number;\r\n    appendWindowEnd: number;\r\n    buffered: TimeRanges;\r\n    timestampOffset: number;\r\n    audioTracks: AudioTrackList;\r\n    appendBuffer(data: ArrayBuffer): void;\r\n    remove(start: number, end: number): void;\r\n    abort(): void;\r\n    appendStream(stream: MSStream, maxSize?: number): void;\r\n}\r\ndeclare var SourceBuffer: {\r\n    prototype: SourceBuffer;\r\n    new (): SourceBuffer;\r\n}\r\n\r\ninterface MSInputMethodContext extends EventTarget {\r\n    oncandidatewindowshow: (ev: any) => any;\r\n    addEventListener(type: \"candidatewindowshow\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    target: HTMLElement;\r\n    compositionStartOffset: number;\r\n    oncandidatewindowhide: (ev: any) => any;\r\n    addEventListener(type: \"candidatewindowhide\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    oncandidatewindowupdate: (ev: any) => any;\r\n    addEventListener(type: \"candidatewindowupdate\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    compositionEndOffset: number;\r\n    getCompositionAlternatives(): string[];\r\n    getCandidateWindowClientRect(): ClientRect;\r\n    hasComposition(): boolean;\r\n    isCandidateWindowVisible(): boolean;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var MSInputMethodContext: {\r\n    prototype: MSInputMethodContext;\r\n    new (): MSInputMethodContext;\r\n}\r\n\r\ninterface DeviceRotationRate {\r\n    gamma: number;\r\n    alpha: number;\r\n    beta: number;\r\n}\r\ndeclare var DeviceRotationRate: {\r\n    prototype: DeviceRotationRate;\r\n    new (): DeviceRotationRate;\r\n}\r\n\r\ninterface PluginArray {\r\n    length: number;\r\n    refresh(reload?: boolean): void;\r\n    item(index: number): Plugin;\r\n    [index: number]: Plugin;\r\n    namedItem(name: string): Plugin;\r\n}\r\ndeclare var PluginArray: {\r\n    prototype: PluginArray;\r\n    new (): PluginArray;\r\n}\r\n\r\ninterface MSMediaKeyError {\r\n    systemCode: number;\r\n    code: number;\r\n    MS_MEDIA_KEYERR_SERVICE: number;\r\n    MS_MEDIA_KEYERR_HARDWARECHANGE: number;\r\n    MS_MEDIA_KEYERR_OUTPUT: number;\r\n    MS_MEDIA_KEYERR_DOMAIN: number;\r\n    MS_MEDIA_KEYERR_UNKNOWN: number;\r\n    MS_MEDIA_KEYERR_CLIENT: number;\r\n}\r\ndeclare var MSMediaKeyError: {\r\n    prototype: MSMediaKeyError;\r\n    new (): MSMediaKeyError;\r\n    MS_MEDIA_KEYERR_SERVICE: number;\r\n    MS_MEDIA_KEYERR_HARDWARECHANGE: number;\r\n    MS_MEDIA_KEYERR_OUTPUT: number;\r\n    MS_MEDIA_KEYERR_DOMAIN: number;\r\n    MS_MEDIA_KEYERR_UNKNOWN: number;\r\n    MS_MEDIA_KEYERR_CLIENT: number;\r\n}\r\n\r\ninterface Plugin {\r\n    length: number;\r\n    filename: string;\r\n    version: string;\r\n    name: string;\r\n    description: string;\r\n    item(index: number): MimeType;\r\n    [index: number]: MimeType;\r\n    namedItem(type: string): MimeType;\r\n}\r\ndeclare var Plugin: {\r\n    prototype: Plugin;\r\n    new (): Plugin;\r\n}\r\n\r\ninterface HTMLFrameSetElement {\r\n    onpageshow: (ev: PageTransitionEvent) => any;\r\n    addEventListener(type: \"pageshow\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\n    onpagehide: (ev: PageTransitionEvent) => any;\r\n    addEventListener(type: \"pagehide\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Screen extends EventTarget {\r\n    msOrientation: string;\r\n    onmsorientationchange: (ev: any) => any;\r\n    addEventListener(type: \"msorientationchange\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    msLockOrientation(orientations: string[]): boolean;\r\n    msUnlockOrientation(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\n\r\ninterface MediaSource extends EventTarget {\r\n    sourceBuffers: SourceBufferList;\r\n    duration: string;\r\n    readyState: any;\r\n    activeSourceBuffers: SourceBufferList;\r\n    addSourceBuffer(type: string): SourceBuffer;\r\n    endOfStream(error?: string): void;\r\n    isTypeSupported(type: string): boolean;\r\n    removeSourceBuffer(sourceBuffer: SourceBuffer): void;\r\n}\r\ndeclare var MediaSource: {\r\n    prototype: MediaSource;\r\n    new (): MediaSource;\r\n}\r\n\r\ninterface MediaError {\r\n    MS_MEDIA_ERR_ENCRYPTED: number;\r\n}\r\n//declare var MediaError: {\r\n//    prototype: MediaError;\r\n//    MS_MEDIA_ERR_ENCRYPTED: number;\r\n//}\r\n\r\ninterface SourceBufferList extends EventTarget {\r\n    length: number;\r\n    item(index: number): SourceBuffer;\r\n    [index: number]: SourceBuffer;\r\n}\r\ndeclare var SourceBufferList: {\r\n    prototype: SourceBufferList;\r\n    new (): SourceBufferList;\r\n}\r\n\r\ninterface XMLDocument extends Document {\r\n}\r\ndeclare var XMLDocument: {\r\n    prototype: XMLDocument;\r\n    new (): XMLDocument;\r\n}\r\n\r\ninterface DeviceMotionEvent extends Event {\r\n    rotationRate: DeviceRotationRate;\r\n    acceleration: DeviceAcceleration;\r\n    interval: number;\r\n    accelerationIncludingGravity: DeviceAcceleration;\r\n    initDeviceMotionEvent(type: string, bubbles: boolean, cancelable: boolean, acceleration: DeviceAccelerationDict, accelerationIncludingGravity: DeviceAccelerationDict, rotationRate: DeviceRotationRateDict, interval: number): void;\r\n}\r\ndeclare var DeviceMotionEvent: {\r\n    prototype: DeviceMotionEvent;\r\n    new (): DeviceMotionEvent;\r\n}\r\n\r\ninterface MimeType {\r\n    enabledPlugin: Plugin;\r\n    suffixes: string;\r\n    type: string;\r\n    description: string;\r\n}\r\ndeclare var MimeType: {\r\n    prototype: MimeType;\r\n    new (): MimeType;\r\n}\r\n\r\ninterface MSDocumentExtensions {\r\n    captureEvents(): void;\r\n    releaseEvents(): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n    dataset: DOMStringMap;\r\n    hidden: boolean;\r\n    msGetInputContext(): MSInputMethodContext;\r\n}\r\n\r\ninterface MutationObserver {\r\n    observe(target: Node, options: MutationObserverInit): void;\r\n    takeRecords(): MutationRecord[];\r\n    disconnect(): void;\r\n}\r\ndeclare var MutationObserver: {\r\n    prototype: MutationObserver;\r\n    new (): MutationObserver;\r\n}\r\n\r\ninterface AudioTrackList {\r\n    onremovetrack: (ev: PluginArray) => any;\r\n    //addEventListener(type: \"removetrack\", listener: (ev: PluginArray) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLObjectElement {\r\n    msPlayToPreferredSourceUri: string;\r\n    msPlayToPrimary: boolean;\r\n    msPlayToDisabled: boolean;\r\n    msPlayToSource: any;\r\n}\r\n\r\ninterface HTMLEmbedElement {\r\n    msPlayToPreferredSourceUri: string;\r\n    msPlayToPrimary: boolean;\r\n    msPlayToDisabled: boolean;\r\n    msPlayToSource: any;\r\n}\r\n\r\ninterface MSWebViewAsyncOperation extends EventTarget {\r\n    target: MSHTMLWebViewElement;\r\n    oncomplete: (ev: any) => any;\r\n    addEventListener(type: \"complete\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    error: DOMError;\r\n    onerror: (ev: any) => any;\r\n    addEventListener(type: \"error\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    readyState: number;\r\n    type: number;\r\n    result: any;\r\n    start(): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n    ERROR: number;\r\n    TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION: number;\r\n    TYPE_INVOKE_SCRIPT: number;\r\n    COMPLETED: number;\r\n    TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM: number;\r\n    STARTED: number;\r\n}\r\ndeclare var MSWebViewAsyncOperation: {\r\n    prototype: MSWebViewAsyncOperation;\r\n    new (): MSWebViewAsyncOperation;\r\n    ERROR: number;\r\n    TYPE_CREATE_DATA_PACKAGE_FROM_SELECTION: number;\r\n    TYPE_INVOKE_SCRIPT: number;\r\n    COMPLETED: number;\r\n    TYPE_CAPTURE_PREVIEW_TO_RANDOM_ACCESS_STREAM: number;\r\n    STARTED: number;\r\n}\r\n\r\ninterface ScriptNotifyEvent extends Event {\r\n    value: string;\r\n    callingUri: string;\r\n}\r\ndeclare var ScriptNotifyEvent: {\r\n    prototype: ScriptNotifyEvent;\r\n    new (): ScriptNotifyEvent;\r\n}\r\n\r\ninterface PerformanceNavigationTiming extends PerformanceEntry {\r\n    redirectStart: number;\r\n    domainLookupEnd: number;\r\n    responseStart: number;\r\n    domComplete: number;\r\n    domainLookupStart: number;\r\n    loadEventStart: number;\r\n    unloadEventEnd: number;\r\n    fetchStart: number;\r\n    requestStart: number;\r\n    domInteractive: number;\r\n    navigationStart: number;\r\n    connectEnd: number;\r\n    loadEventEnd: number;\r\n    connectStart: number;\r\n    responseEnd: number;\r\n    domLoading: number;\r\n    redirectEnd: number;\r\n    redirectCount: number;\r\n    unloadEventStart: number;\r\n    domContentLoadedEventStart: number;\r\n    domContentLoadedEventEnd: number;\r\n    type: string;\r\n}\r\ndeclare var PerformanceNavigationTiming: {\r\n    prototype: PerformanceNavigationTiming;\r\n    new (): PerformanceNavigationTiming;\r\n}\r\n\r\ninterface MSMediaKeyNeededEvent extends Event {\r\n    initData: Uint8Array;\r\n}\r\ndeclare var MSMediaKeyNeededEvent: {\r\n    prototype: MSMediaKeyNeededEvent;\r\n    new (): MSMediaKeyNeededEvent;\r\n}\r\n\r\ninterface MSManipulationEvent {\r\n    MS_MANIPULATION_STATE_SELECTING: number;\r\n    MS_MANIPULATION_STATE_COMMITTED: number;\r\n    MS_MANIPULATION_STATE_PRESELECT: number;\r\n    MS_MANIPULATION_STATE_DRAGGING: number;\r\n    MS_MANIPULATION_STATE_CANCELLED: number;\r\n}\r\n//declare var MSManipulationEvent: {\r\n//    prototype: MSManipulationEvent;\r\n//    MS_MANIPULATION_STATE_SELECTING: number;\r\n//    MS_MANIPULATION_STATE_COMMITTED: number;\r\n//    MS_MANIPULATION_STATE_PRESELECT: number;\r\n//    MS_MANIPULATION_STATE_DRAGGING: number;\r\n//    MS_MANIPULATION_STATE_CANCELLED: number;\r\n//}\r\n\r\ninterface LongRunningScriptDetectedEvent extends Event {\r\n    stopPageScriptExecution: boolean;\r\n    executionTime: number;\r\n}\r\ndeclare var LongRunningScriptDetectedEvent: {\r\n    prototype: LongRunningScriptDetectedEvent;\r\n    new (): LongRunningScriptDetectedEvent;\r\n}\r\n\r\ninterface MSAppView {\r\n    viewId: number;\r\n    close(): void;\r\n    postMessage(message: any, targetOrigin: string, ports?: any): void;\r\n}\r\ndeclare var MSAppView: {\r\n    prototype: MSAppView;\r\n    new (): MSAppView;\r\n}\r\n\r\ninterface PerfWidgetExternal {\r\n    maxCpuSpeed: number;\r\n    performanceCounterFrequency: number;\r\n    performanceCounter: number;\r\n    averagePaintTime: number;\r\n    activeNetworkRequestCount: number;\r\n    paintRequestsPerSecond: number;\r\n    repositionWindow(x: number, y: number): void;\r\n    getRecentMemoryUsage(last: number): any;\r\n    getMemoryUsage(): number;\r\n    resizeWindow(width: number, height: number): void;\r\n    getProcessCpuUsage(): number;\r\n    removeEventListener(eventType: string, callback: (ev: any) => any): void;\r\n    getRecentCpuUsage(last: number): any;\r\n    addEventListener(eventType: string, callback: (ev: any) => any): void;\r\n    getRecentPaintRequests(last: number): any;\r\n}\r\ndeclare var PerfWidgetExternal: {\r\n    prototype: PerfWidgetExternal;\r\n    new (): PerfWidgetExternal;\r\n}\r\n\r\ninterface PageTransitionEvent extends Event {\r\n    persisted: boolean;\r\n}\r\ndeclare var PageTransitionEvent: {\r\n    prototype: PageTransitionEvent;\r\n    new (): PageTransitionEvent;\r\n}\r\n\r\ninterface MutationCallback {\r\n    (mutations: MutationRecord[], observer: MutationObserver): void;\r\n}\r\n\r\ninterface HTMLDocument extends Document {\r\n}\r\ndeclare var HTMLDocument: {\r\n    prototype: HTMLDocument;\r\n    new (): HTMLDocument;\r\n}\r\n\r\ninterface KeyPair {\r\n    privateKey: Key;\r\n    publicKey: Key;\r\n}\r\ndeclare var KeyPair: {\r\n    prototype: KeyPair;\r\n    new (): KeyPair;\r\n}\r\n\r\ninterface MSApp {\r\n    getViewOpener(): MSAppView;\r\n    suppressSubdownloadCredentialPrompts(suppress: boolean): void;\r\n    execAsyncAtPriority(asynchronousCallback: MSExecAtPriorityFunctionCallback, priority: string, ...args: any[]): void;\r\n    isTaskScheduledAtPriorityOrHigher(priority: string): boolean;\r\n    execAtPriority(synchronousCallback: MSExecAtPriorityFunctionCallback, priority: string, ...args: any[]): any;\r\n    createNewView(uri: string): MSAppView;\r\n    getCurrentPriority(): string;\r\n    NORMAL: string;\r\n    HIGH: string;\r\n    IDLE: string;\r\n    CURRENT: string;\r\n}\r\n//declare var MSApp: {\r\n//    prototype: MSApp;\r\n//    NORMAL: string;\r\n//    HIGH: string;\r\n//    IDLE: string;\r\n//    CURRENT: string;\r\n//}\r\n\r\ninterface HTMLTrackElement {\r\n    readyState: number;\r\n    ERROR: number;\r\n    LOADING: number;\r\n    LOADED: number;\r\n    NONE: number;\r\n}\r\n//declare var HTMLTrackElement: {\r\n//    prototype: HTMLTrackElement;\r\n//    ERROR: number;\r\n//    LOADING: number;\r\n//    LOADED: number;\r\n//    NONE: number;\r\n//}\r\n\r\ninterface MSMediaKeySession extends EventTarget {\r\n    sessionId: string;\r\n    error: MSMediaKeyError;\r\n    keySystem: string;\r\n    close(): void;\r\n    update(key: Uint8Array): void;\r\n}\r\ndeclare var MSMediaKeySession: {\r\n    prototype: MSMediaKeySession;\r\n    new (): MSMediaKeySession;\r\n}\r\n\r\ninterface HTMLVideoElement {\r\n    videoPlaybackQuality: VideoPlaybackQuality;\r\n}\r\n\r\ninterface UnviewableContentIdentifiedEvent extends NavigationEvent {\r\n    referrer: string;\r\n}\r\ndeclare var UnviewableContentIdentifiedEvent: {\r\n    prototype: UnviewableContentIdentifiedEvent;\r\n    new (): UnviewableContentIdentifiedEvent;\r\n}\r\n\r\ninterface CryptoOperation extends EventTarget {\r\n    algorithm: Algorithm;\r\n    oncomplete: (ev: any) => any;\r\n    addEventListener(type: \"complete\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onerror: (ev: any) => any;\r\n    addEventListener(type: \"error\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onprogress: (ev: any) => any;\r\n    addEventListener(type: \"progress\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    onabort: (ev: any) => any;\r\n    addEventListener(type: \"abort\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n    key: Key;\r\n    result: any;\r\n    abort(): void;\r\n    finish(): void;\r\n    process(buffer: ArrayBufferView): void;\r\n    addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\r\n}\r\ndeclare var CryptoOperation: {\r\n    prototype: CryptoOperation;\r\n    new (): CryptoOperation;\r\n}\r\n\r\ndeclare var onpageshow: (ev: PageTransitionEvent) => any;\r\ndeclare function addEventListener(type: \"pageshow\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\ndeclare var ondevicemotion: (ev: DeviceMotionEvent) => any;\r\ndeclare function addEventListener(type: \"devicemotion\", listener: (ev: DeviceMotionEvent) => any, useCapture?: boolean): void;\r\ndeclare var devicePixelRatio: number;\r\ndeclare var msCrypto: Crypto;\r\ndeclare var ondeviceorientation: (ev: DeviceOrientationEvent) => any;\r\ndeclare function addEventListener(type: \"deviceorientation\", listener: (ev: DeviceOrientationEvent) => any, useCapture?: boolean): void;\r\ndeclare var onmspointerenter: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerenter\", listener: (ev: any) => any, useCapture?: boolean): void;\r\ndeclare var onpagehide: (ev: PageTransitionEvent) => any;\r\ndeclare function addEventListener(type: \"pagehide\", listener: (ev: PageTransitionEvent) => any, useCapture?: boolean): void;\r\ndeclare var onmspointerleave: (ev: any) => any;\r\ndeclare function addEventListener(type: \"mspointerleave\", listener: (ev: any) => any, useCapture?: boolean): void;\r\n\r\n\r\n/////////////////////////////\r\n/// WorkerGlobalScope APIs \r\n/////////////////////////////\r\n// TODO: These are only available in a Web Worker - should be in a separate lib file\r\ndeclare function importScripts(...urls: string[]): void;\r\n\r\n\r\n/////////////////////////////\r\n/// Windows Script Host APIS\r\n/////////////////////////////\r\ndeclare var ActiveXObject: { new (s: string): any; };\r\n\r\ninterface ITextWriter {\r\n    Write(s: string): void;\r\n    WriteLine(s: string): void;\r\n    Close(): void;\r\n}\r\n\r\ndeclare var WScript: {\r\n    Echo(s: any): void;\r\n    StdErr: ITextWriter;\r\n    StdOut: ITextWriter;\r\n    Arguments: { length: number; Item(n: number): string; };\r\n    ScriptFullName: string;\r\n    Quit(exitCode?: number): number;\r\n}\r\n